# Automatically generated by k8s-staging-e2e-test-images.sh.

postsubmits:
  kubernetes/kubernetes:
    - name: post-kubernetes-push-e2e-agnhost-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/agnhost\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the agnhost image.
              - name: WHAT
                value: "agnhost"
    - name: post-kubernetes-push-e2e-apparmor-loader-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/apparmor-loader\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the apparmor-loader image.
              - name: WHAT
                value: "apparmor-loader"
    - name: post-kubernetes-push-e2e-busybox-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/busybox\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the busybox image.
              - name: WHAT
                value: "busybox"
    - name: post-kubernetes-push-e2e-cuda-vector-add-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/cuda-vector-add\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the cuda-vector-add image.
              - name: WHAT
                value: "cuda-vector-add"
    - name: post-kubernetes-push-e2e-cuda-vector-add-old-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/cuda-vector-add-old\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the cuda-vector-add-old image.
              - name: WHAT
                value: "cuda-vector-add-old"
    - name: post-kubernetes-push-e2e-echoserver-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/echoserver\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the echoserver image.
              - name: WHAT
                value: "echoserver"
    - name: post-kubernetes-push-e2e-glusterdynamic-provisioner-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/glusterdynamic-provisioner\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the glusterdynamic-provisioner image.
              - name: WHAT
                value: "glusterdynamic-provisioner"
    - name: post-kubernetes-push-e2e-httpd-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/httpd\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the httpd image.
              - name: WHAT
                value: "httpd"
    - name: post-kubernetes-push-e2e-httpd-new-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/httpd-new\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the httpd-new image.
              - name: WHAT
                value: "httpd-new"
    - name: post-kubernetes-push-e2e-ipc-utils-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/ipc-utils\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the ipc-utils image.
              - name: WHAT
                value: "ipc-utils"
    - name: post-kubernetes-push-e2e-jessie-dnsutils-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/jessie-dnsutils\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the jessie-dnsutils image.
              - name: WHAT
                value: "jessie-dnsutils"
    - name: post-kubernetes-push-e2e-kitten-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/kitten\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the kitten image.
              - name: WHAT
                value: "kitten"
    - name: post-kubernetes-push-e2e-metadata-concealment-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/metadata-concealment\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the metadata-concealment image.
              - name: WHAT
                value: "metadata-concealment"
    - name: post-kubernetes-push-e2e-nautilus-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/nautilus\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the nautilus image.
              - name: WHAT
                value: "nautilus"
    - name: post-kubernetes-push-e2e-nginx-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/nginx\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the nginx image.
              - name: WHAT
                value: "nginx"
    - name: post-kubernetes-push-e2e-nginx-new-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/nginx-new\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the nginx-new image.
              - name: WHAT
                value: "nginx-new"
    - name: post-kubernetes-push-e2e-node-perf-tf-wide-deep-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/node-perf\/tf-wide-deep\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the node-perf/tf-wide-deep image.
              - name: WHAT
                value: "node-perf/tf-wide-deep"
    - name: post-kubernetes-push-e2e-node-perf-npb-ep-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/node-perf\/npb-ep\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the node-perf/npb-ep image.
              - name: WHAT
                value: "node-perf/npb-ep"
    - name: post-kubernetes-push-e2e-node-perf-npb-is-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/node-perf\/npb-is\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the node-perf/npb-is image.
              - name: WHAT
                value: "node-perf/npb-is"
    - name: post-kubernetes-push-e2e-nonewprivs-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/nonewprivs\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the nonewprivs image.
              - name: WHAT
                value: "nonewprivs"
    - name: post-kubernetes-push-e2e-nonroot-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/nonroot\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the nonroot image.
              - name: WHAT
                value: "nonroot"
    - name: post-kubernetes-push-e2e-perl-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/perl\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the perl image.
              - name: WHAT
                value: "perl"
    - name: post-kubernetes-push-e2e-pets-redis-installer-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/pets\/redis-installer\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the pets/redis-installer image.
              - name: WHAT
                value: "pets/redis-installer"
    - name: post-kubernetes-push-e2e-pets-peer-finder-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/pets\/peer-finder\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the pets/peer-finder image.
              - name: WHAT
                value: "pets/peer-finder"
    - name: post-kubernetes-push-e2e-pets-zookeeper-installer-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/pets\/zookeeper-installer\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the pets/zookeeper-installer image.
              - name: WHAT
                value: "pets/zookeeper-installer"
    - name: post-kubernetes-push-e2e-redis-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/redis\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the redis image.
              - name: WHAT
                value: "redis"
    - name: post-kubernetes-push-e2e-regression-issue-74839-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/regression-issue-74839\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the regression-issue-74839 image.
              - name: WHAT
                value: "regression-issue-74839"
    - name: post-kubernetes-push-e2e-resource-consumer-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/resource-consumer\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the resource-consumer image.
              - name: WHAT
                value: "resource-consumer"
    - name: post-kubernetes-push-e2e-sample-apiserver-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/sample-apiserver\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the sample-apiserver image.
              - name: WHAT
                value: "sample-apiserver"
    - name: post-kubernetes-push-e2e-sample-device-plugin-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/sample-device-plugin\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the sample-device-plugin image.
              - name: WHAT
                value: "sample-device-plugin"
    - name: post-kubernetes-push-e2e-volume-iscsi-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/volume\/iscsi\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the volume/iscsi image.
              - name: WHAT
                value: "volume/iscsi"
    - name: post-kubernetes-push-e2e-volume-rbd-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      decoration_config:
        timeout: 4h
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/volume\/rbd\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the volume/rbd image.
              - name: WHAT
                value: "volume/rbd"
    - name: post-kubernetes-push-e2e-volume-nfs-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/volume\/nfs\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the volume/nfs image.
              - name: WHAT
                value: "volume/nfs"
    - name: post-kubernetes-push-e2e-volume-gluster-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/volume\/gluster\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the volume/gluster image.
              - name: WHAT
                value: "volume/gluster"
    - name: post-kubernetes-push-e2e-windows-servercore-cache-test-images
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: release-managers
          - org: kubernetes
            slug: test-infra-admins
        github_users:
          - aojea
          - chewong
          - claudiubelu
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^test\/images\/windows-servercore-cache\/'
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - ^master$
        - ^main$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-e2e-test-images
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
              - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
              - --build-dir=.
              - test/images
            env:
              # By default, the E2E test image's WHAT is all-conformance.
              # We override that with the windows-servercore-cache image.
              - name: WHAT
                value: "windows-servercore-cache"

periodics:
  # NOTE(claudiub): The base image for the Windows E2E test images is nanoserver.
  # In most cases, that is sufficient. But in some cases, we are missing some DLLs.
  # We can fetch those DLLs from Windows servercore images, but they are very large
  # (2GB compressed), while the DLLs are only a few megabytes in size. We can build
  # a monthly DLL cache image and use the cache instead.
  # For more info: https://github.com/kubernetes/kubernetes/pull/93889
  - name: kubernetes-e2e-windows-servercore-cache
    rerun_auth_config:
      github_team_slugs:
        - org: kubernetes
          slug: test-infra-admins
        - org: kubernetes
          slug: release-managers
      github_users:
        - aojea
        - chewong
        - claudiubelu
        - mkumatag
    # Since the servercore image is updated once per month, we only need to build this
    # cache once per month.
    interval: 744h
    cluster: k8s-infra-prow-build-trusted
    annotations:
      testgrid-dashboards: sig-testing-images, sig-k8s-infra-gcb
    decorate: true
    extra_refs:
      # This also becomes the current directory for run.sh and thus
      # the cloud image build.
      - org: kubernetes
        repo: kubernetes
        base_ref: master
    spec:
      serviceAccountName: gcb-builder
      containers:
        - image: gcr.io/k8s-staging-test-infra/image-builder:v20241224-fe22c549c1
          command:
            - /run.sh
          args:
            - --project=k8s-staging-e2e-test-images
            - --scratch-bucket=gs://k8s-staging-e2e-test-images-gcb
            - --env-passthrough=PULL_BASE_REF,PULL_BASE_SHA,WHAT
            - --build-dir=.
            - test/images
          env:
            # We need to emulate a pull job for the cloud build to work the same
            # way as it usually does.
            - name: PULL_BASE_REF
              value: master
            # By default, the E2E test image's WHAT is all-conformance. We override that with
            # the windows-servercore-cache image.
            - name: WHAT
              value: "windows-servercore-cache"
