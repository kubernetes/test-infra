# Automatically generated by k8s-staging-perf-tests.sh.

postsubmits:
  kubernetes/perf-tests:
    - name: post-kubernetes-push-perf-tests-access-tokens
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/access-tokens\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "access-tokens"
    - name: post-kubernetes-push-perf-tests-containerd
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/containerd\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "containerd"
    - name: post-kubernetes-push-perf-tests-networknetperfbenchmark
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/network\/netperfbenchmark\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "network/netperfbenchmark"
    - name: post-kubernetes-push-perf-tests-probes
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/probes\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "probes"
    - name: post-kubernetes-push-perf-tests-request-benchmark
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/request-benchmark\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "request-benchmark"
    - name: post-kubernetes-push-perf-tests-scratch
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/scratch\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "scratch"
    - name: post-kubernetes-push-perf-tests-sleep
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/sleep\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "sleep"
    - name: post-kubernetes-push-perf-tests-watch-list
      rerun_auth_config:
        github_team_slugs:
          - org: kubernetes
            slug: sig-scalability-leads
        github_users:
          # TODO: Added for initial testing; remove after the job stabilizes.
          - mkumatag
      cluster: k8s-infra-prow-build-trusted
      annotations:
        testgrid-dashboards: sig-scalability-perf-tests, sig-k8s-infra-gcb
      decorate: true
      # we only need to run if the test images have been changed.
      run_if_changed: '^util-images\/watch-list\/'
      branches:
        - ^master$
      spec:
        serviceAccountName: gcb-builder
        containers:
          - image: gcr.io/k8s-staging-test-infra/image-builder:v20251029-79c2132152
            command:
              - /run.sh
            args:
              # this is the project GCB will run in, which is the same as the GCR
              # images are pushed to.
              - --project=k8s-staging-perf-tests
              # This is the same as above, but with -gcb appended.
              - --scratch-bucket=gs://k8s-staging-perf-tests-gcb
              - --env-passthrough=WHAT
              - --build-dir=.
              - util-images
            env:
              - name: WHAT
                value: "watch-list"
