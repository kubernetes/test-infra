# GENERATED FILE - DO NOT EDIT!
#
# Instead, modify dra.jinja and run `make generate-jobs`.
periodics:
  - name: ci-kind-dra
    cluster: eks-prow-build-cluster
    interval: 6h
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    annotations:
      testgrid-dashboards: sig-node-dynamic-resource-allocation, sig-release-master-informing
      description: Runs E2E tests for Dynamic Resource Allocation beta features against a Kubernetes master cluster created with sigs.k8s.io/kind
      testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
      fork-per-release: "true"
      fork-per-release-periodic-interval: 24h
      fork-per-release-replacements: latest-fast.txt -> latest-{{.Version}}.txt, https://dl.k8s.io/ci/fast -> https://dl.k8s.io/ci
    decorate: true
    decoration_config:
      timeout: 90m
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250422-9d0e6fd518-master
        command:
        - runner.sh
        args:
        - /bin/bash
        - -xce
        - |
          set -o pipefail
          # A CI job uses pre-built release artifacts and pulls necessary source files from GitHub.
          revision=$(curl --fail --silent --show-error --location ${CI_URL}/${LATEST_TXT})
          # Report what was tested.
          echo "{\"revision\":\"$revision\"}" >"${ARTIFACTS}/metadata.json"
          # git hash from e.g. v1.33.0-alpha.1.161+e62ce1c9db2dad
          hash=${revision/*+/}
          kind_yaml=$(curl --fail --silent --show-error --location "https://raw.githubusercontent.com/kubernetes/kubernetes/$hash/test/e2e/dra/kind.yaml")
          kind_node_source="${CI_URL}/$revision/kubernetes-server-linux-amd64.tar.gz"
          features=( )
          curl --fail --silent --show-error --location "${CI_URL}/$revision/kubernetes-test-linux-amd64.tar.gz" | tar zxvf -
          ginkgo=kubernetes/test/bin/ginkgo
          e2e_test=kubernetes/test/bin/e2e.test
          # The latest kind is assumed to work also for older release branches, should this job get forked.
          curl --fail --silent --show-error --location https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" kind
          kind build node-image --image=dra/node:latest "${kind_node_source}"
          GINKGO_E2E_PID=
          trap 'if [ "${GINKGO_E2E_PID}" ]; then kill -TERM "${GINKGO_E2E_PID}"; fi' TERM
          trap 'if [ "${GINKGO_E2E_PID}" ]; then kill -INT "${GINKGO_E2E_PID}"; fi' INT
          # Inject ClusterConfiguration which causes etcd to use /tmp
          # (https://github.com/kubernetes-sigs/kind/issues/845#issuecomment-1261248420).
          if ! echo "$kind_yaml" | grep -q '^kubeadmConfigPatches:'; then
              # Add kubeadmConfigPatches list before node list, there is none at the moment.
              kind_yaml=$(echo "$kind_yaml" | sed -e '/nodes:/ i\kubeadmConfigPatches:')
          fi
          kind_yaml=$(echo "$kind_yaml" | sed -e '/^kubeadmConfigPatches:/ a\- |\n  kind: ClusterConfiguration\n  etcd:\n    local:\n      dataDir: /tmp/etcd')
          # Additional features are not in kind.yaml, but they can be added at the end.
          kind create cluster --retain --config <(echo "${kind_yaml}"; for feature in ${features[@]}; do echo "  ${feature}: true"; done) --image dra/node:latest
          atexit () {
              kind export logs "${ARTIFACTS}/kind"
              kind delete cluster
          }
          trap atexit EXIT
          KUBECONFIG=${HOME}/.kube/config ${ginkgo} run --nodes=8 --timeout=24h --silence-skips --force-newlines --no-color --label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { OffByDefault, DynamicResourceAllocation$(for feature in ${features[@]}; do echo , ${feature}; done)} && !Flaky" ${e2e_test} -- -provider=local -report-dir="${ARTIFACTS}" -report-complete-ginkgo -report-complete-junit &
          GINKGO_E2E_PID=$!
          wait "${GINKGO_E2E_PID}"
        env:
        - name: LATEST_TXT
          value: latest-fast.txt
        - name: CI_URL
          value: https://dl.k8s.io/ci/fast
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi

  - name: ci-kind-dra-all
    cluster: eks-prow-build-cluster
    interval: 6h
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    annotations:
      testgrid-dashboards: sig-node-dynamic-resource-allocation
      description: Runs E2E tests for Dynamic Resource Allocation alpha and beta features against a Kubernetes master cluster created with sigs.k8s.io/kind
      testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
    decorate: true
    decoration_config:
      timeout: 90m
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250422-9d0e6fd518-master
        command:
        - runner.sh
        args:
        - /bin/bash
        - -xce
        - |
          set -o pipefail
          # A CI job uses pre-built release artifacts and pulls necessary source files from GitHub.
          revision=$(curl --fail --silent --show-error --location ${CI_URL}/${LATEST_TXT})
          # Report what was tested.
          echo "{\"revision\":\"$revision\"}" >"${ARTIFACTS}/metadata.json"
          # git hash from e.g. v1.33.0-alpha.1.161+e62ce1c9db2dad
          hash=${revision/*+/}
          kind_yaml=$(curl --fail --silent --show-error --location "https://raw.githubusercontent.com/kubernetes/kubernetes/$hash/test/e2e/dra/kind.yaml")
          kind_node_source="${CI_URL}/$revision/kubernetes-server-linux-amd64.tar.gz"
          # Which DRA features exist can change over time.
          features=( $( curl --fail --silent --show-error --location "https://raw.githubusercontent.com/kubernetes/kubernetes/$hash/pkg/features/kube_features.go" | grep '"DRA'  | sed 's/.*"\(.*\)"/\1/' ) )
          : "Enabling DRA feature(s): ${features[*]}."
          curl --fail --silent --show-error --location "${CI_URL}/$revision/kubernetes-test-linux-amd64.tar.gz" | tar zxvf -
          ginkgo=kubernetes/test/bin/ginkgo
          e2e_test=kubernetes/test/bin/e2e.test
          # The latest kind is assumed to work also for older release branches, should this job get forked.
          curl --fail --silent --show-error --location https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" kind
          kind build node-image --image=dra/node:latest "${kind_node_source}"
          GINKGO_E2E_PID=
          trap 'if [ "${GINKGO_E2E_PID}" ]; then kill -TERM "${GINKGO_E2E_PID}"; fi' TERM
          trap 'if [ "${GINKGO_E2E_PID}" ]; then kill -INT "${GINKGO_E2E_PID}"; fi' INT
          # Inject ClusterConfiguration which causes etcd to use /tmp
          # (https://github.com/kubernetes-sigs/kind/issues/845#issuecomment-1261248420).
          if ! echo "$kind_yaml" | grep -q '^kubeadmConfigPatches:'; then
              # Add kubeadmConfigPatches list before node list, there is none at the moment.
              kind_yaml=$(echo "$kind_yaml" | sed -e '/nodes:/ i\kubeadmConfigPatches:')
          fi
          kind_yaml=$(echo "$kind_yaml" | sed -e '/^kubeadmConfigPatches:/ a\- |\n  kind: ClusterConfiguration\n  etcd:\n    local:\n      dataDir: /tmp/etcd')
          # Additional features are not in kind.yaml, but they can be added at the end.
          kind create cluster --retain --config <(echo "${kind_yaml}"; for feature in ${features[@]}; do echo "  ${feature}: true"; done) --image dra/node:latest
          atexit () {
              kind export logs "${ARTIFACTS}/kind"
              kind delete cluster
          }
          trap atexit EXIT
          KUBECONFIG=${HOME}/.kube/config ${ginkgo} run --nodes=8 --timeout=24h --silence-skips --force-newlines --no-color --label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { OffByDefault, DynamicResourceAllocation$(for feature in ${features[@]}; do echo , ${feature}; done)} && !Flaky" ${e2e_test} -- -provider=local -report-dir="${ARTIFACTS}" -report-complete-ginkgo -report-complete-junit &
          GINKGO_E2E_PID=$!
          wait "${GINKGO_E2E_PID}"
        env:
        - name: LATEST_TXT
          value: latest-fast.txt
        - name: CI_URL
          value: https://dl.k8s.io/ci/fast
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi

  - name: ci-node-e2e-crio-cgrpv1-dra
    cluster: k8s-infra-prow-build
    interval: 6h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-dynamic-resource-allocation, sig-node-cri-o, sig-release-master-informing
      description: Runs E2E node tests for Dynamic Resource Allocation beta features with CRI-O using cgroup v1
      testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
      fork-per-release: "true"
      fork-per-release-periodic-interval: 24h
      fork-per-release-replacements: latest-fast.txt -> latest-{{.Version}}.txt, https://dl.k8s.io/ci/fast -> https://dl.k8s.io/ci
    decorate: true
    decoration_config:
      timeout: 90m
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
      workdir: true
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250422-9d0e6fd518-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - '--label-filter=Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow'
        - --timeout=60m
        - --skip-regex= # Override kubetest2 default in https://github.com/kubernetes-sigs/kubetest2/blob/9f385d26316f5256755bb8fe333970aa5759ec7f/pkg/testers/node/node.go#L92
        - '--test-args=--feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=api/beta=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-serial.yaml
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        - name: GOPATH
          value: /go
        - name: KUBE_SSH_USER
          value: core
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi

  - name: ci-node-e2e-crio-cgrpv2-dra
    cluster: k8s-infra-prow-build
    interval: 6h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-dynamic-resource-allocation, sig-node-cri-o, sig-release-master-informing
      description: Runs E2E node tests for Dynamic Resource Allocation beta features with CRI-O using cgroup v2
      testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
      fork-per-release: "true"
      fork-per-release-periodic-interval: 24h
      fork-per-release-replacements: latest-fast.txt -> latest-{{.Version}}.txt, https://dl.k8s.io/ci/fast -> https://dl.k8s.io/ci
    decorate: true
    decoration_config:
      timeout: 90m
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
      workdir: true
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250422-9d0e6fd518-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - '--label-filter=Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow'
        - --timeout=60m
        - --skip-regex= # Override kubetest2 default in https://github.com/kubernetes-sigs/kubetest2/blob/9f385d26316f5256755bb8fe333970aa5759ec7f/pkg/testers/node/node.go#L92
        - '--test-args=--feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=api/beta=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-serial.yaml
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        - name: GOPATH
          value: /go
        - name: KUBE_SSH_USER
          value: core
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi

  - name: ci-node-e2e-containerd-1-7-dra
    cluster: k8s-infra-prow-build
    interval: 6h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-dynamic-resource-allocation, sig-node-containerd, sig-release-master-informing
      description: Runs E2E node tests for Dynamic Resource Allocation beta features with containerd 1.7
      testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
      fork-per-release: "true"
      fork-per-release-periodic-interval: 24h
      fork-per-release-replacements: latest-fast.txt -> latest-{{.Version}}.txt, https://dl.k8s.io/ci/fast -> https://dl.k8s.io/ci
    decorate: true
    decoration_config:
      timeout: 90m
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
      workdir: true
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250422-9d0e6fd518-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - '--label-filter=Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow'
        - --timeout=60m
        - --skip-regex= # Override kubetest2 default in https://github.com/kubernetes-sigs/kubetest2/blob/9f385d26316f5256755bb8fe333970aa5759ec7f/pkg/testers/node/node.go#L92
        - '--test-args=--feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=api/beta=true --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock --container-runtime-process-name=/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/dra/image-config-containerd-1.7.yaml
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi

  - name: ci-node-e2e-containerd-2-0-dra
    cluster: k8s-infra-prow-build
    interval: 6h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-dynamic-resource-allocation, sig-node-containerd, sig-release-master-informing
      description: Runs E2E node tests for Dynamic Resource Allocation beta features with containerd 2.0
      testgrid-alert-email: eduard.bartosh@intel.com, patrick.ohly@intel.com
      fork-per-release: "true"
      fork-per-release-periodic-interval: 24h
      fork-per-release-replacements: latest-fast.txt -> latest-{{.Version}}.txt, https://dl.k8s.io/ci/fast -> https://dl.k8s.io/ci
    decorate: true
    decoration_config:
      timeout: 90m
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
      workdir: true
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: containerd
      repo: containerd
      base_ref: release/2.0
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250422-9d0e6fd518-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - '--label-filter=Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow'
        - --timeout=60m
        - --skip-regex= # Override kubetest2 default in https://github.com/kubernetes-sigs/kubetest2/blob/9f385d26316f5256755bb8fe333970aa5759ec7f/pkg/testers/node/node.go#L92
        - '--test-args=--feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=api/beta=true --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock --container-runtime-process-name=/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-release-2.0/image-config.yaml
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi
