presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-containerd-gce
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    skip_branches:
    - release-\d+\.\d+   # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-create-test-group: "true"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --cluster=
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:RuntimeHandler\] --minStartupPods=8
        - --timeout=80m     # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: "4"
            memory: "6Gi"
          requests:
            cpu: "4"
            memory: "6Gi"
        securityContext:
          privileged: true
  - name: pull-kubernetes-node-e2e-containerd
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    always_run: true
    optional: false
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=65m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
        resources:
          limits:
            cpu: "4"
            memory: "6Gi"
          requests:
            cpu: "4"
            memory: "6Gi"
  - name: pull-kubernetes-node-e2e-containerd-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: NodeConformance
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd"'
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-arm64-e2e-containerd-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: NodeConformance
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-arm64.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: pull-kubernetes-node-arm64-e2e-containerd-serial-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-arm64.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: pull-kubernetes-node-arm64-ubuntu-serial-gce
    # this is functional duplicated with `pull-kubernetes-node-arm64-e2e-containerd-serial-ec2`, consider to remove one of them when either of them is green
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    optional: true
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
      - org: kubernetes
        repo: test-infra
        base_ref: master
        path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    annotations:
      fork-per-release: "true"
      testgrid-create-test-group: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-num-failures-to-alert: "10"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
          - kubetest2
          - noop
          - --test=node
          - --
          - --repo-root=.
          - --gcp-zone=us-central1-a
          - --parallelism=1
          - --focus-regex=\[Serial\]
          - --use-dockerized-build=true
          - --target-build-arch=linux/arm64
          - --skip-regex=\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[NodeFeature:NodeSwap\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
          - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/arm/image-config-serial.yaml
          - --timeout=180m
        securityContext:
          privileged: true
        env:
          - name: GOPATH
            value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-node-e2e-containerd-kubetest2
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 65m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
  - name: pull-kubernetes-node-e2e-containerd-features
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-create-test-group: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-node-e2e-containerd-features-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-e2e-containerd-features-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    decoration_config:
      timeout: 65m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-create-test-group: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-central1-b
        - --parallelism=8
        - --focus-regex=\[NodeFeature:.+\]
        - --skip-regex=\[Flaky\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
  - name: pull-kubernetes-node-e2e-containerd-alpha-features
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-alpha-features
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--feature-gates=AllAlpha=true,ImageVolume=false,EventedPLEG=false --service-feature-gates=ProcMountType=true,UserNamespacesSupport=true,ImageVolume=false --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-kubelet-serial-containerd
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 260m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
          - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]|\[NodeFeature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
          - --timeout=240m
          env:
          - name: GOPATH
            value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-kubelet-containerd-flaky
    always_run: false
    cluster: k8s-infra-prow-build
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd-flaky
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 260m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
          - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --timeout=4h --focus="\[Flaky\]" --skip="\[Benchmark\]|\[NodeFeature:Eviction\]"
          - --timeout=240m
          env:
          - name: GOPATH
            value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-kubelet-serial-containerd-alpha-features
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd-alpha-features
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 260m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
          - '--node-test-args=--feature-gates=AllAlpha=true --service-feature-gates=SidecarContainers=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          # Feature:DynamicResourceAllocation has it's own test jobs with the proper conditions set
          # DRA tests are covered here https://testgrid.k8s.io/sig-node-dynamic-resource-allocation
          - '--test_args=--nodes=1 --timeout=4h --label-filter="Serial && !Flaky && !Benchmark && !(NodeFeature: containsAny Eviction && Feature: containsAny CPUManager) && !(Feature: containsAny { MemoryManager, TopologyManager, DynamicResourceAllocation })"'
          - --timeout=240m
          env:
          - name: GOPATH
            value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-kubelet-serial-containerd-sidecar-containers
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd-sidecar-containers
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 260m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
          - '--node-test-args=--feature-gates=SidecarContainers=true --service-feature-gates=SidecarContainers=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          - '--test_args=--nodes=1 --timeout=4h --label-filter="Serial && NodeFeature: containsAny SidecarContainers && !Flaky && !Benchmark && !(NodeFeature: containsAny Eviction)"'
          - --timeout=240m
          env:
          - name: GOPATH
            value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-node-kubelet-serial-containerd-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-containerd-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-containerd-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Serial\]
        - --skip-regex=\[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
        - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
  - name: pull-kubernetes-node-kubelet-podresize
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-podresize
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
            - --node-test-args=--service-feature-gates="InPlacePodVerticalScaling=true" --feature-gates="InPlacePodVerticalScaling=true" --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
            - --node-tests=true
            - --provider=gce
            - --runtime-config=api/all=true
            - --test_args=--nodes=8 --skip="" --focus="\[Feature:InPlacePodVerticalScaling\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-kubelet-serial-podresources
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-e2e-podresources
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
            - --node-test-args=--service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true" --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
            - --node-tests=true
            - --provider=gce
            - --runtime-config=api/all=true
            - --test_args=--nodes=1 --skip="" --focus="\[Feature:PodLevelResources\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-e2e-alpha-ec2
    # duplicate job of ci-kubernetes-e2e-ec2-alpha-features to test changes in provider-aws-test-infra
    cluster: eks-prow-build-cluster
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-e2e-alpha-ec2
      description: Uses kubetest to run e2e tests (+Feature:many, -many) against a cluster created with kubetest2-ec2
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    always_run: false
    optional: true
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
      - org: kubernetes
        repo: release
        base_ref: master
        path_alias: k8s.io/release
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - bash
            - -c
            - |
              source $(go env GOPATH)/src/sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2/scripts/check-ami.sh
              GOPROXY=direct go install sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2@latest
              VERSION=$(curl -Ls https://dl.k8s.io/ci/fast/latest-fast.txt)
              kubetest2 ec2 \
               --stage https://dl.k8s.io/ci/fast/ \
               --version $VERSION \
               --feature-gates="AllAlpha=true,DisableCloudProviders=true,DisableKubeletCloudCredentialProviders=true,EventedPLEG=false,StorageVersionAPI=true,APIServerIdentity=true" \
               --runtime-config="api/all=true" \
               --up \
               --down \
               --test=ginkgo \
               -- \
               --test-args="--node-os-arch=$NODE_OS_ARCH --provider=aws --minStartupPods=8" \
               --test-package-url=https://dl.k8s.io/ \
               --test-package-dir=ci/fast \
               --test-package-marker=latest-fast.txt \
               --focus-regex="\[Feature:(AdmissionWebhookMatchConditions|InPlacePodVerticalScaling|SidecarContainers|StorageVersionAPI|PodPreset|StatefulSetAutoDeletePVC|ClusterTrustBundle|ClusterTrustBundleProjection)\]|Networking" \
               --skip-regex="\[Feature:(SCTPConnectivity|Volumes|Networking-Performance)\]|IPv6|csi-hostpath-v0" \
               --parallel=25
          env:
            - name: USE_DOCKERIZED_BUILD
              value: "true"
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: pull-kubernetes-node-kubelet-serial-cpu-manager
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-cpu-manager
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
            - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
            - --node-tests=true
            - --provider=gce
            - '--test_args=--nodes=1 --skip= --label-filter="Feature: containsAny CPUManager"'
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-cpu-manager-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        # TODO: enable --label-filter in kubetest2
        - --focus-regex=\[Feature:CPUManager\]
        - --skip-regex=\[Flaky\]|\[Slow\]
        - --test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
  - name: pull-kubernetes-node-kubelet-serial-topology-manager
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-topology-manager
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
            - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - '--test_args=--nodes=1 --label-filter="Feature: containsAny TopologyManager"'
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-topology-manager-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        env:
        - name: GOPATH
          value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:TopologyManager\]
        - --test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
  - name: pull-kubernetes-node-kubelet-serial-hugepages
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-hugepages
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-hugepages.yaml
            - '--node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - '--test_args=--nodes=1 --label-filter="Feature: containsAny HugePages"'
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-node-crio-cgrpv2-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-gce-e2e
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - '--test_args=--nodes=8 --label-filter="(NodeConformance || !(NodeFeature: isEmpty)) && !Flaky && !Slow && !Serial"'
        - --timeout=180m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-drop-infra-ctr.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-imagefs-e2e
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    max_concurrency: 12
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-imagefs-e2e
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --timeout=3h
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-imagefs.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-userns-e2e-serial
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-userns-e2e-serial
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--service-feature-gates="UserNamespacesSupport=true,ProcMountType=true" --feature-gates="UserNamespacesSupport=true,ProcMountType=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="\[NodeFeature:ProcMountType\]|\[NodeFeature:UserNamespacesSupport\]"
        - --timeout=180m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-userns.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-userns-e2e-serial-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-cgrpv2-userns-e2e-serial-kubetest2 to run
    always_run: false
    optional: true
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-userns-e2e-serial-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[NodeFeature:ProcMountType\]|\[NodeFeature:UserNamespacesSupport\]
        - '--test-args=--service-feature-gates="UserNamespacesSupport=true,ProcMountType=true" --feature-gates="UserNamespacesSupport=true,ProcMountType=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-userns.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-imagevolume-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-imagevolume-e2e
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--service-feature-gates="ImageVolume=true" --feature-gates="ImageVolume=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:ImageVolume\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-imagevolume-e2e-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-cgrpv2-imagevolume-e2e-kubetest2 to run
    always_run: false
    optional: true
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-imagevolume-e2e-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeFeature:ImageVolume\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--service-feature-gates="ImageVolume=true" --feature-gates="ImageVolume=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-splitfs-e2e
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-splitfs-e2e
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - --timeout=3h
        - '--test-args=--ginkgo.timeout=3h --service-feature-gates="KubeletSeparateDiskGC=true" --feature-gates="KubeletSeparateDiskGC=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-splitfs.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv1-evented-pleg-gce-e2e
    always_run: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --env=KUBE_SSH_USER=core
            - --gcp-zone=us-west1-b
            - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service --feature-gates=EventedPLEG=true" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
            - --timeout=180m
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-evented-pleg.yaml
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          env:
            - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
              value: "1"
  - name: pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-cgrpv1-evented-pleg-e2e-kubetest2 to run
    always_run: false
    optional: true
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv1-evented-pleg-gce-e2e-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service --feature-gates=EventedPLEG=true" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-evented-pleg.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-cgrpv2-e2e-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgrpv2-gce-e2e-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
  - name: pull-crio-cgroupv1-node-e2e-features
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv1-node-e2e-features to run
    always_run: false
    optional: true
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 440m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-node-crio-cgroupv1-node-e2e-features
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-kubelet-serial-crio-cgroupv1
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-crio-cgroupv1 to run
    always_run: false
    optional: true
    skip_report: false
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 4h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-crio-cgroupv1
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Serial\]
        - --skip-regex=\[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]|\[NodeFeature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
        - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-serial.yaml
        resources:
          limits:
            cpu: 4
            memory: 12Gi
          requests:
            cpu: 4
            memory: 12Gi
        env:
          - name: KUBE_SSH_KEY_PATH
            value: /etc/ssh-key-secret/ssh-private
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-kubelet-serial-crio-cgroupv2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-kubelet-serial-crio-cgroupv2 to run
    always_run: false
    optional: true
    skip_report: false
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 4h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-serial-crio-cgroupv2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Serial\]
        # *Manager jobs are skipped because they have corresponding test lanes with the right image
        # These jobs in serial get partially skipped and are long jobs.
        - --skip-regex=\[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]|\[NodeFeature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
        - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-serial.yaml
        resources:
          limits:
            cpu: 4
            memory: 12Gi
          requests:
            cpu: 4
            memory: 12Gi
        env:
          - name: KUBE_SSH_KEY_PATH
            value: /etc/ssh-key-secret/ssh-private
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-crio-e2e
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-gce-e2e
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
  - name: pull-kubernetes-node-crio-e2e-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-crio-e2e-kubetest2 to run
    always_run: false
    # if at all it is run and fails, don't block the PR
    optional: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 180m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-gce-e2e-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1.yaml
  - name: pull-crio-cgroupv1-node-e2e-hugepages
    cluster: k8s-infra-prow-build
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-kubelet-crio-cgroupv1-node-e2e-hugepages
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
          - --deployment=node
          - --env=KUBE_SSH_USER=core
          - --gcp-zone=us-west1-b
          - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --focus="\[Feature:HugePages\]"
          - --timeout=90m
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-hugepages.yaml
        env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-crio-cgroupv1-node-e2e-hugepages-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv1-node-e2e-hugepages-kubetest2 to run
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-kubelet-crio-cgroupv1-node-e2e-hugepages-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:HugePages\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-hugepages.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-crio-cgroupv2-node-e2e-hugepages
    cluster: k8s-infra-prow-build
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-kubelet-crio-cgroupv2-node-e2e-hugepages
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
          - --deployment=node
          - --env=KUBE_SSH_USER=core
          - --gcp-zone=us-west1-b
          - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --focus="\[Feature:HugePages\]"
          - --timeout=90m
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-hugepages.yaml
        env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-crio-cgroupv2-node-e2e-hugepages-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv2-node-e2e-hugepages-kubetest2 to run
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-kubelet-crio-cgroupv2-node-e2e-hugepages-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:HugePages\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-hugepages.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-crio-cgroupv1-node-e2e-resource-managers
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv1-node-e2e-resource-managers
      description: "Executes CPU, Memory and Topology manager e2e tests for crio"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --env=KUBE_SSH_USER=core
            - --gcp-zone=us-west1-b
            - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --focus="\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]"
            - --timeout=90m
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-resource-managers.yaml
          env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-crio-cgroupv1-node-e2e-resource-managers-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv1-node-e2e-resource-managers-kubetest2 to run
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv1-node-e2e-resource-managers-kubetest2
      description: "Executes CPU, Memory and Topology manager e2e tests for crio"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-resource-managers.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-crio-cgroupv2-node-e2e-resource-managers
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv2-node-e2e-resource-managers
      description: "Executes CPU, Memory and Topology manager e2e tests for crio"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --env=KUBE_SSH_USER=core
            - --gcp-zone=us-west1-b
            - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --focus="\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]"
            - --timeout=90m
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-resource-managers.yaml
          env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
  - name: pull-crio-cgroupv2-node-e2e-resource-managers-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv2-node-e2e-resource-managers-kubetest2 to run
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv2-node-e2e-resource-managers-kubetest2
      description: "Executes CPU, Memory and Topology manager e2e tests for crio"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-resource-managers.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-kubelet-serial-memory-manager
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-serial-gce-e2e-memory-manager
      description: Executes memory manager e2e node tests
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
            - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --skip="" --focus="\[Feature:MemoryManager\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
  - name: pull-kubernetes-crio-node-memoryqos-cgrpv2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-crio-node-memoryqos-cgrpv2 to run
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 240m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-node-memoryqos-cgrpv2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--feature-gates=MemoryQoS=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-swap-fedora
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-swap-fedora
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--service-feature-gates="NodeSwap=true" --feature-gates="NodeSwap=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-swap-ubuntu-serial
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-swap-ubuntu-serial
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap.yaml
            - --env=KUBE_MASTER_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/master.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
            - --env=KUBE_NODE_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/node.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
            - '--node-test-args=--feature-gates=NodeSwap=true --service-feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --fail-swap-on=false --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --focus="\[Serial\]" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi

  - name: pull-kubernetes-node-swap-fedora-serial
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-swap-fedora-serial
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 290m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates="NodeSwap=true" --service-feature-gates="NodeSwap=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
        - --timeout=270m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"

  - name: pull-kubernetes-node-swap-conformance-ubuntu-serial
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-swap-conformance-ubuntu-serial
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --deployment=node
            - --gcp-zone=us-west1-b
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap.yaml
            - --env=KUBE_MASTER_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/master.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
            - --env=KUBE_NODE_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/node.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
            - '--node-test-args=--feature-gates=NodeSwap=true --service-feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --fail-swap-on=false --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
            - --node-tests=true
            - --provider=gce
            - --test_args=--nodes=1 --focus="NodeSwap" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeFeature:Eviction\]"
            - --timeout=180m
          env:
            - name: GOPATH
              value: /go
          resources:
            limits:
              cpu: 4
              memory: 6Gi
            requests:
              cpu: 4
              memory: 6Gi

  - name: pull-kubernetes-node-swap-conformance-fedora-serial
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-swap-conformance-fedora-serial
    always_run: false
    skip_report: false
    optional: true
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates="NodeSwap=true" --service-feature-gates="NodeSwap=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="NodeSwap" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeFeature:Eviction\]"
        - --timeout=180m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"


  - name: pull-kubernetes-node-kubelet-credential-provider
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    run_if_changed: '^(pkg\/credentialprovider\/|test\/e2e_node\/plugins\/gcp-credential-provider)'
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-e2e-credential-provider
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
          - --deployment=node
          - --gcp-zone=us-west1-b
          - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
          - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--feature-gates=DisableKubeletCloudCredentialProviders=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
          - --node-tests=true
          - --provider=gce
          - --test_args=--nodes=1 --focus="\[Feature:KubeletCredentialProviders\]" --skip="\[Flaky\]|\[Serial\]"
          - --timeout=180m
        env:
          - name: GOPATH
            value: /go
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi

  # This jobs runs e2e.test with a focus on tests for the Dynamic Resource Allocation feature (currently beta)
  # on a kind cluster with containerd updated to a version with CDI support.
  - name: pull-kubernetes-kind-dra
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits, sig-node-dynamic-resource-allocation
      testgrid-tab-name: pr-kind-dra
    decorate: true
    path_alias: k8s.io/kubernetes
    # Not relevant for most PRs.
    always_run: false
    # This covers most of the code related to dynamic resource allocation.
    # Periodic variant: ci-kind-dra
    run_if_changed: /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go
    optional: true
    decoration_config:
      timeout: 90m
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - /bin/sh
        - -xc
        - >
          make WHAT="github.com/onsi/ginkgo/v2/ginkgo k8s.io/kubernetes/test/e2e/e2e.test" &&
          curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" kind &&
          kind build node-image --image=dra/node:latest . &&
          trap 'kind export logs "${ARTIFACTS}/kind"; kind delete cluster' EXIT &&
          kind create cluster --retain --config test/e2e/dra/kind.yaml --image dra/node:latest &&
          KUBERNETES_PROVIDER=local KUBECONFIG=${HOME}/.kube/config GINKGO_PARALLEL_NODES=8 E2E_REPORT_DIR=${ARTIFACTS} GINKGO_TIMEOUT=1h hack/ginkgo-e2e.sh -ginkgo.label-filter='Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow'

        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
          limits:
            memory: "9000Mi"
            cpu: 2000m

  # This jobs runs e2e.test with a focus on tests for the Dynamic Resource Allocation feature (partly alpha, partly beta)
  # on a kind cluster with containerd updated to a version with CDI support.
  #
  # Compared to pull-kubernetes-dra, this one enables all DRA-related features.
  - name: pull-kubernetes-kind-dra-all
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits, sig-node-dynamic-resource-allocation
      testgrid-tab-name: pr-kind-dra-all
    decorate: true
    path_alias: k8s.io/kubernetes
    # Not relevant for most PRs.
    always_run: false
    # This covers most of the code related to dynamic resource allocation.
    # Periodic variant: ci-kind-dra-all
    run_if_changed: /(dra|dynamicresources|resourceclaim|deviceclass|resourceslice|resourceclaimtemplate|dynamic-resource-allocation|pkg/apis/resource|api/resource)/.*.go
    # The tests might still be flaky or this job might get triggered accidentally for
    # an unrelated PR.
    optional: true
    decoration_config:
      timeout: 90m
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - /bin/bash
        - -xc
        - |
          set -ex
          make WHAT="github.com/onsi/ginkgo/v2/ginkgo k8s.io/kubernetes/test/e2e/e2e.test"
          curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" kind
          kind build node-image --image=dra/node:latest .
          trap 'kind export logs "${ARTIFACTS}/kind"; kind delete cluster' EXIT
          # Which DRA features exist depends on the PR that is being tested.
          features=( $(grep '"DRA' pkg/features/kube_features.go | sed 's/.*"\(.*\)"/\1/') )
          echo "Enabling DRA feature(s): ${features[*]}."
          # Those additional features are not in kind.yaml, but they can be added at the end.
          kind create cluster --retain --config <(cat test/e2e/dra/kind.yaml; for feature in ${features}; do echo "  ${feature}: true"; done) --image dra/node:latest
          KUBERNETES_PROVIDER=local KUBECONFIG=${HOME}/.kube/config GINKGO_PARALLEL_NODES=8 E2E_REPORT_DIR=${ARTIFACTS} GINKGO_TIMEOUT=1h hack/ginkgo-e2e.sh -ginkgo.label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Alpha, Beta, DynamicResourceAllocation$(for feature in ${features}; do echo , ${feature}; done)} && !Flaky && !Slow"

        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            # these are both a bit below peak usage during build
            # this is mostly for building kubernetes
            memory: "9000Mi"
            # during the tests more like 3-20m is used
            cpu: 2000m
          limits:
            memory: "9000Mi"
            cpu: 2000m

  - name: pull-kubernetes-e2e-gce-kubelet-credential-provider
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    run_if_changed: '^(pkg\/credentialprovider\/|test\/e2e_node\/plugins\/gcp-credential-provider)'
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-cluster-e2e-credential-provider
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
          - --build=quick
          - --cluster=
          - --env=ENABLE_AUTH_PROVIDER_GCP=true
          - --env=KUBE_FEATURE_GATES=DisableKubeletCloudCredentialProviders=true
          - --gcp-zone=us-west1-b
          - --gcp-node-image=gci
          - --gcp-nodes=1
          - --provider=gce
          - --ginkgo-parallel=10
          - --test_args=--ginkgo.focus=\[Feature:KubeletCredentialProviders\]
          - --timeout=180m
        env:
          - name: GOPATH
            value: /go
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e-features
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e-features
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 200m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 200m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=180m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e-serial
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e-serial
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 260m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2-serial.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=containerd --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
        - --timeout=240m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv2-containerd-node-e2e-eviction
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv2-containerd-node-e2e-eviction
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 320m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-eviction.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=containerd --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --timeout=300m --focus="\[NodeFeature:Eviction\]"
        - --timeout=300m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-crio-cgroupv1-node-e2e-eviction
    cluster: k8s-infra-prow-build
    skip_branches:
      - release-\d+\.\d+  # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    optional: true
    always_run: false
    max_concurrency: 12
    decorate: true
    decoration_config:
      timeout: 320m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="\[NodeFeature:Eviction\]" --timeout=300m
        - --timeout=300m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1.yaml
        env:
        - name: GOPATH
          value: /go
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv1-node-e2e-eviction
  - name: pull-crio-cgroupv1-node-e2e-eviction-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv1-node-e2e-eviction-kubetest2 to run
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 320m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv1-node-e2e-eviction-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[NodeFeature:Eviction\]
        - --skip-regex=""
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --timeout=300m
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-crio-cgroupv2-node-e2e-eviction
    cluster: k8s-infra-prow-build
    skip_branches:
      - release-\d+\.\d+  # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    optional: true
    always_run: false
    max_concurrency: 12
    decorate: true
    decoration_config:
      timeout: 320m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=1 --focus="\[NodeFeature:Eviction\]" --timeout=300m
        - --timeout=300m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
        env:
        - name: GOPATH
          value: /go
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv2-node-e2e-eviction
  - name: pull-crio-cgroupv2-node-e2e-eviction-kubetest2
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-crio-cgroupv2-node-e2e-eviction-kubetest2 to run
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 320m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv2-node-e2e-eviction-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=\[NodeFeature:Eviction\]
        - --skip-regex=""
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --timeout=300m
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-crio-cgroupv2-imagefs-separatedisktest
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 320m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv2-imagefs-e2e-separatedisktest
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=SeparateDiskTest
        - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-imagefs.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-crio-cgroupv2-splitfs-separate-disk
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 320m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-crio-cgroupv2-splitfs-separate-disk
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - --focus-regex=KubeletSeparateDiskGC
        - --skip-regex=""
        - '--test-args=--feature-gates="KubeletSeparateDiskGC=true" --service-feature-gates="KubeletSeparateDiskGC=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-splitfs.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: GOPATH
            value: /go
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-cos-cgroupv1-containerd-node-e2e
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv1-containerd-node-e2e
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv1/image-config-cgroupv1.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi
  - name: pull-kubernetes-cos-cgroupv1-containerd-node-e2e-features
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-cos-cgroupv1-containerd-node-e2e-features
    always_run: false
    optional: true
    cluster: k8s-infra-prow-build
    max_concurrency: 12
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv1/image-config-cgroupv1.yaml
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeFeature:.+\]|\[NodeFeature\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  #TODO(vinaykul,InPlacePodVerticalScaling): Remove this job once we have updated to a COS OS with containerd >= 1.6.9
  #     Until then, this job complements pull-kubernetes-e2e-gce-cos-alpha-features by running inplace pod resize e2e tests
  #     full-spectrum against containerd/main which has the necessary CRI support.
  - name: pull-kubernetes-e2e-inplace-pod-resize-containerd-main-v2
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    run_if_changed: 'test/e2e/node/pod_resize.go|pkg/kubelet/kubelet.go|pkg/kubelet/kubelet_pods.go|pkg/kubelet/kuberuntime/kuberuntime_manager.go'
    skip_report: true
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-gce-cluster-e2e-inplace-pod-resize-containerd-main-v2
      description: Executes inplace pod resize e2e tests with containerd/main and cgroupv2
    decorate: true
    decoration_config:
      timeout: 180m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --ginkgo-parallel=1
        - --build=quick
        - --cluster=
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd containerd-installation
        - --env=KUBE_FEATURE_GATES=InPlacePodVerticalScaling=true
        - --env=KUBE_MASTER_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/master.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
        - --env=KUBE_NODE_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/node.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/env-cgroupv2
        - --env=KUBELET_TEST_ARGS=--fail-cgroupv1=true --runtime-cgroups=/system.slice/containerd.service --cgroup-driver=systemd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --gcp-nodes=1
        - --runtime-config=api/all=true
        - --test_args=--ginkgo.focus=\[Feature:InPlacePodVerticalScaling\]
        - --timeout=150m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        securityContext:
          privileged: true

  - name: pull-kubernetes-node-e2e-containerd-standalone-mode-all-alpha
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-standalone-mode-all-alpha
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--standalone-mode=true --feature-gates=AllAlpha=true,EventedPLEG=false --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[Feature:StandaloneMode\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-containerd-standalone-mode
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-containerd-standalone-mode
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
        - --deployment=node
        - --gcp-zone=us-central1-b
        - '--node-test-args=--standalone-mode=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[Feature:StandaloneMode\]" --skip="\[Flaky\]|\[Serial\]"
        - --timeout=65m
        env:
        - name: GOPATH
          value: /go
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-crio-cgrpv1-dra
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    # Automatically testing with one container runtime in one configuration is sufficient to detect basic problems in kubelet early.
    # CRI-O was picked because it was solid for testing so far.
    # Periodic variant: ci-node-e2e-crio-cgrpv1-dra-features
    run_if_changed: (/dra/|/dynamicresources/|/resourceclaim/|/deviceclass/|/resourceslice/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_).*\.(go|yaml)
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits, sig-node-dynamic-resource-allocation
      testgrid-tab-name: pr-node-kubelet-crio-cgrpv1-dra
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates=DynamicResourceAllocation=true --service-feature-gates=DynamicResourceAllocation=true --runtime-config=api/beta=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - '--test_args=--timeout=1h --label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow"'
        - --timeout=65m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-serial.yaml
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-crio-cgrpv1-dra-kubetest2 # experimental alternative to pull-kubernetes-node-e2e-crio-cgrpv1-dra
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-e2e-crio-cgrpv1-dra-kubetest2 to run
    always_run: false
    # Don't run automatically while experimental!
    # run_if_changed: (/dra/|/dynamicresources/|/resourceclaim/|/deviceclass/|/resourceslice/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_).*\.(go|yaml)
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 90m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-crio-cgrpv1-dra-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - '--label-filter=Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf DynamicResourceAllocation && !Flaky && !Slow'
        - '--test-args=--feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=api/alpha=true,api/beta=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv1-serial.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"

  - name: pull-kubernetes-node-e2e-crio-cgrpv2-dra
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    # Automatically testing with one container runtime in one configuration is sufficient to detect basic problems in kubelet early.
    # CRI-O was picked because it was solid for testing so far.
    # Periodic variant: ci-node-e2e-cgrpv2-crio-dra
    # run_if_changed: (/dra/|/dynamicresources/|/resourceclaim/|/deviceclass/|/resourceslice/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_).*\.(go|yaml)
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits, sig-node-dynamic-resource-allocation
      testgrid-tab-name: pr-node-kubelet-crio-cgrpv2-dra
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --env=KUBE_SSH_USER=core
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates=DynamicResourceAllocation=true --service-feature-gates=DynamicResourceAllocation=true --runtime-config=api/beta=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --node-tests=true
        - --provider=gce
        - '--test_args=--timeout=1h --label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow"'
        - --timeout=65m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-serial.yaml
        env:
        - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
          value: "1"
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-crio-cgrpv2-dra-kubetest2 # experimental alternative to pull-kubernetes-node-e2e-crio-cgrpv2-dra
    cluster: k8s-infra-prow-build
    # explicitly needs /test pull-kubernetes-node-e2e-crio-cgrpv2-dra-kubetest2 to run
    always_run: false
    # Don't run automatically while experimental!
    # run_if_changed: (/dra/|/dynamicresources/|/resourceclaim/|/deviceclass/|/resourceslice/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_).*\.(go|yaml)
    optional: true
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    decoration_config:
      timeout: 90m
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    annotations:
      testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-crio-cgrpv2-dra-kubetest2
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=1
        - '--test-args=--ginkgo.timeout=1h --ginkgo.label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf DynamicResourceAllocation && !Flaky && !Slow" --feature-gates="DynamicResourceAllocation=true" --service-feature-gates="DynamicResourceAllocation=true" --runtime-config=api/alpha=true,api/beta=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-cgroupv2-serial.yaml
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
        env:
          - name: KUBE_SSH_USER
            value: core
          - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
            value: "1"
  - name: pull-kubernetes-node-e2e-containerd-1-7-dra
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    # Automatically testing with one container runtime in one configuration is sufficient to detect basic problems in kubelet early.
    # CRI-O was picked because it was solid for testing so far.
    # Periodic variant: ci-node-e2e-containerd-1-7-dra
    # run_if_changed: (/dra/|/dynamicresources/|/resourceclaim/|/deviceclass/|/resourceslice/|/resourceclaimtemplate/|/dynamic-resource-allocation/|/pkg/apis/resource/|/api/resource/|/test/e2e_node/dra_).*\.(go|yaml)
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits, sig-node-dynamic-resource-allocation
      testgrid-tab-name: pr-node-kubelet-containerd-dra
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates=DynamicResourceAllocation=true --service-feature-gates=DynamicResourceAllocation=true --runtime-config=api/beta=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - '--test_args=--timeout=1h --label-filter="Feature: containsAny DynamicResourceAllocation && Feature: isSubsetOf { Beta, DynamicResourceAllocation } && !Flaky && !Slow"'
        - --timeout=65m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/dra/image-config-containerd-1.7.yaml
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-resource-health-status
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+  # per-release image
    always_run: false
    optional: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-resource-health-status
    decorate: true
    decoration_config:
      timeout: 90m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    - org: containerd
      repo: containerd
      base_ref: main
      path_alias: github.com/containerd/containerd
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--feature-gates="ResourceHealthStatus=true" --service-feature-gates="ResourceHealthStatus=true" --runtime-config=api/alpha=true,api/beta=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
        - --node-tests=true
        - --provider=gce
        - '--test_args=--timeout=1h --label-filter="NodeFeature: containsAny ResourceHealthStatus && NodeFeature: isSubsetOf ResourceHealthStatus && !Flaky && !Slow"'
        - --timeout=65m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv2/image-config-cgroupv2.yaml
        resources:
          requests:
            cpu: 4
            memory: 6Gi
          limits:
            cpu: 4
            memory: 6Gi

  - name: pull-kubernetes-node-e2e-containerd-serial-ec2
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/kubernetes
    always_run: false # flip after tests are green
    optional: true # flip after tests are green
    cluster: eks-prow-build-cluster
    max_concurrency: 50
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance.yaml
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: pull-kubernetes-node-e2e-containerd-serial-ec2-eks
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: presubmits-ec2
    decoration_config:
      timeout: 240m
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/kubernetes
    always_run: false
    optional: true
    cluster: eks-prow-build-cluster
    decorate: true
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
        workdir: true
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[NodeFeature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd" --feature-gates="NodeSwap=false"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: pull-kubernetes-node-e2e-cri-proxy-serial
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    max_concurrency: 12
    skip_report: false
    skip_branches:
    - release-\d+\.\d+  # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-node-kubelet-cri-proxy
    decorate: true
    decoration_config:
      timeout: 150m
    path_alias: k8s.io/kubernetes
    extra_refs:
      - org: containerd
        repo: containerd
        base_ref: main
        path_alias: github.com/containerd/containerd
      - org: kubernetes
        repo: test-infra
        base_ref: master
        path_alias: k8s.io/test-infra
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
            - --deployment=node
            - --gcp-zone=us-central1-b
            - '--node-test-args=--cri-proxy-enabled=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
            - --node-tests=true
            - --provider=gce
            # all criproxy tests are serial, but no need to specify it
            - --test_args=--nodes=1 --focus="\[Feature:CriProxy\]" --skip="\[Flaky\]"
            - --timeout=120m
          env:
            - name: GOPATH
              value: /go
          resources:
            requests:
              cpu: 4
              memory: 6Gi
            limits:
              cpu: 4
              memory: 6Gi
  - name: pull-kubernetes-e2e-relaxed-environment-variable-validation
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    skip_branches:
      - release-\d+\.\d+  # per-release image
    annotations:
      testgrid-dashboards: sig-node-presubmits
      testgrid-tab-name: pr-kubelet-relaxed-environment-variable-validation
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 240m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
          - --build=quick
          - --cluster=
          - --env=KUBE_FEATURE_GATES=RelaxedEnvironmentVariableValidation=true
          - --gcp-zone=us-west1-b
          - --gcp-node-image=gci
          - --gcp-nodes=1
          - --provider=gce
          - --ginkgo-parallel=10
          - --test_args=--ginkgo.focus=\[Feature:RelaxedEnvironmentVariableValidation\]
          - --timeout=180m
        env:
          - name: GOPATH
            value: /go
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 6Gi
          requests:
            cpu: 4
            memory: 6Gi
