presubmits:
  kubernetes/kubernetes:
    - name: pull-kubernetes-e2e-containerd-gce
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      decorate: true
      decoration_config:
        timeout: 105m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        fork-per-release: "true"
        testgrid-create-test-group: "true"
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-dind-enabled: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      spec:
        containers:
          - command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --build=quick
              - --cluster=
              - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
              - --gcp-node-image=gci
              - --gcp-zone=us-central1-b
              - --ginkgo-parallel=30
              - --provider=gce
              - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
              - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
            image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: "4"
                memory: "6Gi"
              requests:
                cpu: "4"
                memory: "6Gi"
            securityContext:
              privileged: true
    - name: pull-kubernetes-node-e2e-containerd
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        fork-per-release: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      always_run: true
      optional: false
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      cluster: k8s-infra-prow-build
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
              - --timeout=65m
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
            resources:
              limits:
                cpu: "4"
                memory: "6Gi"
              requests:
                cpu: "4"
                memory: "6Gi"
    - name: pull-kubernetes-node-e2e-containerd-ec2
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        fork-per-release: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
      path_alias: k8s.io/kubernetes
      always_run: false # flip after tests are green
      optional: true # flip after tests are green
      cluster: eks-prow-build-cluster
      max_concurrency: 50
      decorate: true
      extra_refs:
        - org: kubernetes-sigs
          repo: provider-aws-test-infra
          base_ref: main
          path_alias: sigs.k8s.io/provider-aws-test-infra
          workdir: true
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: NodeConformance
              - name: IMAGE_CONFIG_DIR
                value: config
              - name: IMAGE_CONFIG_FILE
                value: aws-instance.yaml
              - name: TEST_ARGS
                value: '--kubelet-flags="--cgroup-driver=systemd"'
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-arm64-e2e-containerd-ec2
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        fork-per-release: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
        preset-dind-enabled: "true"
      path_alias: k8s.io/kubernetes
      always_run: false # flip after tests are green
      optional: true # flip after tests are green
      cluster: eks-prow-build-cluster
      max_concurrency: 50
      decorate: true
      decoration_config:
        timeout: 240m
      extra_refs:
        - org: kubernetes-sigs
          repo: provider-aws-test-infra
          base_ref: main
          path_alias: sigs.k8s.io/provider-aws-test-infra
          workdir: true
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: NodeConformance
              - name: USE_DOCKERIZED_BUILD
                value: "true"
              - name: TARGET_BUILD_ARCH
                value: "linux/arm64"
              - name: IMAGE_CONFIG_DIR
                value: config
              - name: IMAGE_CONFIG_FILE
                value: aws-instance-arm64.yaml
              - name: TEST_ARGS
                value: '--kubelet-flags="--cgroup-driver=systemd"'
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              limits:
                cpu: 8
                memory: 10Gi
              requests:
                cpu: 8
                memory: 10Gi
    - name: pull-kubernetes-node-arm64-e2e-containerd-serial-ec2
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        fork-per-release: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
        preset-dind-enabled: "true"
      path_alias: k8s.io/kubernetes
      always_run: false # flip after tests are green
      optional: true # flip after tests are green
      cluster: eks-prow-build-cluster
      max_concurrency: 50
      decorate: true
      extra_refs:
        - org: kubernetes-sigs
          repo: provider-aws-test-infra
          base_ref: main
          path_alias: sigs.k8s.io/provider-aws-test-infra
          workdir: true
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: \[Serial\]
              - name: SKIP
                value: \[Flaky\]|\[Slow\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
              - name: USE_DOCKERIZED_BUILD
                value: "true"
              - name: TARGET_BUILD_ARCH
                value: "linux/arm64"
              - name: IMAGE_CONFIG_DIR
                value: config
              - name: IMAGE_CONFIG_FILE
                value: aws-instance-arm64.yaml
              - name: TEST_ARGS
                value: '--kubelet-flags="--cgroup-driver=systemd"'
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              limits:
                cpu: 8
                memory: 10Gi
              requests:
                cpu: 8
                memory: 10Gi
    - name: pull-kubernetes-node-arm64-ubuntu-serial-gce
      # this is functional duplicated with `pull-kubernetes-node-arm64-e2e-containerd-serial-ec2`, consider to remove one of them when either of them is green
      cluster: k8s-infra-prow-build
      skip_branches:
        - release-\d+\.\d+ # per-release image
      always_run: false
      optional: true
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 180m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-dind-enabled: "true"
      annotations:
        fork-per-release: "true"
        testgrid-create-test-group: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-num-failures-to-alert: "10"
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-a
              - --parallelism=1
              - --focus-regex=\[Serial\]
              - --use-dockerized-build=true
              - --target-build-arch=linux/arm64
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:NodeSwap\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
              - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/arm/image-config-serial.yaml
              - --timeout=180m
            securityContext:
              privileged: true
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-e2e-containerd-kubetest2
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 65m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        fork-per-release: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[NodeConformance\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
              - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
    - name: pull-kubernetes-node-e2e-containerd-features
      cluster: k8s-infra-prow-build
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-create-test-group: "true"
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[Feature:.+\]" --skip="\[Flaky\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Alpha\]"
              - --timeout=65m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-e2e-containerd-features-kubetest2
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-e2e-containerd-features-kubetest2 to run
      always_run: false
      # if at all it is run and fails, don't block the PR
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
      decoration_config:
        timeout: 65m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-create-test-group: "true"
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[Feature:.+\]
              - --skip-regex=\[Flaky\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|[\[Feature:PodLevelResources\]|\[Alpha\]
              - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
    - name: pull-kubernetes-node-e2e-containerd-alpha-features
      cluster: k8s-infra-prow-build
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-containerd-alpha-features
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--feature-gates=AllAlpha=true,EventedPLEG=false --service-feature-gates=ProcMountType=true,UserNamespacesSupport=true,ResourceHealthStatus=true,KubeletPSI=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[Feature:.+\]" --skip="\[Flaky\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]"
              - --timeout=65m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-node-kubelet-serial-containerd
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-serial-containerd
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 260m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]|\[Feature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
              - --timeout=240m
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-kubelet-containerd-flaky
      always_run: false
      cluster: k8s-infra-prow-build
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-serial-containerd-flaky
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 260m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --timeout=4h --focus="\[Flaky\]" --skip="\[Benchmark\]|\[Feature:Eviction\]"
              - --timeout=240m
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-kubelet-serial-containerd-alpha-features
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-serial-containerd-alpha-features
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 260m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
              - '--node-test-args=--feature-gates=AllAlpha=true,AllBeta=true,EventedPLEG=false --service-feature-gates=AllAlpha=true,AllBeta=true --runtime-config=api/all=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              # Feature:DynamicResourceAllocation has it's own test jobs with the proper conditions set
              # DRA tests are covered here https://testgrid.k8s.io/sig-node-dynamic-resource-allocation
              - '--test_args=--nodes=1 --timeout=4h --label-filter="Serial && !Flaky && !Benchmark && !(Feature: containsAny Eviction && Feature: containsAny CPUManager) && !(Feature: containsAny { MemoryManager, TopologyManager, DynamicResourceAllocation })"'
              - --timeout=240m
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-kubelet-serial-containerd-kubetest2
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-kubelet-serial-containerd-kubetest2 to run
      always_run: false
      # if at all it is run and fails, don't block the PR
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-serial-containerd-kubetest2
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - "--label-filter=Feature: containsAny Serial"
              - --skip-regex=\[Flaky\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
              - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial.yaml
    - name: pull-kubernetes-node-kubelet-serial-podlevelresources
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-e2e-podlevelresources
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
              - --node-test-args=--service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true" --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
              - --node-tests=true
              - --provider=gce
              - --runtime-config=api/all=true
              - --test_args=--nodes=1 --skip="" --focus="\[Feature:PodLevelResources\]"
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
    - name: pull-kubernetes-node-kubelet-serial-podresourcesapi
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-e2e-podresourcesapi
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
              - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd"
              - --node-tests=true
              - --provider=gce
              - '--test_args=--nodes=1 --skip= --label-filter="Feature: containsAny PodResourcesAPI"'
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
    - name: pull-kubernetes-node-e2e-alpha-ec2
      # duplicate job of ci-kubernetes-e2e-ec2-alpha-features to test changes in provider-aws-test-infra
      cluster: eks-prow-build-cluster
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-e2e-alpha-ec2
        description: Uses kubetest to run e2e tests (+Feature:many, -many) against a cluster created with kubetest2-ec2
      labels:
        preset-e2e-containerd-ec2: "true"
        preset-dind-enabled: "true"
      always_run: false
      optional: true
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - bash
              - -c
              - |
                source $(go env GOPATH)/src/sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2/scripts/check-ami.sh
                GOPROXY=direct go install sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2@latest
                VERSION=$(curl -Ls https://dl.k8s.io/ci/fast/latest-fast.txt)
                kubetest2 ec2 \
                 --stage https://dl.k8s.io/ci/fast/ \
                 --version $VERSION \
                 --feature-gates="AllAlpha=true,AllBeta=true,EventedPLEG=false,StorageVersionAPI=true,APIServerIdentity=true" \
                 --runtime-config="api/all=true" \
                 --up \
                 --down \
                 --test=ginkgo \
                 -- \
                 --test-args="--node-os-arch=$NODE_OS_ARCH --provider=aws --minStartupPods=8" \
                 --test-package-url=https://dl.k8s.io/ \
                 --test-package-dir=ci/fast \
                 --test-package-marker=latest-fast.txt \
                 --focus-regex="\[Feature:(AdmissionWebhookMatchConditions|InPlacePodVerticalScaling|StorageVersionAPI|PodPreset|StatefulSetAutoDeletePVC)\]|Networking" \
                 --skip-regex="\[Feature:(SCTPConnectivity|Volumes|Networking-Performance)\]|IPv6|csi-hostpath-v0" \
                 --parallel=25
            env:
              - name: USE_DOCKERIZED_BUILD
                value: "true"
            # docker-in-docker needs privileged mode
            securityContext:
              privileged: true
            resources:
              limits:
                cpu: 8
                memory: 10Gi
              requests:
                cpu: 8
                memory: 10Gi
    - name: pull-kubernetes-node-kubelet-serial-cpu-manager
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-gce-e2e-cpu-manager
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
              - --node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"
              - --node-tests=true
              - --provider=gce
              - '--test_args=--nodes=1 --skip= --label-filter="Feature: containsAny CPUManager"'
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
    - name: pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-kubelet-serial-cpu-manager-kubetest2 to run
      always_run: false
      # if at all it is run and fails, don't block the PR
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
      decoration_config:
        timeout: 180m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-gce-e2e-cpu-manager-kubetest2
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - "--label-filter=Feature: containsAny CPUManager && !Flaky"
              - --skip-regex=""
              - --test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
    - name: pull-kubernetes-node-kubelet-serial-topology-manager
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-gce-e2e-topology-manager
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"'
              - --node-tests=true
              - --provider=gce
              - '--test_args=--nodes=1 --label-filter="Feature: containsAny TopologyManager"'
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
    - name: pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-kubelet-serial-topology-manager-kubetest2 to run
      always_run: false
      # if at all it is run and fails, don't block the PR
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
      decoration_config:
        timeout: 180m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-gce-e2e-topology-manager-kubetest2
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --skip-regex=""
              - "--label-filter=Feature: containsAny TopologyManager && !Flaky"
              - --test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --cgroup-driver=systemd" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
    - name: pull-kubernetes-node-kubelet-serial-hugepages
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-gce-e2e-hugepages
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-hugepages.yaml
              - '--node-test-args=--kubelet-flags="--cgroups-per-qos=true --cgroup-root=/" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - '--test_args=--nodes=1 --label-filter="Feature: containsAny HugePages"'
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
    - name: pull-kubernetes-node-crio-imagefs-e2e
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      max_concurrency: 12
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-imagefs-e2e
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --timeout=3h
              - --focus-regex=\[NodeConformance\]|\[Feature:.+\]|\[Feature\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Feature:PodLevelResources\]|\[Alpha\]
              - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-imagefs.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-crio-userns-e2e-serial
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-crio-userns-e2e-serial to run
      always_run: false
      optional: true
      max_concurrency: 12
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-userns-e2e-serial
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=\[Feature:ProcMountType\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesHostNetworkSupport\]
              - '--test-args=--service-feature-gates="UserNamespacesSupport=true,ProcMountType=true,UserNamespacesHostNetworkSupport=true" --feature-gates="UserNamespacesSupport=true,ProcMountType=true,UserNamespacesHostNetworkSupport=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-userns.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-crio-splitfs-e2e
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      max_concurrency: 12
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-splitfs-e2e
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[NodeConformance\]|\[Feature:.+\]|\[Feature\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Feature:PodLevelResources\]|\[Alpha\]
              - --timeout=3h
              - '--test-args=--ginkgo.timeout=3h --service-feature-gates="KubeletSeparateDiskGC=true" --feature-gates="KubeletSeparateDiskGC=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-splitfs.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-crio-evented-pleg-e2e
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-crio-evented-pleg-e2e to run
      always_run: false
      optional: true
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 180m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-evented-pleg-gce-e2e
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[NodeConformance\]|\[Feature:.+\]|\[Feature\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Feature:PodLevelResources\]|\[Alpha\]
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --feature-gates=EventedPLEG=true --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-evented-pleg.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-crio-e2e
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-crio-e2e to run
      always_run: false
      # if at all it is run and fails, don't block the PR
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 180m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-gce-e2e
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[NodeConformance\]|\[Feature:.+\]|\[Feature\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Feature:PodLevelResources\]|\[Alpha\]
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config.yaml
    - name: pull-kubernetes-node-crio-e2e-canary
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-crio-e2e-canary to run
      always_run: false
      # if at all it is run and fails, don't block the PR
      optional: true
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 180m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-gce-e2e-canary
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[NodeConformance\]|\[Feature:.+\]|\[Feature\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Feature:PodLevelResources\]|\[Alpha\]
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-canary.yaml
    - name: pull-kubernetes-node-kubelet-serial-crio
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-node-kubelet-serial-crio to run
      always_run: false
      optional: true
      skip_report: false
      max_concurrency: 12
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 4h
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-serial-crio
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=\[Serial\]
              # *Manager jobs are skipped because they have corresponding test lanes with the right image
              # These jobs in serial get partially skipped and are long jobs.
              - --skip-regex=\[Flaky\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:CPUManager\]|\[Feature:MemoryManager\]|\[Feature:TopologyManager\]|\[Feature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]
              - '--test-args=--ginkgo.timeout=3h --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-serial.yaml
            resources:
              limits:
                cpu: 4
                memory: 12Gi
              requests:
                cpu: 4
                memory: 12Gi
            env:
              - name: KUBE_SSH_KEY_PATH
                value: /etc/ssh-key-secret/ssh-private
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-crio-node-e2e-hugepages
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-kubelet-crio-node-e2e-hugepages
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=\[Feature:HugePages\]
              - --skip-regex=""
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-hugepages.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-crio-node-e2e-resource-managers
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-node-e2e-resource-managers
        description: "Executes CPU, Memory and Topology manager e2e tests for crio"
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --skip-regex= # Override kubetest2 default in https://github.com/kubernetes-sigs/kubetest2/blob/9f385d26316f5256755bb8fe333970aa5759ec7f/pkg/testers/node/node.go#L92
              - "--label-filter=Feature: containsAny { CPUManager, MemoryManager, TopologyManager } && Feature: isSubsetOf { CPUManager, MemoryManager, TopologyManager }"
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-resource-managers.yaml
              - --timeout=120m
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-kubelet-serial-memory-manager
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-serial-gce-e2e-memory-manager
        description: Executes memory manager e2e node tests
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-resource-managers.yaml
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}" --service-feature-gates="PodLevelResources=true" --feature-gates="PodLevelResources=true"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --skip="" --focus="\[Feature:MemoryManager\]"
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
    - name: pull-kubernetes-crio-node-memoryqos
      cluster: k8s-infra-prow-build
      # explicitly needs /test pull-kubernetes-crio-node-memoryqos to run
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 240m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-node-memoryqos
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=8
              - --focus-regex=\[NodeConformance\]
              - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
              - '--test-args=--feature-gates=MemoryQoS=true --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-swap-fedora
      cluster: k8s-infra-prow-build
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-gce-e2e-swap-fedora
      always_run: false
      skip_report: false
      optional: true
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --env=KUBE_SSH_USER=core
              - --gcp-zone=us-central1-b
              - '--node-test-args=--service-feature-gates="NodeSwap=true" --feature-gates="NodeSwap=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[NodeConformance\]|\[Feature:.+\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Alpha\]"
              - --timeout=180m
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-node-swap-ubuntu-serial
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-gce-e2e-swap-ubuntu-serial
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap.yaml
              - --env=KUBE_MASTER_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/master.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/env
              - --env=KUBE_NODE_EXTRA_METADATA=user-data=/home/prow/go/src/github.com/containerd/containerd/test/e2e/node.yaml,containerd-configure-sh=/home/prow/go/src/github.com/containerd/containerd/cluster/gce/configure.sh,containerd-extra-init-sh=/home/prow/go/src/github.com/containerd/containerd/test/e2e_node/gci-init.sh,containerd-env=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/env
              - '--node-test-args=--feature-gates=NodeSwap=true --service-feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --fail-swap-on=false --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --focus="\[Serial\]" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-node-swap-fedora-serial
      cluster: k8s-infra-prow-build
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-gce-e2e-swap-fedora-serial
      always_run: false
      skip_report: false
      optional: true
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      decorate: true
      decoration_config:
        timeout: 290m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --env=KUBE_SSH_USER=core
              - --gcp-zone=us-central1-b
              - '--node-test-args=--feature-gates="NodeSwap=true" --service-feature-gates="NodeSwap=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Slow\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
              - --timeout=270m
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"

    - name: pull-kubernetes-node-swap-conformance-ubuntu-serial
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-swap-conformance-ubuntu-serial
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=\[Feature:NodeSwap\]|MemoryAllocatableEviction|PriorityMemoryEvictionOrdering
              - --skip-regex=\[Flaky\]|\[Benchmark\]
              - '--test-args=--feature-gates=NodeSwap=true --service-feature-gates=NodeSwap=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroups-per-qos=true --cgroup-root=/ --fail-swap-on=false --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap.yaml
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-node-swap-conformance-fedora-serial
      cluster: k8s-infra-prow-build
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-swap-conformance-fedora-serial
      always_run: false
      skip_report: false
      optional: true
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=\[Feature:NodeSwap\]|MemoryAllocatableEviction|PriorityMemoryEvictionOrdering
              - --skip-regex=\[Flaky\]|\[Benchmark\]
              - '--test-args=--feature-gates="NodeSwap=true" --service-feature-gates="NodeSwap=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--fail-swap-on=false --cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/swap/image-config-swap-fedora.yaml
              - --timeout=270m
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
              - name: KUBE_SSH_USER
                value: core
    - name: pull-kubernetes-node-kubelet-credential-provider
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      run_if_changed: '^(pkg\/credentialprovider\/|test\/e2e_node\/plugins\/gcp-credential-provider)'
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-gce-e2e-credential-provider
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --focus="\[Feature:KubeletCredentialProviders\]" --skip="\[Flaky\]|\[Serial\]"
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-e2e-gce-kubelet-credential-provider
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      skip_report: false
      run_if_changed: '^(pkg\/credentialprovider\/|test\/e2e_node\/plugins\/gcp-credential-provider)'
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-kubelet-gce-cluster-e2e-credential-provider
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-dind-enabled: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      decorate: true
      decoration_config:
        timeout: 240m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: release
          base_ref: master
          path_alias: k8s.io/release
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --build=quick
              - --cluster=
              - --env=ENABLE_AUTH_PROVIDER_GCP=true
              - --gcp-zone=us-central1-b
              - --gcp-node-image=gci
              - --gcp-nodes=1
              - --provider=gce
              - --ginkgo-parallel=10
              - --test_args=--ginkgo.focus=\[Feature:KubeletCredentialProviders\]
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
            securityContext:
              privileged: true
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-cos-containerd-node-e2e-features
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-cos-containerd-node-e2e-features
      always_run: false
      optional: true
      cluster: k8s-infra-prow-build
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 200m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[Feature:.+\]|\[Feature\]" --skip="\[Flaky\]|\[Serial\]|\[Feature:InPlacePodVerticalScaling\]|\[Feature:UserNamespacesSupport\]|\[Feature:UserNamespacesPodSecurityStandards\]|\[Feature:KubeletCredentialProviders\]|\[Feature:LockContention\]|\[Feature:SCTPConnectivity\]|\[Alpha\]"
              - --timeout=65m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-cos-containerd-node-e2e
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-cos-containerd-node-e2e
      always_run: false
      optional: true
      cluster: k8s-infra-prow-build
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 200m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
              - --timeout=180m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-cos-containerd-node-e2e-serial
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-cos-containerd-node-e2e-serial
      always_run: false
      optional: true
      cluster: k8s-infra-prow-build
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 260m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config-serial.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --timeout=4h --focus="\[Serial\]" --skip="\[Flaky\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]"
              - --timeout=240m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-cos-containerd-node-e2e-eviction
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-cos-containerd-node-e2e-eviction
      always_run: false
      optional: true
      cluster: k8s-infra-prow-build
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 320m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-serial-eviction.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=1 --timeout=300m --focus="\[Feature:Eviction\]"
              - --timeout=300m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
    - name: pull-crio-node-e2e-eviction
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 320m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-node-e2e-eviction
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=\[Feature:Eviction\]
              - --skip-regex=""
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --timeout=300m
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-crio-imagefs-separatedisktest
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 320m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-imagefs-e2e-separatedisktest
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=SeparateDisk
              - --skip-regex=""
              - '--test-args=--container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-imagefs.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-crio-splitfs-separate-disk
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      decorate: true
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      decoration_config:
        timeout: 320m
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
        preset-pull-kubernetes-e2e: "true"
        preset-pull-kubernetes-e2e-gce: "true"
      annotations:
        testgrid-dashboards: sig-node-cri-o, sig-node-presubmits
        testgrid-tab-name: pr-crio-splitfs-separate-disk
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - kubetest2
              - noop
              - --test=node
              - --
              - --repo-root=.
              - --gcp-zone=us-central1-b
              - --parallelism=1
              - --focus-regex=KubeletSeparateDiskGC
              - --skip-regex=""
              - '--test-args=--feature-gates="KubeletSeparateDiskGC=true" --service-feature-gates="KubeletSeparateDiskGC=true" --container-runtime-endpoint=unix:///var/run/crio/crio.sock --container-runtime-process-name=/usr/local/bin/crio --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/crio.service --kubelet-cgroups=/system.slice/kubelet.service" --extra-log="{\"name\": \"crio.log\", \"journalctl\": [\"-u\", \"crio\"]}"'
              - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/crio/latest/image-config-splitfs.yaml
            resources:
              limits:
                cpu: 4
                memory: 6Gi
              requests:
                cpu: 4
                memory: 6Gi
            env:
              - name: GOPATH
                value: /go
              - name: KUBE_SSH_USER
                value: core
              - name: IGNITION_INJECT_GCE_SSH_PUBLIC_KEY_FILE
                value: "1"
    - name: pull-kubernetes-cos-cgroupv1-containerd-node-e2e
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-cos-cgroupv1-containerd-node-e2e
      always_run: false
      optional: true
      cluster: k8s-infra-prow-build
      max_concurrency: 12
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/cgroupv1/image-config-cgroupv1.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--fail-cgroupv1=false --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Serial\]"
              - --timeout=65m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
    - name: pull-kubernetes-node-e2e-containerd-standalone-mode-all-alpha
      cluster: k8s-infra-prow-build
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-containerd-standalone-mode-all-alpha
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--standalone-mode=true --feature-gates=AllAlpha=true,AllBeta=true,EventedPLEG=false --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[Feature:StandaloneMode\]" --skip="\[Flaky\]|\[Serial\]"
              - --timeout=65m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-node-e2e-containerd-standalone-mode
      cluster: k8s-infra-prow-build
      branches:
        # TODO(releng): Remove once repo default branch has been renamed
        - master
        - main
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-containerd-standalone-mode
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--standalone-mode=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/home/containerd/usr/local/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              - --test_args=--nodes=8 --focus="\[Feature:StandaloneMode\]" --skip="\[Flaky\]|\[Serial\]"
              - --timeout=65m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-node-e2e-resource-health-status
      cluster: k8s-infra-prow-build
      skip_branches:
        - release-\d+\.\d+ # per-release image
      always_run: false
      optional: true
      skip_report: false
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-resource-health-status
      decorate: true
      decoration_config:
        timeout: 90m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--feature-gates="ResourceHealthStatus=true" --service-feature-gates="ResourceHealthStatus=true" --runtime-config=api/alpha=true,api/beta=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd\"]}"'
              - --node-tests=true
              - --provider=gce
              - '--test_args=--timeout=1h --label-filter="Alpha && FeatureGate:ResourceHealthStatus && !Flaky && !Slow"'
              - --timeout=65m
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi

    - name: pull-kubernetes-node-e2e-containerd-serial-ec2
      skip_branches:
        - release-\d+\.\d+ # per-release image
      annotations:
        fork-per-release: "true"
        testgrid-alert-stale-results-hours: "24"
        testgrid-create-test-group: "true"
        testgrid-num-failures-to-alert: "10"
      labels:
        preset-e2e-containerd-ec2: "true"
        preset-dind-enabled: "true"
      path_alias: k8s.io/kubernetes
      always_run: false # flip after tests are green
      optional: true # flip after tests are green
      cluster: eks-prow-build-cluster
      max_concurrency: 50
      decorate: true
      extra_refs:
        - org: kubernetes-sigs
          repo: provider-aws-test-infra
          base_ref: main
          path_alias: sigs.k8s.io/provider-aws-test-infra
          workdir: true
      spec:
        serviceAccountName: node-e2e-tests
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
            args:
              - hack/make-rules/test-e2e-node.sh
            env:
              - name: FOCUS
                value: \[Serial\]
              - name: IMAGE_CONFIG_DIR
                value: config
              - name: IMAGE_CONFIG_FILE
                value: aws-instance.yaml
              - name: SKIP
                value: \[Flaky\]|\[Benchmark\]|\[Feature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:PodLevelResources\]
              - name: TEST_ARGS
                value: '--kubelet-flags="--cgroup-driver=systemd"'
            resources:
              limits:
                cpu: 8
                memory: 10Gi
              requests:
                cpu: 8
                memory: 10Gi
    - name: pull-kubernetes-node-e2e-cri-proxy-serial
      cluster: k8s-infra-prow-build
      always_run: false
      optional: true
      max_concurrency: 12
      skip_report: false
      skip_branches:
        - release-\d+\.\d+ # per-release image
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      annotations:
        testgrid-dashboards: sig-node-presubmits
        testgrid-tab-name: pr-node-kubelet-cri-proxy
      decorate: true
      decoration_config:
        timeout: 150m
      path_alias: k8s.io/kubernetes
      extra_refs:
        - org: containerd
          repo: containerd
          base_ref: main
          path_alias: github.com/containerd/containerd
        - org: kubernetes
          repo: test-infra
          base_ref: master
          path_alias: k8s.io/test-infra
      spec:
        containers:
          - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20251021-e2c2c9806f-master
            command:
              - runner.sh
              - /workspace/scenarios/kubernetes_e2e.py
            args:
              - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/containerd-main/systemd/image-config.yaml
              - --deployment=node
              - --gcp-zone=us-central1-b
              - '--node-test-args=--cri-proxy-enabled=true --container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service"'
              - --node-tests=true
              - --provider=gce
              # all criproxy tests are serial, but no need to specify it
              - --test_args=--nodes=1 --focus="\[Feature:CriProxy\]" --skip="\[Flaky\]"
              - --timeout=120m
            env:
              - name: GOPATH
                value: /go
            resources:
              requests:
                cpu: 4
                memory: 6Gi
              limits:
                cpu: 4
                memory: 6Gi
