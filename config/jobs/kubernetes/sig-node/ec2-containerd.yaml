presets:
  - labels:
      preset-e2e-containerd-ec2: "true"
    env:
      - name: KUBE_BUILD_PLATFORMS
        value: linux/amd64
      - name: AWS_REGION
        value: us-east-1
      - name: AWS_DEFAULT_REGION
        value: us-east-1
      - name: USER
        value: ec2-user
      - name: DELETE_INSTANCES
        value: "true"
periodics:
  - name: ci-cgroupv2-containerd-node-e2e-ec2
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv2-containerd-node-e2e-ec2
      testgrid-alert-email: kubernetes-sig-node-test-failures@googlegroups.com
    labels:
      preset-e2e-containerd-ec2: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance.yaml
            - name: FOCUS
              value: \[NodeConformance\]
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv1-containerd-node-e2e-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv1-containerd-node-e2e-ec2-eks
      testgrid-alert-email: kubernetes-sig-node-test-failures@googlegroups.com
    labels:
      preset-e2e-containerd-ec2: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[NodeConformance\]
            - name: SKIP
              value: Summary API|\[NodeFeature:NodeSwap\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd" --feature-gates="NodeSwap=false"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv1-containerd-node-arm64-e2e-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv1-containerd-node-arm64-e2e-ec2-eks
      testgrid-alert-email: kubernetes-sig-node-test-failures@googlegroups.com
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[NodeConformance\]
            - name: SKIP
              value: Summary API|\[NodeFeature:NodeSwap\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: BUILD_EKS_AMI_ARCH
              value: "arm64"
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd" --feature-gates="NodeSwap=false"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv2-containerd-node-al2023-e2e-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node,amazon-ec2-al2023
      testgrid-tab-name: ci-cgroupv2-containerd-node-al2023-e2e-ec2-eks
      testgrid-alert-email: kubernetes-sig-node-test-failures@googlegroups.com
    labels:
      preset-e2e-containerd-ec2: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[NodeConformance\]
            - name: SKIP
              value: "Summary API"
            - name: BUILD_EKS_AMI
              value: "true"
            - name: BUILD_EKS_AMI_OS
              value: "al2023"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv2-containerd-node-arm64-al2023-e2e-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node,amazon-ec2-al2023
      testgrid-tab-name: ci-cgroupv2-containerd-node-arm64-al2023-e2e-ec2-eks
      testgrid-alert-email: kubernetes-sig-node-test-failures@googlegroups.com
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[NodeConformance\]
            - name: SKIP
              value: "Summary API"
            - name: BUILD_EKS_AMI
              value: "true"
            - name: BUILD_EKS_AMI_OS
              value: "al2023"
            - name: BUILD_EKS_AMI_ARCH
              value: "arm64"
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-kubernetes-node-arm64-e2e-containerd-ec2
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-kubernetes-node-arm64-e2e-containerd-ec2
      testgrid-alert-email: kubernetes-sig-node-test-failures@googlegroups.com
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: NodeConformance
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-arm64.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv2-containerd-node-arm64-e2e-serial-ec2
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv2-containerd-node-arm64-e2e-serial-ec2
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-arm64.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv2-containerd-node-e2e-serial-ec2
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv2-containerd-node-e2e-serial-ec2
    labels:
      preset-e2e-containerd-ec2: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance.yaml
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv1-containerd-node-e2e-serial-ec2-eks
    # are you sure this is a cgroupsv1 job? it using systemd
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv1-containerd-node-e2e-serial-ec2-eks
    labels:
      preset-e2e-containerd-ec2: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[NodeFeature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd" --feature-gates="NodeSwap=false"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv1-containerd-node-arm64-e2e-serial-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node
      testgrid-tab-name: ci-cgroupv1-containerd-node-arm64-e2e-serial-ec2-eks
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[NodeFeature:NodeSwap\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: BUILD_EKS_AMI_ARCH
              value: "arm64"
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--cgroup-driver=systemd" --feature-gates="NodeSwap=false"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv2-containerd-node-al2023-e2e-serial-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node,amazon-ec2-al2023
      testgrid-tab-name: ci-cgroupv2-containerd-node-al2023-e2e-serial-ec2-eks
    labels:
      preset-e2e-containerd-ec2: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: BUILD_EKS_AMI_OS
              value: "al2023"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
  - name: ci-cgroupv2-containerd-node-arm64-al2023-e2e-serial-ec2-eks
    interval: 6h
    annotations:
      testgrid-dashboards: sig-node-containerd,amazon-ec2-node,amazon-ec2-al2023
      testgrid-tab-name: ci-cgroupv2-containerd-node-arm64-al2023-e2e-serial-ec2-eks
    labels:
      preset-e2e-containerd-ec2: "true"
      preset-dind-enabled: "true"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 240m
    extra_refs:
      - org: kubernetes-sigs
        repo: provider-aws-test-infra
        base_ref: main
        path_alias: sigs.k8s.io/provider-aws-test-infra
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: node-e2e-tests
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
            - hack/make-rules/test-e2e-node.sh
          env:
            - name: FOCUS
              value: \[Serial\]
            - name: SKIP
              value: \[Flaky\]|\[Benchmark\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]|\[Feature:HugePages\]|\[Feature:PodLevelResources\]
            - name: BUILD_EKS_AMI
              value: "true"
            - name: BUILD_EKS_AMI_OS
              value: "al2023"
            - name: BUILD_EKS_AMI_ARCH
              value: "arm64"
            - name: USE_DOCKERIZED_BUILD
              value: "true"
            - name: TARGET_BUILD_ARCH
              value: "linux/arm64"
            - name: IMAGE_CONFIG_DIR
              value: config
            - name: IMAGE_CONFIG_FILE
              value: aws-instance-eks.yaml
            - name: TEST_ARGS
              value: '--kubelet-flags="--fail-cgroupv1=true --cgroup-driver=systemd"'
          # docker-in-docker needs privileged mode
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 8
              memory: 10Gi
            requests:
              cpu: 8
              memory: 10Gi
