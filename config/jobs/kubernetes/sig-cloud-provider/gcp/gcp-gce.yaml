presets:
- labels:
    preset-pull-kubernetes-e2e: "true"
  env:
  - name: KUBE_GCS_UPDATE_LATEST
    value: "n"
- labels:
    preset-pull-kubernetes-e2e-gce: "true"
  env:
  - name: CREATE_CUSTOM_NETWORK
    value: "true"

presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-gce-cos
    always_run: false
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --gcp-node-image=gci
        - --gcp-region=us-central1
        - --ginkgo-parallel=30
        - --provider=gce
        # Panic if anything mutates a shared informer cache
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        # Panic if data inconsistency is detected
        - --env=ENABLE_KUBE_LIST_FROM_CACHE_INCONSISTENCY_DETECTOR=true
        - --env=ENABLE_KUBE_WATCHLIST_INCONSISTENCY_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          requests:
            cpu: 4
            memory: 14Gi
          limits:
            cpu: 4
            memory: 14Gi
        securityContext:
          privileged: true

  - name: pull-cos-containerd-e2e-ubuntu-gce
    always_run: false
    cluster: k8s-infra-prow-build
    skip_branches:
    - release-\d+\.\d+ # per-release image
    annotations:
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --gcp-node-image=ubuntu
        - --gcp-region=us-central1
        - --ginkgo-parallel=30
        - --image-family=pipeline-1-29
        - --image-project=ubuntu-os-gke-cloud
        - --provider=gce
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        # Panic if anything mutates a shared informer cache
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          requests:
            cpu: 4
            memory: 14Gi
          limits:
            cpu: 4
            memory: 14Gi
        securityContext:
          privileged: true

  - name: pull-kubernetes-e2e-gce-cos-no-stage
    always_run: false
    cluster: k8s-infra-prow-build
    annotations:
      testgrid-dashboards: presubmits-kubernetes-nonblocking
      testgrid-tab-name: pull-kubernetes-e2e-gce-cos-no-stage
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --gcp-node-image=gci
        - --gcp-region=us-central1
        - --ginkgo-parallel=30
        - --provider=gce
        # Panic if anything mutates a shared informer cache
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        # Panic if data inconsistency is detected
        - --env=ENABLE_KUBE_LIST_FROM_CACHE_INCONSISTENCY_DETECTOR=true
        - --env=ENABLE_KUBE_WATCHLIST_INCONSISTENCY_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          requests:
            cpu: 4
            memory: 14Gi
          limits:
            cpu: 4
            memory: 14Gi
        securityContext:
          privileged: true

  - name: pull-kubernetes-e2e-gce-cos-canary
    cluster: k8s-infra-prow-build
    always_run: false
    skip_report: true
    skip_branches:
    - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --gcp-node-image=gci
        - --gcp-region=us-central1
        - --ginkgo-parallel=30
        - --provider=gce
        # Panic if anything mutates a shared informer cache
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        # Panic if data inconsistency is detected
        - --env=ENABLE_KUBE_LIST_FROM_CACHE_INCONSISTENCY_DETECTOR=true
        - --env=ENABLE_KUBE_WATCHLIST_INCONSISTENCY_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
        env:
        - name: BOOTSTRAP_FETCH_TEST_INFRA
          value: "true"
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 4
            memory: 14Gi
          limits:
            cpu: 4
            memory: 14Gi

  - name: pull-kubernetes-e2e-gce
    cluster: k8s-infra-prow-build
    always_run: true
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
        - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --build=quick
            - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v2.0.0
            - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.2.1
            - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
            - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
            - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
            - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20220712a
            - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
            - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
            - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20220712a
            - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
            - --gcp-master-image=ubuntu
            - --gcp-node-image=ubuntu
            - --gcp-region=us-central1
            - --ginkgo-parallel=30
            - --provider=gce
            # Panic if anything mutates a shared informer cache
            - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
            # Panic if data inconsistency is detected
            - --env=ENABLE_KUBE_LIST_FROM_CACHE_INCONSISTENCY_DETECTOR=true
            - --env=ENABLE_KUBE_WATCHLIST_INCONSISTENCY_DETECTOR=true
            - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
            - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

  # manual test for pull-through cache registry used with 5k node tests
  - name: pull-kubernetes-e2e-gce-pull-through-cache
    cluster: k8s-infra-prow-build
    always_run: false
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "false"
      testgrid-dashboards: sig-k8s-infra-canaries
      testgrid-tab-name: pull-kubernetes-e2e-gce-pull-through-cache
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 105m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      volumes:
      - name: cache-secret
        secret:
          secretName: scale-pull-cache-token
      containers:
        - volumeMounts:
          - name: cache-secret
            readOnly: true
            mountPath: /etc/registry-auth
          env:
          - name: KUBERNETES_REGISTRY_PULL_THROUGH_HOST
            value: https://us-central1-docker.pkg.dev/v2/k8s-infra-e2e-scale-5k-project/k8s-5k-scale-cache/
          - name: KUBERNETES_REGISTRY_PULL_THROUGH_BASIC_AUTH_TOKEN_PATH
            value: /etc/registry-auth/token
          command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --build=quick
            - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v2.0.0
            - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.2.1
            - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
            - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
            - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
            - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20220712a
            - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
            - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
            - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20220712a
            - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
            - --gcp-master-image=ubuntu
            - --gcp-node-image=ubuntu
            - --gcp-region=us-central1
            - --ginkgo-parallel=30
            - --provider=gce
            # Panic if anything mutates a shared informer cache
            - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
            # Panic if data inconsistency is detected
            - --env=ENABLE_KUBE_LIST_FROM_CACHE_INCONSISTENCY_DETECTOR=true
            - --env=ENABLE_KUBE_WATCHLIST_INCONSISTENCY_DETECTOR=true
            - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
            - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          # TODO: increase CPU for the pull-kubernetes-e2e-gce, we spend a LONG time building kubernetes and it slows iteration
          resources:
            limits:
              cpu: 7
              memory: "14Gi"
            requests:
              cpu: 7
              memory: "14Gi"
          securityContext:
            privileged: true

  - name: pull-kubernetes-e2e-gce-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: true
    skip_report: true
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    decorate: true
    decoration_config:
      timeout: 110m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kops
      base_ref: master
      path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
        - command:
            - runner.sh
          args:
            - bash
            - -c
            - |
              ARGS="--set=spec.containerd.runc.version=1.1.12 --set=spec.packages=nfs-common --set=spec.containerd.version=1.7.13"
              make -C $GOPATH/src/k8s.io/kops test-e2e-install
              kubetest2 kops -v=6 --cloud-provider=gce --up --down --build \
                --build-kubernetes=true --target-build-arch=linux/amd64 \
                --admin-access=0.0.0.0/0 \
                --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt \
                --create-args "$ARGS --networking=kubenet --gce-service-account=default --set=spec.nodeProblemDetector.enabled=true" \
                --test=kops \
                -- \
                --ginkgo-args="--debug" \
                --skip-regex="\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
                --timeout=80m \
                --use-built-binaries=true \
                --parallel=30
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

  - name: pull-kubernetes-e2e-gce-cos-alpha-features
    cluster: k8s-infra-prow-build
    optional: true
    run_if_changed: '^.*feature.*\.go'
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 200m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
      - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --ginkgo-parallel=1
        - --build=quick
        - --env=KUBE_FEATURE_GATES=AllAlpha=true
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        - --env=KUBE_PROXY_DAEMONSET=true
        - --env=ENABLE_POD_PRIORITY=true
        - --env=ENABLE_APISERVER_TRACING=true
        - --env=ENABLE_KUBE_WATCHLIST_INCONSISTENCY_DETECTOR=true
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-region=us-central1
        - --provider=gce
        - --runtime-config=api/all=true
        - --test_args=--ginkgo.focus=\[Feature:(WatchList|InPlacePodVerticalScaling|APIServerTracing|SidecarContainers|StorageVersionAPI|PodPreset|ClusterTrustBundle|ClusterTrustBundleProjection|PodLifecycleSleepAction|RecoverVolumeExpansionFailure)\] --ginkgo.skip=\[Feature:(SCTPConnectivity|Volumes|Networking-Performance)\]|IPv6|csi-hostpath-v0|\[KubeUp\] --minStartupPods=8
        - --timeout=180m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: "14Gi"
          requests:
            cpu: 4
            memory: "14Gi"
        securityContext:
          privileged: true
    annotations:
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-e2e-gce-serial
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 520m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
        - command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --build=quick
            - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v2.0.0
            - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.2.1
            - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
            - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
            - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
            - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20220712a
            - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
            - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
            - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20220712a
            - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
            - --gcp-master-image=ubuntu
            - --gcp-node-image=ubuntu
            - --gcp-region=us-central1
            - --ginkgo-parallel=1
            - --provider=gce
            - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
            - --timeout=500m
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

  - name: pull-kubernetes-e2e-gce-serial-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-storage-e2e-service-account: "true"
    decorate: true
    decoration_config:
      timeout: 530m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kops
      base_ref: master
      path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
        - command:
            - runner.sh
          args:
            - bash
            - -c
            - |
              ARGS="--set=spec.containerd.runc.version=1.1.12  --set=spec.packages=nfs-common --set=spec.containerd.version=1.7.13"
              make -C $GOPATH/src/k8s.io/kops test-e2e-install
              kubetest2 kops -v=6 --cloud-provider=gce --up --down --build \
                --build-kubernetes=true --target-build-arch=linux/amd64 \
                --admin-access=0.0.0.0/0 \
                --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt \
                --create-args "$ARGS --node-count=3 --networking=kubenet --gce-service-account=default --set=spec.nodeProblemDetector.enabled=true" \
                --test=kops \
                -- \
                --test-args="-test.timeout=800m --num-nodes=3 --master-os-distro=ubuntu --node-os-distro=ubuntu" \
                --focus-regex="\[Serial\]" \
                --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
                --timeout=500m \
                --use-built-binaries=true \
                --parallel=1
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

  - name: pull-kubernetes-e2e-gce-disruptive-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-storage-e2e-service-account: "true"
    decorate: true
    decoration_config:
      timeout: 630m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: kops
      base_ref: master
      path_alias: k8s.io/kops
    spec:
      serviceAccountName: k8s-kops-test
      containers:
        - command:
            - runner.sh
          args:
            - bash
            - -c
            - |
              ARGS="--set=spec.containerd.runc.version=1.1.12  --set=spec.packages=nfs-common --set=spec.containerd.version=1.7.13"
              make -C $GOPATH/src/k8s.io/kops test-e2e-install
              kubetest2 kops -v=6 --cloud-provider=gce --up --down --build \
                --build-kubernetes=true --target-build-arch=linux/amd64 \
                --admin-access=0.0.0.0/0 \
                --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt \
                --create-args "$ARGS --node-count=3 --networking=kubenet --gce-service-account=default --set=spec.nodeProblemDetector.enabled=true" \
                --test=kops \
                -- \
                --test-args="-test.timeout=600m --num-nodes=3 --master-os-distro=ubuntu --node-os-distro=ubuntu" \
                --focus-regex="\[Disruptive\]" \
                --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
                --timeout=500m \
                --use-built-binaries=true \
                --parallel=1
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

  - name: pull-e2e-gce-cloud-provider-disabled
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "true"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 120m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
        - command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --build=quick
            - --env=CLOUD_PROVIDER_FLAG=external
            - --env=ENABLE_AUTH_PROVIDER_GCP=true
            - --gcp-master-image=gci
            - --gcp-node-image=gci
            - --gcp-nodes=4
            - --gcp-region=us-central1
            - --ginkgo-parallel=30
            - --provider=gce
            - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
            - --timeout=80m # thinking about making this longer? don't! 80m is a hard cap, and should get down to no more than 60m.
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

  - name: pull-e2e-gci-gce-alpha-enabled-default
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    skip_branches:
      - release-\d+\.\d+ # per-release image
    annotations:
      fork-per-release: "false"
      testgrid-alert-stale-results-hours: "24"
      testgrid-create-test-group: "true"
      testgrid-num-failures-to-alert: "10"
      testgrid-dashboards: google-gce
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    decorate: true
    decoration_config:
      timeout: 120m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    spec:
      containers:
        - command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --build=quick
            - --check-leaked-resources
            - --env=KUBE_COS_INSTALL_CONTAINERD_VERSION=v2.0.0
            - --env=KUBE_COS_INSTALL_RUNC_VERSION=v1.2.1
            - --env=KUBE_FEATURE_GATES=AllAlpha=true
            - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
            - --env=KUBE_PROXY_DAEMONSET=true
            - --env=ENABLE_POD_PRIORITY=true
            - --gcp-node-image=gci
            - --gcp-region=us-central1
            - --ginkgo-parallel=30
            - --provider=gce
            - --runtime-config=api/all=true
            - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|csi-hostpath-v0 --minStartupPods=8
            - --timeout=70m
          image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          resources:
            limits:
              cpu: 4
              memory: "14Gi"
            requests:
              cpu: 4
              memory: "14Gi"
          securityContext:
            privileged: true

periodics:
- interval: 30m
  name: ci-kubernetes-e2e-gci-gce
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 140m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --extract=ci/fast/latest-fast
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=120m
      - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: sig-release-master-blocking
    testgrid-tab-name: gce-cos-master-default
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-email: release-team@kubernetes.io
    description: Uses kubetest to run e2e tests (-Slow|Serial|Disruptive|Flaky|Feature) against a cluster created with cluster/kube-up.sh

- interval: 120m
  name: ci-kubernetes-e2e-ubuntu-gce-containerd
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 70m
  spec:
    containers:
      - command:
          - runner.sh
          - /workspace/scenarios/kubernetes_e2e.py
        args:
          - --check-leaked-resources
          - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v2.0.0
          - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.2.1
          - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
          - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
          - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
          - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20220712a
          - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
          - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
          - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20220712a
          - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
          - --extract=ci/fast/latest-fast
          - --gcp-master-image=ubuntu
          - --gcp-node-image=ubuntu
          - --gcp-nodes=4
          - --gcp-region=us-central1
          - --ginkgo-parallel=30
          - --provider=gce
          - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
          - --timeout=50m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 2
            memory: 6Gi
          requests:
            cpu: 2
            memory: 6Gi
  annotations:
    testgrid-dashboards: sig-release-master-blocking
    testgrid-tab-name: gce-ubuntu-master-containerd
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, release-team@kubernetes.io
    description: Uses kubetest to run e2e tests (-Slow|Serial|Disruptive|Flaky|Feature) against a cluster (ubuntu based and uses containerd) created with cluster/kube-up.sh

- interval: 30m
  name: ci-kubernetes-e2e-gci-gce-alpha-enabled-default
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 100m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=KUBE_COS_INSTALL_CONTAINERD_VERSION=v2.0.0
      - --env=KUBE_COS_INSTALL_RUNC_VERSION=v1.2.1
      - --env=KUBE_FEATURE_GATES=AllAlpha=true
      - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
      - --env=KUBE_PROXY_DAEMONSET=true
      - --env=ENABLE_POD_PRIORITY=true
      - --extract=ci/fast/latest-fast
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --ginkgo-parallel=30
      - --provider=gce
      - --runtime-config=api/all=true
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|csi-hostpath-v0 --minStartupPods=8
      - --timeout=70m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: google-gce
    testgrid-tab-name: gci-gce-alpha-enabled-default

- interval: 30m
  name: ci-kubernetes-e2e-gci-gce-alpha-features
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=KUBE_FEATURE_GATES=AllAlpha=true
      - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
      - --env=KUBE_PROXY_DAEMONSET=true
      - --env=ENABLE_POD_PRIORITY=true
      - --extract=ci/fast/latest-fast
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --runtime-config=api/all=true
      - --test_args=--ginkgo.focus=\[Feature:(AdmissionWebhookMatchConditions|InPlacePodVerticalScaling|SidecarContainers|StorageVersionAPI|PodPreset|StatefulSetAutoDeletePVC|ClusterTrustBundle|ClusterTrustBundleProjection)\]|Networking --ginkgo.skip=\[Feature:(SCTPConnectivity|Volumes|Networking-Performance|Example)\]|IPv6|csi-hostpath-v0 --minStartupPods=8
      - --timeout=180m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: 3Gi
        requests:
          cpu: 1
          memory: 3Gi
  annotations:
    testgrid-dashboards: sig-release-master-blocking, google-gce
    testgrid-tab-name: gce-cos-master-alpha-features
    testgrid-alert-email: release-team@kubernetes.io
    description: Uses kubetest to run e2e tests (+Feature:many, -many) against a cluster created with cluster/kube-up.sh

- interval: 12h
  name: ci-kubernetes-e2e-gci-gce-flaky-repro
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 70m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=4
      - --gcp-region=us-central1
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: sig-testing-misc
    testgrid-tab-name: gce-cos-master-flaky-repro
    description: Same config as ci-kubernetes-e2e-gci-gce but with Flaky tests included, intended to reproduce conditions that cause flakes to appear

- interval: 12h
  name: ci-kubernetes-e2e-gci-gce-flaky
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --extract=ci/latest
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Flaky\] --ginkgo.skip=\[Driver:.gcepd\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=180m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: 3Gi
        requests:
          cpu: 1
          memory: 3Gi
  annotations:
    testgrid-dashboards: google-gce
    testgrid-tab-name: gci-gce-flaky

- interval: 30m
  name: ci-kubernetes-e2e-gci-gce-reboot
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --extract=ci/fast/latest-fast
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:Reboot\] --minStartupPods=8
      - --timeout=180m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: 3Gi
        requests:
          cpu: 1
          memory: 3Gi
  annotations:
    testgrid-dashboards: sig-release-master-blocking, google-gce
    testgrid-tab-name: gce-cos-master-reboot
    description: Uses kubetest to run a subset of e2e tests (+Feature:Reboot) against a cluster created with cluster/kube-up.sh
    testgrid-alert-email: gke-node-experience-team+alerts@google.com
    testgrid-num-failures-to-alert: '6'

- interval: 30m
  name: ci-kubernetes-e2e-gci-gce-serial
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 520m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=NODE_LOCAL_SSDS_EXT=1,scsi,fs
      - --env=NODE_SIZE=n2-standard-2
      - --extract=ci/latest
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[sig-cloud-provider-gcp\] --minStartupPods=8
      - --timeout=500m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: 3Gi
        requests:
          cpu: 1
          memory: 3Gi
  annotations:
    testgrid-dashboards: sig-release-master-informing
    testgrid-tab-name: gce-cos-master-serial
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-email: release-team@kubernetes.io
    description: Uses kubetest to run e2e tests (+Slow, -Serial|Disruptive|Flaky|Feature) against a cluster created with cluster/kube-up.sh

- interval: 30m
  name: ci-kubernetes-e2e-gci-gce-slow
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --extract=ci/latest
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Slow\] --ginkgo.skip=\[Driver:.gcepd\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:([^L].*|L[^o].*|Lo[^a].*|Loa[^d].*)\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: 6Gi
        requests:
          cpu: 1
          memory: 6Gi
  annotations:
    testgrid-dashboards: sig-release-master-informing
    testgrid-tab-name: gce-cos-master-slow
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-email: release-team@kubernetes.io
    description: Uses kubetest to run e2e tests (+Slow, -Serial|Disruptive|Flaky|Feature) against a cluster created with cluster/kube-up.sh

- interval: 12h
  name: ci-kubernetes-soak-gci-gce-beta
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 1420m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --down=false
      - --env=DOCKER_TEST_LOG_LEVEL=--log-level=warn
      - --extract=ci/k8s-beta
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --soak
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Disruptive\]|\[Flaky\]|\[Feature:([^L].*|L[^o].*|Lo[^a].*|Loa[^d].*)\] --clean-start=true --minStartupPods=8
      - --timeout=1400m
      - --up=false
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: google-gce
    testgrid-tab-name: soak-gci-gce-1.15

- interval: 12h
  name: ci-kubernetes-soak-gci-gce-stable1
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 1420m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --down=false
      - --env=DOCKER_TEST_LOG_LEVEL=--log-level=warn
      - --extract=ci/k8s-stable1
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --soak
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Disruptive\]|\[Flaky\]|\[Feature:([^L].*|L[^o].*|Lo[^a].*|Loa[^d].*)\] --clean-start=true --minStartupPods=8
      - --timeout=1400m
      - --up=false
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: google-gce
    testgrid-tab-name: soak-gci-gce-1.14

- interval: 12h
  name: ci-kubernetes-soak-gci-gce-stable2
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 1420m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --down=false
      - --env=DOCKER_TEST_LOG_LEVEL=--log-level=warn
      - --extract=ci/k8s-stable2
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --soak
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Disruptive\]|\[Flaky\]|\[Feature:([^L].*|L[^o].*|Lo[^a].*|Loa[^d].*)\] --clean-start=true --minStartupPods=8
      - --timeout=1400m
      - --up=false
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: google-gce
    testgrid-tab-name: soak-gci-gce-1.13

- interval: 12h
  name: ci-kubernetes-soak-gci-gce-stable3
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 1420m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --down=false
      - --env=DOCKER_TEST_LOG_LEVEL=--log-level=warn
      - --extract=ci/k8s-stable3
      - --gcp-node-image=gci
      - --gcp-region=us-central1
      - --provider=gce
      - --soak
      - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Disruptive\]|\[Flaky\]|\[Feature:([^L].*|L[^o].*|Lo[^a].*|Loa[^d].*)\] --clean-start=true --minStartupPods=8
      - --timeout=1400m
      - --up=false
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 6Gi
        requests:
          cpu: 2
          memory: 6Gi
  annotations:
    testgrid-dashboards: google-gce
    testgrid-tab-name: soak-gci-gce-1.12
