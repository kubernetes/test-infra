presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-kind
    cluster: k8s-infra-prow-build
    optional: false
    always_run: true
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: LABEL_FILTER
          value: "Feature: isEmpty && !Slow && !Disruptive && !Flaky"
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
      fork-per-release: "true"


  # NOTE: changes should generally be synced to pull-kind-e2e-kubernetes-canary
  # in the kind repo
  - name: pull-kubernetes-e2e-kind-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false # manual for testing new configurations
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:latest-master
        imagePullPolicy: Always # pull latest image for canary testing
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: LABEL_FILTER
          value: "Feature: isEmpty && !Slow && !Disruptive && !Flaky"
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-e2e-kind-ipv6
    cluster: k8s-infra-prow-build
    optional: false
    always_run: true
    skip_report: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: LABEL_FILTER
          value: "Feature: isEmpty && !Slow && !Disruptive && !Flaky"
        - name: PARALLEL
          value: "true"
        # enable IPV6 in bootstrap image
        - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
          value: "true"
        # tell kind CI script to use ipv6
        - name: "IP_FAMILY"
          value: "ipv6"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi
    annotations:
      fork-per-release: "true"
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-e2e-kind-ipv6-canary
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false # manual for testing new configurations
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:latest-master
        imagePullPolicy: Always # pull latest image for canary testing
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: LABEL_FILTER
          value: "Feature: isEmpty && !Slow && !Disruptive && !Flaky"
        - name: PARALLEL
          value: "true"
        # enable IPV6 in bootstrap image
        - name: "DOCKER_IN_DOCKER_IPV6_ENABLED"
          value: "true"
        # tell kind CI script to use ipv6
        - name: "IP_FAMILY"
          value: "ipv6"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'

  - name: pull-kubernetes-conformance-kind-ga-only
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 2h20m # allow plenty of time for a serial conformance run
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: GA_ONLY
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
      testgrid-dashboards: sig-testing-kind

  - name: pull-kubernetes-conformance-kind-ga-only-parallel
    cluster: k8s-infra-prow-build
    always_run: true
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: GA_ONLY
          value: "true"
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      fork-per-release: "true"
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
      testgrid-dashboards: sig-testing-kind

  - name: pull-kubernetes-e2e-kind-alpha-features
    cluster: k8s-infra-prow-build
    annotations:
      description: Runs tests with no special requirements other than alpha feature gates in a KinD cluster where alpha feature gates and APIs are enabled.
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        # EventedPLEG is disabled temporarily for https://github.com/kubernetes/kubernetes/issues/122721
        - name: FEATURE_GATES
          value: '{"AllAlpha":true,"EventedPLEG":false}'
        - name: RUNTIME_CONFIG
          value: '{"api/alpha":"true", "api/ga":"true"}'
        - name: LABEL_FILTER
          value: "Feature: isSubsetOf OffByDefault && !BetaOffByDefault && !Deprecated && !Slow && !Disruptive && !Flaky"
        - name: SKIP
          value: PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi

  - name: pull-kubernetes-e2e-kind-beta-features
    cluster: k8s-infra-prow-build
    annotations:
      description: Runs tests with no special requirements other than beta feature gates in a KinD cluster where beta feature gates and APIs are enabled.
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FEATURE_GATES
          value: '{"AllBeta":true}'
        - name: RUNTIME_CONFIG
          value: '{"api/beta":"true", "api/ga":"true"}'
        - name: LABEL_FILTER
          value: "Feature: isSubsetOf OffByDefault && !Alpha && !Deprecated && !Slow && !Disruptive && !Flaky"
        - name: SKIP
          value: PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi

  - name: pull-kubernetes-e2e-kind-alpha-beta-features
    annotations:
      description: Runs tests with no special requirements other than alpha or beta feature gates in a KinD cluster where alpha and beta feature gates and APIs are enabled.
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
    cluster: k8s-infra-prow-build
    optional: true
    run_if_changed: ^pkg/features/
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        # EventedPLEG is disabled temporarily for https://github.com/kubernetes/kubernetes/issues/122721
        - name: FEATURE_GATES
          value: '{"AllAlpha":true,"AllBeta":true,"EventedPLEG":false}'
        - name: RUNTIME_CONFIG
          value: '{"api/all":"true"}'
        - name: LABEL_FILTER
          value: "Feature: isSubsetOf OffByDefault && !Deprecated && !Slow && !Disruptive && !Flaky"
        - name: SKIP
          value: PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi

  - name: pull-kubernetes-e2e-kind-evented-pleg
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ # per-release settings
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 60m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FEATURE_GATES
          value: '{"EventedPLEG":true}'
        - name: RUNTIME_CONFIG
          value: '{"api/alpha":"true", "api/ga":"true"}'
        - name: LABEL_FILTER
          value: "Feature: isSubsetOf EventedPLEG && !VerySlow && !Disruptive && !Flaky"
        - name: PARALLEL
          value: "true"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
  - name: pull-kubernetes-e2e-kind-evented-pleg-veryslow
    cluster: k8s-infra-prow-build
    optional: true
    always_run: false
    decorate: true
    skip_branches:
    - release-\d+\.\d+ 
    labels:
      preset-dind-enabled: "true"
    decoration_config:
      timeout: 90m  
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
        command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FEATURE_GATES
          value: '{"EventedPLEG":true}'
        - name: RUNTIME_CONFIG
          value: '{"api/alpha":"true", "api/ga":"true"}'
        - name: LABEL_FILTER
          value: "Feature: isSubsetOf EventedPLEG && VerySlow && !Disruptive && !Flaky"
        - name: PARALLEL
          value: "false"  
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 7
            memory: 9000Mi
          requests:
            cpu: 7
            memory: 9000Mi
    annotations:
      testgrid-num-failures-to-alert: '10'
      testgrid-alert-stale-results-hours: '24'
      testgrid-create-test-group: 'true'
periodics:
- interval: 4h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-alpha-features
  annotations:
    testgrid-dashboards: sig-release-master-informing, sig-testing-kind
    testgrid-tab-name: kind-master-alpha
    description: Runs tests with no special requirements other than alpha feature gates in a KinD cluster where alpha feature gates and APIs are enabled.
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FEATURE_GATES
        value: '{"AllAlpha":true,"EventedPLEG": false}'
      - name: RUNTIME_CONFIG
        value: '{"api/alpha":"true", "api/ga":"true"}'
      - name: LABEL_FILTER
        value: "Feature: isSubsetOf OffByDefault && !BetaOffByDefault && !Deprecated && !VerySlow && !Disruptive && !Flaky"
      # ListFromCacheSnapshot does not implement the compaction behavior for watch cache defined in "Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away" conformance test so it flakes
      # Ref: https://issues.k8s.io/131011
      - name: SKIP
        value: Servers.with.support.for.API.chunking.should.support.continue.listing.from.the.last.key.if.the.original.version.has.been.compacted.away
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7
- interval: 4h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-alpha-features-veryslow
  annotations:
    testgrid-dashboards: sig-release-master-informing, sig-testing-kind
    testgrid-tab-name: kind-master-alpha
    description: Runs tests with no special requirements other than alpha feature gates in a KinD cluster where alpha feature gates and APIs are enabled.
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FEATURE_GATES
        value: '{"AllAlpha":true,"EventedPLEG": false}'
      - name: RUNTIME_CONFIG
        value: '{"api/alpha":"true", "api/ga":"true"}'
      - name: LABEL_FILTER
        value: "Feature: isSubsetOf OffByDefault && VerySlow && !BetaOffByDefault && !Deprecated  && !Disruptive && !Flaky"
      # ListFromCacheSnapshot does not implement the compaction behavior for watch cache defined in "Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away" conformance test so it flakes
      # Ref: https://issues.k8s.io/131011
      - name: SKIP
        value: Servers.with.support.for.API.chunking.should.support.continue.listing.from.the.last.key.if.the.original.version.has.been.compacted.away
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7

- interval: 4h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-beta-features
  annotations:
    testgrid-dashboards: sig-release-master-informing, sig-testing-kind
    testgrid-tab-name: kind-master-beta
    description: Runs tests with no special requirements other than beta feature gates in a KinD cluster where beta feature gates and APIs are enabled.
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FEATURE_GATES
        value: '{"AllBeta":true}'
      - name: RUNTIME_CONFIG
        value: '{"api/beta":"true", "api/ga":"true"}'
      - name: LABEL_FILTER
        value: "Feature: isSubsetOf OffByDefault && !Alpha && !Deprecated && !VerySlow && !Disruptive && !Flaky"
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7
- interval: 4h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-beta-features-veryslow
  annotations:
    testgrid-dashboards: sig-release-master-informing, sig-testing-kind
    testgrid-tab-name: kind-master-beta
    description: Runs tests with no special requirements other than beta feature gates in a KinD cluster where beta feature gates and APIs are enabled.
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FEATURE_GATES
        value: '{"AllBeta":true}'
      - name: RUNTIME_CONFIG
        value: '{"api/beta":"true", "api/ga":"true"}'
      - name: LABEL_FILTER
        value: "Feature: isSubsetOf OffByDefault && VerySlow && !Alpha && !Deprecated && !Disruptive && !Flaky"
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7


- interval: 4h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-alpha-beta-features
  annotations:
    testgrid-dashboards: sig-release-master-informing, sig-testing-kind
    testgrid-tab-name: kind-master-alpha-beta
    description: Runs tests with no special requirements other than alpha or beta feature gates in a KinD cluster where alpha and beta feature gates and APIs are enabled.
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/krte:v20250527-1b2b10e804-master
      command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FEATURE_GATES
        value: '{"AllAlpha":true,"AllBeta":true,"EventedPLEG": false}'
      - name: RUNTIME_CONFIG
        value: '{"api/all":"true"}'
      - name: LABEL_FILTER
        value: "Feature: isSubsetOf OffByDefault && !Deprecated && !Slow && !Disruptive && !Flaky"
      # ListFromCacheSnapshot does not implement the compaction behavior for watch cache defined in "Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away" conformance test so it flakes
      # Ref: https://issues.k8s.io/131011
      - name: SKIP
        value: Servers.with.support.for.API.chunking.should.support.continue.listing.from.the.last.key.if.the.original.version.has.been.compacted.away
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7

- interval: 24h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-rootless
  annotations:
    testgrid-dashboards: sig-testing-kind
    testgrid-tab-name: kind-rootless
    description: Kubernetes in Rootless Docker (in GCE VM)
    # GitHub ID: @AkihiroSuda
    testgrid-alert-email: suda.kyoto@gmail.com
    testgrid-num-columns-recent: '6'
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250527-1b2b10e804-master
      command:
      - runner.sh
      args:
      - /bin/bash
      - -c
      - |
        set -eux
        # kindinv: Kubernetes in (Rootless) Docker in (GCE) VM
        # See https://github.com/rootless-containers/kubetest2-kindinv
        #
        # GCE VM is used for setting up cgroup v2 and systemd.
        # (k8s-infra-prow-build lacks cgroup v2, and the kubekins-e2e container lacks systemd)
        (cd ; GO111MODULE=on go install github.com/rootless-containers/kubetest2-kindinv@master)
        mkdir -p -m 0700 ~/.ssh
        cp -f "${GCE_SSH_PRIVATE_KEY_FILE}" ~/.ssh/google_compute_engine
        cp -f "${GCE_SSH_PUBLIC_KEY_FILE}" ~/.ssh/google_compute_engine.pub
        exec kubetest2 kindinv \
          --boskos-location=http://boskos.test-pods.svc.cluster.local \
          --gcp-zone=us-central1-b \
          --instance-image=ubuntu-os-cloud/ubuntu-2204-lts \
          --instance-type=n2-standard-4 \
          --kind-rootless \
          --user=rootless \
          --build \
          --up \
          --down \
          --test=ginkgo \
          -- \
          --focus-regex='\[NodeConformance\]' \
          --skip-regex='\[Environment:NotInUserNS\]|\[Slow\]' \
          --parallel=8
      resources:
        limits:
          memory: 2Gi
          cpu: 2
        requests:
          memory: 2Gi
          cpu: 2
  rerun_auth_config:
    allow_anyone: true
- interval: 24h
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-kind-arm64
  annotations:
    testgrid-dashboards: sig-testing-kind
    testgrid-tab-name: kind-master-arm64
    description: Runs e2e tests against a latest kubernetes master created with sigs.k8s.io/kind using arm64
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com, davanum@gmail.com
    testgrid-num-columns-recent: '6'
  labels:
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: us-central1-docker.pkg.dev/k8s-staging-test-infra/images/kubekins-e2e:v20250527-1b2b10e804-master
      command:
      - runner.sh
      args:
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-arm64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: LABEL_FILTER
        value: "Feature: isEmpty && !Slow && !Disruptive && !Flaky"
      - name: PARALLEL
        value: "true"
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      resources:
        limits:
          memory: 9Gi
          cpu: 7
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: 9Gi
          cpu: 7
    nodeSelector:
      kubernetes.io/arch: arm64
