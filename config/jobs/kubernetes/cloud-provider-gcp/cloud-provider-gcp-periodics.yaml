periodics:
- interval: 3h
  cluster: k8s-infra-prow-build
  name: ci-cloud-provider-gcp-conformance-latest
  decorate: true
  decoration_config:
    timeout: 150m
  annotations:
    testgrid-tab-name: Conformance - Cloud Provider GCP - master
    testgrid-dashboards: provider-gcp-periodics
    description: Runs conformance tests using kubetest2 against cloud-provider-gcp master on GCE
  labels:
    preset-dind-enabled: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-gcp
    base_ref: master
    path_alias: k8s.io/cloud-provider-gcp
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 4
          memory: 14Gi
        requests:
          cpu: 4
          memory: 14Gi
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      command:
      - runner.sh
      args:
      - "/bin/bash"
      - "-c"
      # TODO: Use published release tars for cloud-provider-gcp if/once they exist
      - set -o errexit;
        set -o nounset;
        set -o pipefail;
        set -o xtrace;
        REPO_ROOT=$GOPATH/src/k8s.io/cloud-provider-gcp;
        cd;
        export GO111MODULE=on;
        if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
          export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
          echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
        else
          export BAZEL_VERSION="5.3.0";
          echo "BAZEL_VERSION - Falling back to 5.3.0";
        fi;
        /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
        go install sigs.k8s.io/kubetest2@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-gce@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest;
        if [[ -f "${REPO_ROOT}/ginko-test-package-version.env" ]]; then
          export TEST_PACKAGE_VERSION=$(cat "${REPO_ROOT}/ginko-test-package-version.env");
          echo "TEST_PACKAGE_VERSION set to ${TEST_PACKAGE_VERSION}";
        else
          export TEST_PACKAGE_VERSION="v1.25.0";
          echo "TEST_PACKAGE_VERSION - Falling back to v1.25.0";
        fi;
        kubetest2 gce -v 2 --repo-root $REPO_ROOT --build --up --down --test=ginkgo --master-size n1-standard-2  -- --test-package-version="${TEST_PACKAGE_VERSION}" --focus-regex='\[Conformance\]'
- interval: 24h
  cluster: k8s-infra-prow-build
  name: ci-cloud-provider-gcp-e2e-latest
  decorate: true
  decoration_config:
    timeout: 80m
  annotations:
    testgrid-tab-name: E2E Full - Cloud Provider GCP - master
    testgrid-dashboards: provider-gcp-periodics
    description: Runs e2e-full tests using kubetest2 against cloud-provider-gcp master on GCE
  labels:
    preset-dind-enabled: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-gcp
    base_ref: master
    path_alias: k8s.io/cloud-provider-gcp
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 4
          memory: 14Gi
        requests:
          cpu: 4
          memory: 14Gi
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      command:
      - runner.sh
      args:
      - "/bin/bash"
      - "-c"
      # TODO: Use published release tars for cloud-provider-gcp if/once they exist
      - set -o errexit;
        set -o nounset;
        set -o pipefail;
        set -o xtrace;
        REPO_ROOT=$GOPATH/src/k8s.io/cloud-provider-gcp;
        cd;
        export GO111MODULE=on;
        if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
          export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
          echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
        else
          export BAZEL_VERSION="5.3.0";
          echo "BAZEL_VERSION - Falling back to 5.3.0";
        fi;
        /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
        go install sigs.k8s.io/kubetest2@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-gce@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest;
        if [[ -f "${REPO_ROOT}/ginko-test-package-version.env" ]]; then
          export TEST_PACKAGE_VERSION=$(cat "${REPO_ROOT}/ginko-test-package-version.env");
          echo "TEST_PACKAGE_VERSION set to ${TEST_PACKAGE_VERSION}";
        else
          export TEST_PACKAGE_VERSION="v1.25.0";
          echo "TEST_PACKAGE_VERSION - Falling back to v1.25.0";
        fi;
        kubetest2 gce -v 2 --repo-root $REPO_ROOT --build --up --down --test=ginkgo --node-size n1-standard-4 --master-size n1-standard-8 -- --test-package-version="${TEST_PACKAGE_VERSION}" --parallel=30 --test-args='--minStartupPods=8' --skip-regex='\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]'

- interval: 6h
  cluster: k8s-infra-prow-build
  name: ci-cloud-provider-gcp-e2e-latest-with-kubernetes-master
  decorate: true
  decoration_config:
    timeout: 80m
  annotations:
    testgrid-tab-name: E2E Full - Cloud Provider GCP - with latest k8s.io/kubernetes
    testgrid-dashboards: provider-gcp-periodics
    description: Runs e2e-full tests using kubetest2 against cloud-provider-gcp master on GCE using latest k8s.io/kubernetes libraries
  labels:
    preset-dind-enabled: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-gcp
    base_ref: master
    path_alias: k8s.io/cloud-provider-gcp
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 4
          memory: 14Gi
        requests:
          cpu: 4
          memory: 14Gi
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      command:
      - runner.sh
      args:
      - "/bin/bash"
      - "-c"
      # TODO: Use published release tars for cloud-provider-gcp if/once they exist
      - set -o errexit;
        set -o nounset;
        set -o pipefail;
        set -o xtrace;
        REPO_ROOT=$GOPATH/src/k8s.io/cloud-provider-gcp;
        cd;
        export GO111MODULE=on;
        if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
          export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
          echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
        else
          export BAZEL_VERSION="5.3.0";
          echo "BAZEL_VERSION - Falling back to 5.3.0";
        fi;
        /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
        go install sigs.k8s.io/kubetest2@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-gce@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest;
        if [[ -f "${REPO_ROOT}/ginko-test-package-version.env" ]]; then
          export TEST_PACKAGE_VERSION=$(cat "${REPO_ROOT}/ginko-test-package-version.env");
          echo "TEST_PACKAGE_VERSION set to ${TEST_PACKAGE_VERSION}";
        else
          export TEST_PACKAGE_VERSION="v1.25.0";
          echo "TEST_PACKAGE_VERSION - Falling back to v1.25.0";
        fi;
        cd $GOPATH/src/k8s.io/cloud-provider-gcp;
        e2e/add-kubernetes-to-workspace.sh;
        kubetest2 gce -v 2 --repo-root $REPO_ROOT --build --up --down --test=ginkgo --node-size n1-standard-4 --master-size n1-standard-8 -- --test-package-version="${TEST_PACKAGE_VERSION}" --parallel=30 --test-args='--minStartupPods=8' --skip-regex='\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]'
- interval: 3h
  cluster: k8s-infra-prow-build
  name: ci-cloud-provider-gcp-conformance-latest-with-gcepd
  decorate: true
  decoration_config:
    timeout: 150m
  annotations:
    testgrid-tab-name: Conformance - Cloud Provider GCP with GCE-PD - master
    testgrid-dashboards: provider-gcp-periodics
    description: Runs conformance tests using kubetest2 against cloud-provider-gcp master on GCE
  labels:
    preset-dind-enabled: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-gcp
    base_ref: master
    path_alias: k8s.io/cloud-provider-gcp
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 4
          memory: 14Gi
        requests:
          cpu: 4
          memory: 14Gi
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      command:
      - runner.sh
      args:
      - "/bin/bash"
      - "-c"
      # TODO: Use published release tars for cloud-provider-gcp if/once they exist
      - set -o errexit;
        set -o nounset;
        set -o pipefail;
        set -o xtrace;
        REPO_ROOT=$GOPATH/src/k8s.io/cloud-provider-gcp;
        cd;
        export GO111MODULE=on;
        if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
          export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
          echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
        else
          export BAZEL_VERSION="5.3.0";
          echo "BAZEL_VERSION - Falling back to 5.3.0";
        fi;
        /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
        go install sigs.k8s.io/kubetest2@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-gce@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest;
        if [[ -f "${REPO_ROOT}/ginko-test-package-version.env" ]]; then
          export TEST_PACKAGE_VERSION=$(cat "${REPO_ROOT}/ginko-test-package-version.env");
          echo "TEST_PACKAGE_VERSION set to ${TEST_PACKAGE_VERSION}";
        else
          export TEST_PACKAGE_VERSION="v1.25.0";
          echo "TEST_PACKAGE_VERSION - Falling back to v1.25.0";
        fi;
        kubetest2 gce -v 2 --repo-root $REPO_ROOT --build --up --down --test=ginkgo --master-size n1-standard-2  -- --test-package-version="${TEST_PACKAGE_VERSION}" --focus-regex='\[Conformance\]' --test-args=--enabled-volume-drivers=gcepd
- interval: 24h
  cluster: k8s-infra-prow-build
  name: ci-cloud-provider-gcp-e2e-latest-with-gcepd
  decorate: true
  decoration_config:
    timeout: 80m
  annotations:
    testgrid-tab-name: E2E Full - Cloud Provider GCP with GCE-PD - master
    testgrid-dashboards: provider-gcp-periodics
    description: Runs e2e-full tests using kubetest2 against cloud-provider-gcp master on GCE
  labels:
    preset-dind-enabled: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-gcp
    base_ref: master
    path_alias: k8s.io/cloud-provider-gcp
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 4
          memory: 14Gi
        requests:
          cpu: 4
          memory: 14Gi
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      command:
      - runner.sh
      args:
      - "/bin/bash"
      - "-c"
      # TODO: Use published release tars for cloud-provider-gcp if/once they exist
      - set -o errexit;
        set -o nounset;
        set -o pipefail;
        set -o xtrace;
        REPO_ROOT=$GOPATH/src/k8s.io/cloud-provider-gcp;
        cd;
        export GO111MODULE=on;
        if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
          export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
          echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
        else
          export BAZEL_VERSION="5.3.0";
          echo "BAZEL_VERSION - Falling back to 5.3.0";
        fi;
        /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
        go install sigs.k8s.io/kubetest2@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-gce@latest;
        go install sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest;
        if [[ -f "${REPO_ROOT}/ginko-test-package-version.env" ]]; then
          export TEST_PACKAGE_VERSION=$(cat "${REPO_ROOT}/ginko-test-package-version.env");
          echo "TEST_PACKAGE_VERSION set to ${TEST_PACKAGE_VERSION}";
        else
          export TEST_PACKAGE_VERSION="v1.25.0";
          echo "TEST_PACKAGE_VERSION - Falling back to v1.25.0";
        fi;
        kubetest2 gce -v 2 --repo-root $REPO_ROOT --build --up --down --test=ginkgo --node-size n1-standard-4 --master-size n1-standard-8 -- --test-package-version="${TEST_PACKAGE_VERSION}" --parallel=30 --test-args='--minStartupPods=8 --enabled-volume-drivers=gcepd' --skip-regex='\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]'

- interval: 6h
  cluster: k8s-infra-prow-build
  name: ci-cloud-provider-gcp-e2e-scenario-kops-simple
  decorate: true
  decoration_config:
    timeout: 80m
  annotations:
    testgrid-tab-name: scenario kops-simple
    testgrid-dashboards: provider-gcp-periodics
    description: Runs the kops-simple scenario
  labels:
    preset-dind-enabled: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-gcp
    base_ref: master
    path_alias: cloud-provider-gcp
  - org: kubernetes
    repo: kops
    base_ref: master
    path_alias: kops
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 4
          memory: 14Gi
        requests:
          cpu: 4
          memory: 14Gi
      # we need privileged mode in order to do docker in docker
      securityContext:
        privileged: true
      command:
      - runner.sh
      args:
      - "/bin/bash"
      - "-c"
      - set -o errexit;
        set -o nounset;
        set -o pipefail;
        set -o xtrace;
        cd $GOPATH/src/cloud-provider-gcp;
        e2e/add-kubernetes-to-workspace.sh;
        e2e/scenarios/kops-simple
