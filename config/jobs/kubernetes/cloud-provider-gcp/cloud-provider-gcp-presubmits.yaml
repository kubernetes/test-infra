presubmits:
  kubernetes/cloud-provider-gcp:
  - name: cloud-provider-gcp-tests
    cluster: k8s-infra-prow-build
    always_run: true
    decorate: true
    path_alias: k8s.io/cloud-provider-gcp
    annotations:
      testgrid-dashboards: provider-gcp-presubmits
      description: Build and unit test for kubernetes/cloud-provider-gcp.
      testgrid-num-columns-recent: '30'
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - /bin/bash
        args:
        - -c
        - |
          if [ -f Makefile ]; then
            make test
          else
            REPO_ROOT=$(git rev-parse --show-toplevel);
            if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
              export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
              echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
            else
              export BAZEL_VERSION="5.3.0";
              echo "BAZEL_VERSION - Falling back to 5.3.0";
            fi;
            /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
            bazel test --test_output=errors -- //... -//vendor/...
          fi
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
  - name: cloud-provider-gcp-verify-all
    cluster: k8s-infra-prow-build
    always_run: true
    decorate: true
    path_alias: k8s.io/cloud-provider-gcp
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: provider-gcp-presubmits
      description: Run verify scripts on kubernetes/cloud-provider-gcp.
      testgrid-num-columns-recent: '30'
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
          - "/bin/bash"
          - "-c"
          - REPO_ROOT=$(git rev-parse --show-toplevel);
            if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
              export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
              echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
            else
              export BAZEL_VERSION="5.3.0";
              echo "BAZEL_VERSION - Falling back to 5.3.0";
            fi;
            /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
            ./tools/verify-all.sh
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi

  - name: pull-cloud-provider-gcp-e2e
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 80m
    path_alias: cloud-provider-gcp
    annotations:
      testgrid-dashboards: provider-gcp-presubmits
      description: Runs the e2e scenario against PRs
      testgrid-num-columns-recent: '30'
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: 14Gi
          requests:
            cpu: 4
            memory: 14Gi
        securityContext:
          privileged: true
        command:
        - runner.sh
        args:
        - "/bin/bash"
        - "-c"
        - set -o errexit;
          set -o nounset;
          set -o pipefail;
          set -o xtrace;
          cd $GOPATH/src/cloud-provider-gcp;
          tools/run-e2e-test.sh

  - name: pull-cloud-provider-gcp-scenario-kops-simple
    cluster: k8s-infra-prow-build
    always_run: true
    optional: true
    decorate: true
    decoration_config:
      timeout: 80m
    path_alias: cloud-provider-gcp
    annotations:
      testgrid-dashboards: provider-gcp-presubmits
      description: Runs the kops-simple scenario against PRs
      testgrid-num-columns-recent: '30'
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    extra_refs:
    - org: kubernetes
      repo: kops
      base_ref: master
      path_alias: kops
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 4
            memory: 14Gi
          requests:
            cpu: 4
            memory: 14Gi
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        command:
        - runner.sh
        args:
        - "/bin/bash"
        - "-c"
        - set -o errexit;
          set -o nounset;
          set -o pipefail;
          set -o xtrace;
          cd $GOPATH/src/cloud-provider-gcp;
          e2e/add-kubernetes-to-workspace.sh;
          e2e/scenarios/kops-simple

  - name: cloud-provider-gcp-e2e-full
    cluster: k8s-infra-prow-build
    always_run: true
    decorate: true
    decoration_config:
      timeout: 80m
    path_alias: k8s.io/cloud-provider-gcp
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    annotations:
      testgrid-dashboards: provider-gcp-presubmits
      description: End to end test of kubernetes/cloud-provider-gcp for bumping to next version
      testgrid-num-columns-recent: '30'
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        command:
        - runner.sh
        args:
        - "/bin/bash"
        - "-c"
        - set -o errexit;
          set -o nounset;
          set -o pipefail;
          set -o xtrace;
          REPO_ROOT=$(git rev-parse --show-toplevel);
          cd;
          export GO111MODULE=on;
          if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
            export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
            echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
          else
            export BAZEL_VERSION="5.3.0";
            echo "BAZEL_VERSION - Falling back to 5.3.0";
          fi;
          /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
          go install sigs.k8s.io/kubetest2@latest;
          go install sigs.k8s.io/kubetest2/kubetest2-gce@latest;
          go install sigs.k8s.io/kubetest2/kubetest2-tester-ginkgo@latest;
          if [[ -f "${REPO_ROOT}/ginko-test-package-version.env" ]]; then
            export TEST_PACKAGE_VERSION=$(cat "${REPO_ROOT}/ginko-test-package-version.env");
            echo "TEST_PACKAGE_VERSION set to ${TEST_PACKAGE_VERSION}";
          else
            export TEST_PACKAGE_VERSION="v1.25.0";
            echo "TEST_PACKAGE_VERSION - Falling back to v1.25.0";
          fi;
          kubetest2 gce -v 2 --repo-root "${REPO_ROOT}" --build --up --down --test=ginkgo --node-size n1-standard-4 --master-size n1-standard-8 -- --test-package-version="${TEST_PACKAGE_VERSION}" --parallel=30 --test-args='--minStartupPods=8' --skip-regex='\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]'
        resources:
          limits:
            cpu: 4
            memory: 14Gi
          requests:
            cpu: 4
            memory: 14Gi
  - name: cloud-provider-gcp-verify-up-to-date
    cluster: k8s-infra-prow-build
    always_run: true
    decorate: true
    path_alias: k8s.io/cloud-provider-gcp
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    annotations:
      testgrid-dashboards: provider-gcp-presubmits
      description: Run verify scripts on kubernetes/cloud-provider-gcp.
      testgrid-num-columns-recent: '30'
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - runner.sh
          args:
          - "/bin/bash"
          - "-c"
          - REPO_ROOT=$(git rev-parse --show-toplevel);
            if [[ -f "${REPO_ROOT}/.bazelversion" ]]; then
              export BAZEL_VERSION=$(cat "${REPO_ROOT}/.bazelversion");
              echo "BAZEL_VERSION set to ${BAZEL_VERSION}";
            else
              export BAZEL_VERSION="5.3.0";
              echo "BAZEL_VERSION - Falling back to 5.3.0";
            fi;
            /workspace/test-infra/images/kubekins-e2e/install-bazel.sh;
            ./tools/verify-up-to-date.sh
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi
