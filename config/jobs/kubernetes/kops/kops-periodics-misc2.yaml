# Test jobs generated by build_jobs.py (do not manually edit)
# 52 jobs, total of 1449 runs per week
periodics:

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "1.29", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-scenario-gcr-mirror
  cron: '11 0-23/1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20241120' --channel=alpha --networking=cilium --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable-1.29.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable-1.29.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: '1.29'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-1.29, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '11'
    testgrid-tab-name: kops-scenario-gcr-mirror

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-eks-pod-identity
  cluster: k8s-infra-kops-prow-build
  cron: '13 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/smoketest/run-test.sh
      env:
      - name: KOPS_BASE_URL
        value: "https://artifacts.k8s.io/binaries/kops/1.28.4/"
      - name: KOPS_VERSION
        value: "v1.28.4"
      - name: K8S_VERSION
        value: "v1.28.6"
      - name: KOPS_SKIP_E2E
        value: "1"
      - name: KOPS_CONTROL_PLANE_SIZE
        value: "3"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-state-store"
      - name: KOPS_DNS_DOMAIN
        value: "tests-kops-aws.k8s.io"
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-3322ce81e1-eafeb.tests-kops-aws.k8s.io"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-stable, kops-latest, sig-cluster-lifecycle-kops, sig-k8s-infra-canaries
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-eks-pod-identity

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-cni-cilium-k8s-ci
  cron: '5 15-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-cilium-k8s-ci

# {"cloud": "gce", "distro": "u2204", "extra_flags": "--gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-gce-cni-cilium-k8s-ci
  cron: '22 12-23/24 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=cilium --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-gce, kops-k8s-ci, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-gce-cni-cilium-k8s-ci

# {"cloud": "aws", "distro": "deb11", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-cni-calico-deb11
  cron: '59 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-11-amd64-20241202-1949' --channel=alpha --networking=calico --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: deb11
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-deb11, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-deb11

# {"cloud": "aws", "distro": "flatcararm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-cni-calico-flatcar
  cron: '40 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-4116.1.0-arm64-hvm' --channel=alpha --networking=calico --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcararm64
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-flatcar, kops-distros, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-flatcar

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--ipv6 --topology=private --dns=public --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-cni-calico-ipv6
  cron: '29 0-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=calico --ipv6 --topology=private --dns=public --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --dns=public --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-ipv6, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-ipv6

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--ipv6 --topology=private --dns=public --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-cni-cilium-ipv6
  cron: '22 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --ipv6 --topology=private --dns=public --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --dns=public --bastion --zones=us-west-2a --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-ipv6, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-cilium-ipv6

# {"cloud": "aws", "distro": "flatcararm64", "extra_flags": "--ipv6 --topology=private --dns=public --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-ipv6-flatcar
  cron: '41 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-4116.1.0-arm64-hvm' --channel=alpha --networking=cilium --ipv6 --topology=private --dns=public --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcararm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --dns=public --bastion --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-flatcar, kops-distros, kops-ipv6, kops-k8s-stable, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ipv6-flatcar

# {"cloud": "aws", "distro": "flatcararm64", "extra_flags": "--ipv6 --topology=private --dns=public --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-cni-calico-ipv6-flatcar
  cron: '52 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-4116.1.0-arm64-hvm' --channel=alpha --networking=calico --ipv6 --topology=private --dns=public --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: flatcararm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --dns=public --bastion --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-flatcar, kops-distros, kops-ipv6, kops-k8s-stable, kops-latest, kops-network-plugins, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-cni-calico-ipv6-flatcar

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--api-loadbalancer-type=public", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-scenario-no-irsa
  cron: '37 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --api-loadbalancer-type=public" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-no-irsa

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--api-loadbalancer-type=public --set=cluster.spec.cloudProvider.aws.warmPool.minSize=1 --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-warm-pool
  cron: '54 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --api-loadbalancer-type=public --set=cluster.spec.cloudProvider.aws.warmPool.minSize=1 --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public --set=cluster.spec.cloudProvider.aws.warmPool.minSize=1 --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-warm-pool

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-private
  cron: '24 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=calico --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --topology=private --bastion --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-private

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--zones=us-west-1a --dns=public --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-scenario-terraform
  cron: '5 13-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --zones=us-west-1a --dns=public --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --terraform-version=1.5.5 \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --zones=us-west-1a --dns=public --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-terraform

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--ipv6 --topology=private --bastion --zones=us-west-1a --dns=public --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-scenario-ipv6-terraform
  cron: '17 23-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --ipv6 --topology=private --bastion --zones=us-west-1a --dns=public --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --terraform-version=1.5.5 \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --ipv6 --topology=private --bastion --zones=us-west-1a --dns=public --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-ipv6, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-scenario-ipv6-terraform

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-ha-euwest1
  cron: '10 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=calico --master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ha-euwest1

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-arm64-release
  cron: '44 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=calico --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-arm64-release

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-arm64-ci
  cron: '59 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=calico --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-arm64-ci

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-arm64-conformance
  cron: '5 7-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=calico --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Flaky\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-arm64-conformance

# {"cloud": "aws", "distro": "u2404", "extra_flags": "--node-size=c5.large --master-size=c5.large --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "calico"}
- name: e2e-kops-aws-amd64-conformance
  cron: '18 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-20241109' --channel=alpha --networking=calico --node-size=c5.large --master-size=c5.large --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Flaky\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404
    test.kops.k8s.io/extra_flags: --node-size=c5.large --master-size=c5.large --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2404, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-amd64-conformance

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-aws-load-balancer-controller
  cluster: k8s-infra-kops-prow-build
  cron: '37 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/aws-lb-controller/run-test.sh
      env:
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-state-store"
      - name: KOPS_DNS_DOMAIN
        value: "tests-kops-aws.k8s.io"
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-4342699135-9b4dd.tests-kops-aws.k8s.io"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-aws-load-balancer-controller

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-keypair-rotation-ha
  cluster: k8s-infra-kops-prow-build
  cron: '26 12-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 270m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/keypair-rotation/run-test.sh
      env:
      - name: KOPS_CONTROL_PLANE_SIZE
        value: "3"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-state-store"
      - name: KOPS_DNS_DOMAIN
        value: "tests-kops-aws.k8s.io"
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-349a115d39-16181.tests-kops-aws.k8s.io"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-keypair-rotation-ha

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-metrics-server
  cluster: k8s-infra-kops-prow-build
  cron: '42 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/metrics-server/run-test.sh
      env:
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-state-store"
      - name: KOPS_DNS_DOMAIN
        value: "tests-kops-aws.k8s.io"
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-127cbce38e-b114d.tests-kops-aws.k8s.io"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-metrics-server

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-pod-identity-webhook
  cluster: k8s-infra-kops-prow-build
  cron: '50 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/podidentitywebhook/run-test.sh
      env:
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-state-store"
      - name: KOPS_DNS_DOMAIN
        value: "tests-kops-aws.k8s.io"
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-49d63c55eb-ac683.tests-kops-aws.k8s.io"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-pod-identity-webhook

# {"cloud": "aws", "distro": "u2204", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-addon-resource-tracking
  cluster: k8s-infra-kops-prow-build
  cron: '43 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-dind-enabled: "true"
  max_concurrency: 1
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: prowjob-default-sa
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/addon-resource-tracking/run-test.sh
      env:
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-ci-prow-state-store"
      - name: KOPS_DNS_DOMAIN
        value: "tests-kops-aws.k8s.io"
      - name: DISCOVERY_STORE
        value: "s3://k8s-kops-ci-prow"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-c0d41e2af2-13250.tests-kops-aws.k8s.io"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      - name: KOPS_IRSA
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-addon-resource-tracking

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--set=cluster.spec.externalDNS.provider=external-dns --dns=public --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-external-dns
  cron: '25 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --set=cluster.spec.externalDNS.provider=external-dns --dns=public --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --set=cluster.spec.externalDNS.provider=external-dns --dns=public --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-external-dns

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--ipv6 --bastion --set=cluster.spec.externalDNS.provider=external-dns --dns=public --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-ipv6-external-dns
  cron: '55 5-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --ipv6 --bastion --set=cluster.spec.externalDNS.provider=external-dns --dns=public --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --ipv6 --bastion --set=cluster.spec.externalDNS.provider=external-dns --dns=public --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-ipv6, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ipv6-external-dns

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "APIServerNodes", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-apiserver-nodes
  cron: '19 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=APIServerNodes \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --template-path=/home/prow/go/src/k8s.io/kops/tests/e2e/templates/apiserver.yaml.tmpl \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: APIServerNodes
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-apiserver-nodes

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-karpenter
  cron: '14 16-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|HostPort|two.untainted.nodes" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --instance-manager=karpenter --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-karpenter

# {"cloud": "aws", "distro": "u2404arm64", "extra_flags": "--instance-manager=karpenter --ipv6 --topology=private --bastion --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-ipv6-karpenter
  cron: '55 7-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-arm64-server-20241109' --channel=alpha --networking=cilium --instance-manager=karpenter --ipv6 --topology=private --bastion --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-marker=stable.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|HostPort|two.untainted.nodes" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2404arm64
    test.kops.k8s.io/extra_flags: --instance-manager=karpenter --ipv6 --topology=private --bastion --master-size=c6g.xlarge --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2404, kops-ipv6, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-ipv6-karpenter

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-hostname-bug121018
  cron: '4 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=cilium --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|nfs|NFS|Gluster|NodeProblemDetector|fallback.to.local.terminating.endpoints.when.there.are.no.ready.endpoints.with.externalTrafficPolicy.Local|Services.*rejected.*endpoints|TCP.CLOSE_WAIT|external.IP.is.not.assigned.to.a.node|same.port.number.but.different.protocols|same.hostPort.but.different.hostIP.and.protocol|serve.endpoints.on.same.port.and.different.protocols|should.check.kube-proxy.urls|should.verify.that.all.nodes.have.volume.limits" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-al2023, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-hostname-bug121018

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--set=cluster.spec.containerd.selinuxEnabled=true --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "SELinuxMount", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-selinux
  cron: '38 1-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.9.0_HVM-20240327-x86_64-4-Hourly2-GP3' --channel=alpha --networking=cilium --set=cluster.spec.containerd.selinuxEnabled=true --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=SELinuxMount \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=120m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:SELinux\]" \
          --skip-regex="\[Feature:Volumes\]|\[Driver:.nfs\]|\[Driver:.local\]|\[FeatureGate:SELinuxMount\]|\[FeatureGate:SELinuxChangePolicy\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --set=cluster.spec.containerd.selinuxEnabled=true --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: SELinuxMount
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-rhel8, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-selinux

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--set=cluster.spec.containerd.selinuxEnabled=true --set=cluster.spec.kubeControllerManager.controllers=* --set=cluster.spec.kubeControllerManager.controllers=selinux-warning-controller --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "SELinuxMount", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-selinux-changepolicy
  cron: '46 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.9.0_HVM-20240327-x86_64-4-Hourly2-GP3' --channel=alpha --networking=cilium --set=cluster.spec.containerd.selinuxEnabled=true --set=cluster.spec.kubeControllerManager.controllers=* --set=cluster.spec.kubeControllerManager.controllers=selinux-warning-controller --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=SELinuxMount \
          --kubernetes-feature-gates=SELinuxChangePolicy \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=120m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:SELinux\]" \
          --skip-regex="\[Feature:Volumes\]|\[Driver:.nfs\]|\[Driver:.local\]|\[FeatureGate:SELinuxMount\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --set=cluster.spec.containerd.selinuxEnabled=true --set=cluster.spec.kubeControllerManager.controllers=* --set=cluster.spec.kubeControllerManager.controllers=selinux-warning-controller --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: SELinuxMount
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-rhel8, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-selinux-changepolicy

# {"cloud": "aws", "distro": "rhel8", "extra_flags": "--set=cluster.spec.containerd.selinuxEnabled=true --set=cluster.spec.kubeControllerManager.controllers=* --set=cluster.spec.kubeControllerManager.controllers=selinux-warning-controller --discovery-store=s3://k8s-kops-prow/discovery", "feature_flags": "SELinuxMount", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-selinux-alpha
  cron: '8 0-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.9.0_HVM-20240327-x86_64-4-Hourly2-GP3' --channel=alpha --networking=cilium --set=cluster.spec.containerd.selinuxEnabled=true --set=cluster.spec.kubeControllerManager.controllers=* --set=cluster.spec.kubeControllerManager.controllers=selinux-warning-controller --discovery-store=s3://k8s-kops-prow/discovery" \
          --env=KOPS_FEATURE_FLAGS=SELinuxMount \
          --kubernetes-feature-gates=SELinuxMount,SELinuxChangePolicy \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=120m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:SELinux\]" \
          --skip-regex="\[Feature:Volumes\]|\[Driver:.nfs\]|\[Driver:.local\]|\[Feature:SELinuxMountReadWriteOncePodOnly\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/extra_flags: --set=cluster.spec.containerd.selinuxEnabled=true --set=cluster.spec.kubeControllerManager.controllers=* --set=cluster.spec.kubeControllerManager.controllers=selinux-warning-controller --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/feature_flags: SELinuxMount
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-rhel8, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-selinux-alpha

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--set=spec.kubeAPIServer.runtimeConfig=api/all=true --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-kops-aws-sig-network-beta
  cron: '56 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20241120' --channel=alpha --networking=cilium --set=spec.kubeAPIServer.runtimeConfig=api/all=true --discovery-store=s3://k8s-kops-prow/discovery" \
          --kubernetes-feature-gates=AllBeta \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=120m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[sig-network\]" \
          --skip-regex="Alpha|LoadBalancer|NetworkPolicy|Disruptive|Flaky|IPv6|PerformanceDNS|SCTP|Ingress|KubeProxy|Traffic.Distribution|Topology.Hints" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --set=spec.kubeAPIServer.runtimeConfig=api/all=true --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2204, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-sig-network-beta

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--image=cos-cloud/cos-105-17412-370-67 --set=spec.nodeProblemDetector.enabled=true --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-cos-gce-canary
  cron: '16 1-23/3 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=kubenet --image=cos-cloud/cos-105-17412-370-67 --set=spec.nodeProblemDetector.enabled=true --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --image=cos-cloud/cos-105-17412-370-67 --set=spec.nodeProblemDetector.enabled=true --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '35'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--set=spec.nodeProblemDetector.enabled=true --set=spec.packages=nfs-utils --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-canary
  cron: '33 2-23/3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=kubenet --set=spec.nodeProblemDetector.enabled=true --set=spec.packages=nfs-utils --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --set=spec.nodeProblemDetector.enabled=true --set=spec.packages=nfs-utils --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '35'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-canary

# {"cloud": "aws", "distro": "u2204", "extra_flags": "--set=spec.nodeProblemDetector.enabled=true --set=spec.packages=nfs-common --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-ubuntu-aws-canary
  cron: '8 1-23/3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20241120' --channel=alpha --networking=kubenet --set=spec.nodeProblemDetector.enabled=true --set=spec.packages=nfs-common --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=60m --master-os-distro=ubuntu --node-os-distro=ubuntu" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/extra_flags: --set=spec.nodeProblemDetector.enabled=true --set=spec.packages=nfs-common --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2204, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '35'
    testgrid-tab-name: ci-kubernetes-e2e-ubuntu-aws-canary

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--image=cos-cloud/cos-105-17412-370-67 --set=spec.networking.networkID=default --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-cos-gce-slow-canary
  cron: '9 1-23/4 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 180m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=kubenet --image=cos-cloud/cos-105-17412-370-67 --set=spec.networking.networkID=default --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=150m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Slow\]" \
          --skip-regex="\[Driver:.gcepd\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --image=cos-cloud/cos-105-17412-370-67 --set=spec.networking.networkID=default --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-slow-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--set=spec.packages=nfs-utils --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-slow-canary
  cron: '22 2-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 180m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=kubenet --set=spec.packages=nfs-utils --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=150m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Slow\]" \
          --skip-regex="\[Driver:.gcepd\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --set=spec.packages=nfs-utils --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-slow-canary

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--image=cos-cloud/cos-105-17412-370-67 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-cos-gce-conformance-canary
  cron: '58 3-23/4 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 230m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=kubenet --image=cos-cloud/cos-105-17412-370-67 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=200m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[FOOBAR\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --image=cos-cloud/cos-105-17412-370-67 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-conformance-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-conformance-canary
  cron: '47 1-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 230m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=kubenet --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=200m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]" \
          --skip-regex="\[FOOBAR\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-conformance-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": "latest", "networking": "amazonvpc"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-conformance-aws-cni
  cron: '14 1-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 230m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=amazonvpc --node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery" \
          --cluster-name="kubernetes-e2e-al2023-aws-conformance-aws-cni.k8s.local" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://dl.k8s.io/release/stable.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=200m" \
          --test-package-marker=stable.txt \
          --focus-regex="\[Conformance\]" \
          --skip-regex="\[FOOBAR\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: amazonvpc
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-stable, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-conformance-aws-cni

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "amazonvpc"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-conformance-aws-cni-canary
  cron: '10 2-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 230m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=amazonvpc --node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery" \
          --cluster-name="kubernetes-e2e-al2023-aws-conformance-aws-cni-canary.k8s.local" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=200m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]" \
          --skip-regex="\[FOOBAR\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: amazonvpc
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-conformance-aws-cni-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeProxy.enabled=false --set=spec.networking.cilium.enableNodePort=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "cilium"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-conformance-cilium-canary
  cron: '6 2-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 230m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=cilium --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeProxy.enabled=false --set=spec.networking.cilium.enableNodePort=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery" \
          --cluster-name="kubernetes-e2e-al2023-aws-conformance-cilium.k8s.local" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=200m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]" \
          --skip-regex="should.serve.endpoints.on.same.port.and.different.protocols|same.hostPort.but.different.hostIP.and.protocol" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeProxy.enabled=false --set=spec.networking.cilium.enableNodePort=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-conformance-cilium-canary

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--image=cos-cloud/cos-105-17412-370-67 --node-count=3 --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-cos-gce-disruptive-canary
  cron: '20 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 630m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=kubenet --image=cos-cloud/cos-105-17412-370-67 --node-count=3 --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=600m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Disruptive\]" \
          --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]|\[sig-cloud-provider-gcp\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --image=cos-cloud/cos-105-17412-370-67 --node-count=3 --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-disruptive-canary

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--image=cos-cloud/cos-105-17412-370-67 --node-count=3 --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "gce"}
- name: e2e-ci-kubernetes-e2e-cos-gce-reboot-canary
  cron: '46 5-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 330m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=gce --image=cos-cloud/cos-105-17412-370-67 --node-count=3 --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=300m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:Reboot\]" \
          --skip-regex="\[FOOBAR\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --image=cos-cloud/cos-105-17412-370-67 --node-count=3 --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-reboot-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "amazonvpc"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-disruptive-canary
  cron: '57 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 530m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=amazonvpc --node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=500m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Disruptive\]" \
          --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --node-size=r5d.xlarge --master-size=r5d.xlarge --set=cluster.spec.networking.amazonVPC.env=ENABLE_PREFIX_DELEGATION=true --set=cluster.spec.networking.amazonVPC.env=MINIMUM_IP_TARGET=80 --set=cluster.spec.networking.amazonVPC.env=WARM_IP_TARGET=10 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: amazonvpc
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-disruptive-canary

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--set=cluster.spec.cloudConfig.manageStorageClasses=false --image=cos-cloud/cos-105-17412-370-67 --node-volume-size=100 --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-cos-gce-serial-canary
  cron: '31 4-23/6 * * *'
  labels:
    preset-k8s-ssh: "true"
    preset-storage-e2e-service-account: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 630m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=kubenet --set=cluster.spec.cloudConfig.manageStorageClasses=false --image=cos-cloud/cos-105-17412-370-67 --node-volume-size=100 --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=600m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Serial\]" \
          --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --set=cluster.spec.cloudConfig.manageStorageClasses=false --image=cos-cloud/cos-105-17412-370-67 --node-volume-size=100 --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '71'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-serial-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--node-volume-size=100 --set=spec.packages=nfs-utils --set=spec.packages=git --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-serial-canary
  cron: '6 0-23/6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 630m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=kubenet --node-volume-size=100 --set=spec.packages=nfs-utils --set=spec.packages=git --discovery-store=s3://k8s-kops-prow/discovery" \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=600m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Serial\]" \
          --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]" \
          --parallel=1
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --node-volume-size=100 --set=spec.packages=nfs-utils --set=spec.packages=git --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '71'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-serial-canary

# {"cloud": "aws", "distro": "al2023", "extra_flags": "--set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --set=spec.kubeAPIServer.runtimeConfig=api/all=true --discovery-store=s3://k8s-kops-prow/discovery", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-al2023-aws-alpha-features
  cron: '17 3-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  cluster: k8s-infra-kops-prow-build
  decorate: true
  decoration_config:
    timeout: 270m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/al2023-ami-2023.6.20241121.0-kernel-6.1-x86_64' --channel=alpha --networking=kubenet --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --set=spec.kubeAPIServer.runtimeConfig=api/all=true --discovery-store=s3://k8s-kops-prow/discovery" \
          --kubernetes-feature-gates=AllAlpha,-EventedPLEG \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=240m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:(AdmissionWebhookMatchConditions|InPlacePodVerticalScaling|SidecarContainers|StorageVersionAPI|PodPreset|StatefulSetAutoDeletePVC)\]|Networking" \
          --skip-regex="\[Feature:(SCTPConnectivity|Volumes|Networking-Performance)\]|IPv6|csi-hostpath-v0" \
          --parallel=4
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/distro: al2023
    test.kops.k8s.io/extra_flags: --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --set=spec.kubeAPIServer.runtimeConfig=api/all=true --discovery-store=s3://k8s-kops-prow/discovery
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: amazon-ec2-kops, kops-distro-al2023, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-al2023-aws-alpha-features

# {"cloud": "gce", "distro": "cos105", "extra_flags": "--image=cos-cloud/cos-105-17412-370-67 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --set=spec.kubeAPIServer.runtimeConfig=api/all=true --gce-service-account=default", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": "latest", "networking": "kubenet"}
- name: e2e-ci-kubernetes-e2e-cos-gce-alpha-features
  cron: '22 2-23/4 * * *'
  labels:
    preset-k8s-ssh: "true"
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 270m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --admin-access=0.0.0.0/0 \
          --create-args="--channel=alpha --networking=kubenet --image=cos-cloud/cos-105-17412-370-67 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --set=spec.kubeAPIServer.runtimeConfig=api/all=true --gce-service-account=default" \
          --kubernetes-feature-gates=AllAlpha,DisableCloudProviders,DisableKubeletCloudCredentialProviders,-EventedPLEG \
          --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --test-args="-test.timeout=240m" \
          --test-package-url=https://storage.googleapis.com/k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Feature:(AdmissionWebhookMatchConditions|InPlacePodVerticalScaling|SidecarContainers|StorageVersionAPI|PodPreset|StatefulSetAutoDeletePVC)\]|Networking" \
          --skip-regex="\[Feature:(SCTPConnectivity|Volumes|Networking-Performance)\]|IPv6|csi-hostpath-v0" \
          --parallel=4
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      imagePullPolicy: Always
      resources:
        limits:
          cpu: "4"
          memory: 6Gi
        requests:
          cpu: "4"
          memory: 6Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/distro: cos105
    test.kops.k8s.io/extra_flags: --image=cos-cloud/cos-105-17412-370-67 --set=spec.kubeAPIServer.logLevel=4 --set=spec.kubeAPIServer.auditLogMaxSize=2000000000 --set=spec.kubeAPIServer.enableAggregatorRouting=true --set=spec.kubeAPIServer.auditLogPath=/var/log/kube-apiserver-audit.log --set=spec.kubeAPIServer.runtimeConfig=api/all=true --gce-service-account=default
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: latest
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-cos105, kops-gce, kops-k8s-ci, kops-latest, sig-cluster-lifecycle-kops, sig-cluster-lifecycle-kubeup-to-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: ci-kubernetes-e2e-cos-gce-alpha-features
