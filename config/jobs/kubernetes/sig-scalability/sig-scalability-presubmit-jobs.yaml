presubmits:
  kubernetes/kubernetes:
  # This job is lighweight version of release blocking periodic job 'ci-kubernetes-e2e-gci-gce-scalability'.
  # Some elements (like access tokens) are removed to speed up testing.
  - name: pull-kubernetes-e2e-gce-100-performance
    cluster: k8s-infra-prow-build
    always_run: false
    skip_report: false
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    decoration_config:
      timeout: 120m
    extra_refs:
    - org: kubernetes
      repo: perf-tests
      base_ref: master
      path_alias: k8s.io/perf-tests
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-presubmits: "true"
    annotations:
      fork-per-release: "true"
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-kubernetes-e2e-gce-100-performance
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=e2-standard-8
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --flush-mem-after-build=true
        - --gcp-node-image=gci
        - --gcp-nodes=100
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --tear-down-previous
        - --env=CL2_ENABLE_DNS_PROGRAMMING=true
        - --env=CL2_SCHEDULER_THROUGHPUT_THRESHOLD=0
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--prometheus-scrape-kubelets=true
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/load_throughput.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        resources:
          # Using 6 CPU to speed up bazel build phase (2 is enough for the test itself)
          limits:
            cpu: 6
            memory: "14Gi"
          requests:
            cpu: 6
            memory: "14Gi"
        securityContext:
          privileged: true

  # This is an equivalent of the ci-kubernetes-e2e-gce-scale-correctness test
  # at 100 node scale. It's an optional presubmit to simplify testing changes
  # that affect the releasing blocking ci correctness tests.
  - name: pull-kubernetes-e2e-gce-correctness
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    decorate: true
    path_alias: k8s.io/kubernetes
    decoration_config:
      timeout: 270m
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-e2e-scalability-common: "true"
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-kubernetes-e2e-gce-correctness
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --cluster=gce-cluster
        - --env=CONCURRENT_SERVICE_SYNCS=20 # support 20 LoadBalancer Services in parallel to deal with existing CI load #122286
        - --env=HEAPSTER_MACHINE_TYPE=e2-standard-2
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --gcp-master-image=gci
        - --gcp-node-image=gci
        - --gcp-node-size=e2-small
        - --gcp-nodes=100
        - --gcp-project-type=scalability-project
        - --gcp-ssh-proxy-instance-name=gce-cluster-master
        - --gcp-zone=us-east1-b
        - --ginkgo-parallel=40
        - --provider=gce
        - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:([^L].*|L[^o].*|Lo[^a].*|Loa[^d].*)\] --minStartupPods=8 --node-schedulable-timeout=90m
        - --timeout=240m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        resources:
          limits:
            cpu: 6
            memory: "16Gi"
          requests:
            cpu: 6
            memory: "16Gi"
        securityContext:
          privileged: true

  - name: pull-kubernetes-kubemark-e2e-gce-big
    cluster: k8s-infra-prow-build
    always_run: false
    optional: true
    skip_report: false
    max_concurrency: 12
    skip_branches:
    - release-\d+\.\d+  # per-release image
    decorate: true
    path_alias: k8s.io/kubernetes
    decoration_config:
      timeout: 120m
    extra_refs:
    - org: kubernetes
      repo: perf-tests
      base_ref: master
      path_alias: k8s.io/perf-tests
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-scalability-presubmits: "true"
    annotations:
      fork-per-release: "true"
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-kubernetes-kubemark-e2e-gce-big
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --cluster=
        - --flush-mem-after-build=true
        - --gcp-master-size=n2-standard-4
        - --gcp-node-size=e2-standard-8
        - --gcp-nodes=7
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --kubemark-master-size=n2-standard-16
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=160 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --provider=gce
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/kubemark_500_nodes.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        # TODO(krzyzacy): Figure out bazel built kubemark image
        #env:
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        resources:
          limits:
            # Using 6 CPU to speed up bazel build phase (4 is enough for the test itself)
            cpu: 6
            memory: 16Gi
          requests:
            cpu: 6
            memory: 16Gi
        securityContext:
          privileged: true

  - name: pull-kubernetes-kubemark-e2e-gce-scale
    cluster: k8s-infra-prow-build
    always_run: false
    max_concurrency: 1
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    decorate: true
    path_alias: k8s.io/kubernetes
    decoration_config:
      timeout: 1100m
    extra_refs:
    - org: kubernetes
      repo: perf-tests
      base_ref: master
      path_alias: k8s.io/perf-tests
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-scale: "true"
      preset-e2e-scalability-presubmits: "true"
    annotations:
      fork-per-release: "true"
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-kubernetes-kubemark-e2e-gce-scale
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --cluster=
        - --flush-mem-after-build=true
        - --gcp-node-size=e2-standard-8
        - --gcp-nodes=84
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=5000
        - --kubemark-master-size=n2-standard-64
        - --provider=gce
        # With APF only sum of --max-requests-inflight and --max-mutating-requests-inflight matters, so set --max-mutating-requests-inflight to 0.
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=640 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--nodes=5000
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=1080m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        # TODO(krzyzacy): Figure out bazel built kubemark image
        #env:
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        resources:
          limits:
            # Using 6 CPU to speed up bazel build phase (4 is enough for the test itself)
            cpu: 6
            memory: "16Gi"
          requests:
            cpu: 6
            memory: "16Gi"
        securityContext:
          privileged: true

  kubernetes/perf-tests:
  - name: pull-perf-tests-benchmark-kube-dns
    cluster: k8s-infra-prow-build
    always_run: false
    skip_report: false
    max_concurrency: 3
    branches:
    - master
    decorate: true
    path_alias: k8s.io/perf-tests
    decoration_config:
      timeout: 140m
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-benchmark-kube-dns
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    run_if_changed: ^dns/.*$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --check-leaked-resources
        - --cluster=kube-dns-benchmark
        - --extract=ci/latest
        - --gcp-nodes=3
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=kube-dns
        - --test-cmd-args=$(ARTIFACTS)/out
        - --test-cmd-args=$(ARTIFACTS)
        - --test-cmd-name=KubeDnsBenchmark
        - --timeout=120m
        resources:
          limits:
            cpu: 4
            memory: "12Gi"
          requests:
            cpu: 4
            memory: "12Gi"

  - name: pull-perf-tests-clusterloader2
    cluster: k8s-infra-prow-build
    always_run: false
    skip_report: false
    max_concurrency: 3
    branches:
    - master
    decorate: true
    path_alias: k8s.io/perf-tests
    decoration_config:
      timeout: 120m
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-presubmits: "true"
    annotations:
      fork-per-release: "true"
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-clusterloader2
    run_if_changed: ^clusterloader2/.*$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=e2-standard-8
        - --extract=ci/latest
        - --gcp-nodes=100
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --tear-down-previous
        - --env=CL2_ENABLE_DNS_PROGRAMMING=true
        - --env=CL2_SCHEDULER_THROUGHPUT_THRESHOLD=0
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/load_throughput.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        resources:
          limits:
            cpu: 2
            memory: "6Gi"
          requests:
            cpu: 2
            memory: "6Gi"

  - name: pull-perf-tests-clusterloader2-kubemark
    cluster: k8s-infra-prow-build
    always_run: false
    skip_report: false
    max_concurrency: 3
    branches:
    - master
    decorate: true
    path_alias: k8s.io/perf-tests
    decoration_config:
      timeout: 120m
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-scalability-presubmits: "true"
    annotations:
      fork-per-release: "true"
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-clusterloader2-kubemark
    run_if_changed: ^clusterloader2/.*$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --cluster=
        - --extract=ci/latest
        - --gcp-master-size=n2-standard-2
        - --gcp-node-size=e2-standard-4
        - --gcp-nodes=4
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=100
        - --kubemark-master-size=n2-standard-8
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --provider=gce
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--provider=kubemark
        - --env=CL2_ENABLE_DNS_PROGRAMMING=true
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/kubemark_load_throughput.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        resources:
          limits:
            cpu: 2
            memory: "6Gi"
          requests:
            cpu: 2
            memory: "6Gi"
        securityContext:
          privileged: true

  # Fork of kubernetes/kubernetes: pull-kubernetes-e2e-gce-scale-performance-manual
  - name: pull-perf-tests-clusterloader2-e2e-gce-scale-performance-manual
    cluster: k8s-infra-prow-build
    always_run: false
    max_concurrency: 1
    branches:
    - master
    decorate: true
    path_alias: k8s.io/perf-tests
    decoration_config:
      timeout: 450m
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: k8s.io/release
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-presubmits: "true"
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-clusterloader2-e2e-gce-scale-performance
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=e2-standard-32
        # TODO(mborsz): Adjust or remove this change once we understand coredns
        # memory usage regression.
        - --env=KUBE_DNS_MEMORY_LIMIT=300Mi
        - --extract=ci/fast/latest-fast
        - --gcp-nodes=5000
        - --gcp-project-type=scalability-scale-project
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --metadata-sources=cl2-metadata.json
        - --env=CL2_LOAD_TEST_THROUGHPUT=50
        - --env=CL2_DELETE_TEST_THROUGHPUT=50
        - --env=CL2_RATE_LIMIT_POD_CREATION=false
        - --env=KUBE_CONTROLLER_MANAGER_TEST_ARGS=--endpointslice-updates-batch-period=500ms --endpoint-updates-batch-period=500ms
        # Overrides CONTROLLER_MANAGER_TEST_ARGS from preset-e2e-scalability-periodics.
        - --env=CONTROLLER_MANAGER_TEST_ARGS=--profiling --contention-profiling --kube-api-qps=100 --kube-api-burst=100
        # Overrides SCHEDULER_TEST_ARGS from preset-e2e-scalability-periodics.
        # TODO(#1311): Clean this up after the experiment - it should allow
        #   to hugely decrease pod-startup-latency across the whole test.
        #   Given that individual controllers have separate QPS limits, we allow
        #   scheduler to keep up with the load from deployment, daemonset and job
        #   performing pod creations at once.
        - --env=SCHEDULER_TEST_ARGS=--profiling --contention-profiling --kube-api-qps=500 --kube-api-burst=500
        # With APF only sum of --max-requests-inflight and --max-mutating-requests-inflight matters, so set --max-mutating-requests-inflight to 0.
        - --env=APISERVER_TEST_ARGS=--max-requests-inflight=640 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--nodes=5000
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/ignore_known_gce_container_restarts.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/5000_nodes.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=420m
        resources:
          limits:
            # Using 6 CPU to speed up bazel build phase (4 is enough for the test itself)
            cpu: 6
            memory: "16Gi"
          requests:
            cpu: 6
            memory: "16Gi"
        securityContext:
          privileged: true

  - name: pull-perf-tests-util-images
    cluster: k8s-infra-prow-build
    always_run: false
    skip_report: false
    max_concurrency: 10
    run_if_changed: ^util-images/.*$
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    decorate: true
    path_alias: k8s.io/perf-tests
    decoration_config:
      timeout: 60m
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-util-images
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        args:
        - /home/prow/go/src/k8s.io/perf-tests/util-images/presubmit.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 1
            memory: "2Gi"
          limits:
            cpu: 1
            memory: "2Gi"

  - name: pull-perf-tests-verify-all-python
    cluster: k8s-infra-prow-build
    decorate: true
    always_run: true
    skip_branches:
      - release-1.1[2-9] # Presubmit has been implemented for 1.20+ releases
    path_alias: "k8s.io/perf-tests"
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-verify-python-all
    spec:
      containers:
        - image: python:3
          command:
            - make
          args:
            - verify-all-python
          resources:
            requests:
              cpu: 1
              memory: "2Gi"
            limits:
              cpu: 1
              memory: "2Gi"

  - name: pull-perf-tests-verify-test
    cluster: k8s-infra-prow-build
    decorate: true
    always_run: true
    skip_branches:
    - release-1.19 # We use verify-all for that branch
    path_alias: "k8s.io/perf-tests"
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-verify-test
    spec:
      containers:
      - image: public.ecr.aws/docker/library/golang:1.22
        command:
        - verify/test.sh
        resources:
          requests:
            cpu: 1
            memory: "2Gi"
          limits:
            cpu: 1
            memory: "2Gi"

  - name: pull-perf-tests-verify-dashboard
    cluster: k8s-infra-prow-build
    decorate: true
    run_if_changed: ^clusterloader2/pkg/prometheus/manifests/dashboards/.*\.json$
    skip_branches:
    - release-1.1[2-8] # Presubmit has been implemented for 1.19+ releases
    path_alias: "k8s.io/perf-tests"
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-verify-dashboard
    spec:
      containers:
      - image: python:3.7
        command:
        - make
        args:
        - verify-dashboard
        resources:
          requests:
            cpu: 1
            memory: "2Gi"
          limits:
            cpu: 1
            memory: "2Gi"

  - name: pull-perf-tests-verify-lint
    cluster: k8s-infra-prow-build
    decorate: true
    always_run: true
    skip_branches:
    - release-1.1[2-8] # Presubmit has been implemented for 1.19+ releases
    path_alias: "k8s.io/perf-tests"
    annotations:
      testgrid-dashboards: presubmits-kubernetes-scalability
      testgrid-tab-name: pull-perf-tests-verify-lint
    spec:
      containers:
      - image: golangci/golangci-lint:v1.58.2
        command:
        - make
        args:
        - verify-lint
        resources:
          requests:
            cpu: 2
            memory: "2Gi"
          limits:
            cpu: 2
            memory: "2Gi"
