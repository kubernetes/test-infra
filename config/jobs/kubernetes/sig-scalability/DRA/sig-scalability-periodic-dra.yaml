periodics:
  - name: ci-kubernetes-e2e-azure-dra-scalability
    tags:
    - "perfDashPrefix: azure-dra-100Nodes"
    - "perfDashBuildsCount: 270"
    - "perfDashJobType: performance"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 3h
    interval: 12h
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    - org: kubernetes
      repo: perf-tests
      base_ref: master
      path_alias: k8s.io/perf-tests
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250925-95b5a2c7a5-master
        command:
        - runner.sh
        - ./scripts/ci-entrypoint.sh
        args:
        - bash
        - -c
        - >-
          sleep 300 &&
          cd ${GOPATH}/src/k8s.io/perf-tests/ &&
          ./run-e2e.sh cluster-loader2
          --nodes=100 \
          --provider=aks \
          --enable-prometheus-server=true \
          --testconfig=testing/dra-baseline/config.yaml \
          --report-dir=${ARTIFACTS}
          --nodes=100
          --v=2
        securityContext:
          privileged: true
        env:
        # CAPZ variables
        - name: TEST_K8S
          value: "true"
        - name: WINDOWS
          value: "false"
        - name: CLUSTER_TEMPLATE
          value: "templates/test/dev/cluster-template-custom-builds-machine-pool-load-dra.yaml"
        - name: AZURE_CONTROL_PLANE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: CONTROL_PLANE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: AZURE_NODE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: NODE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: TEST_WINDOWS
          value: "false"
        - name: MONITORING_MACHINE_COUNT # This is the number of dedicated nodes for prometheus server
          value: "1" # We use the same VM size as control plane nodes, see CONTROL_PLANE_MACHINE_TYPE
        - name: AZURE_LOCATION
          value: "canadacentral" # Use canadacentral for proximity to prow container
        # Don't install Azure disk CSI driver as it's installed using a HelmChartProxy
        - name: DEPLOY_AZURE_CSI_DRIVER
          value: "false"
        - name: "CONTROL_PLANE_MACHINE_COUNT"
          value: "5"
        - name: WINDOWS_WORKER_MACHINE_COUNT
          value: "0" # Don't create windows workers
        - name: WORKER_MACHINE_COUNT
          value: "100"
        # Based on pull-kubernetes-e2e-gce-100-performance CL2 config
        - name: CL2_ENABLE_DNS_PROGRAMMING
          value: "true"
        - name: CL2_SCHEDULER_THROUGHPUT_THRESHOLD
          value: "0"
        - name: CL2_ENABLE_API_AVAILABILITY_MEASUREMENT
          value: "true"
        - name: CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD
          value: "99.99"
        - name: CL2_REPEATS
          value: "10"
        # For DRA cl2 tests
        - name: CL2_MODE
          value: "Indexed"
        - name: CL2_NODES_PER_NAMESPACE
          value: "10"
        - name: CL2_JOB_RUNNING_TIME
          value: "3s"
        - name: CL2_LONG_JOB_RUNNING_TIME
          value: "45m"
        - name: PROMETHEUS_PVC_STORAGE_CLASS
          value: "default"
        - name: PROMETHEUS_APISERVER_SCRAPE_PORT
          value: "6443"
        - name: NODE_PRELOAD_IMAGES
          value: "gcr.io/k8s-staging-perf-tests/sleep:v0.0.3"
        resources:
          requests:
            cpu: "6"
            memory: "9Gi"
          limits:
            cpu: "6"
            memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-scalability-dra
      testgrid-tab-name: azure-dra-master-scalability-100
  - name: ci-kubernetes-e2e-azure-dra-with-workload-scalability
    tags:
      - "perfDashPrefix: azure-dra-100Nodes-with-workload"
      - "perfDashBuildsCount: 270"
      - "perfDashJobType: performance"
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 8h
    interval: 12h
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    extra_refs:
      - org: kubernetes-sigs
        repo: cluster-api-provider-azure
        base_ref: main
        path_alias: "sigs.k8s.io/cluster-api-provider-azure"
      - org: kubernetes-sigs
        repo: cloud-provider-azure
        base_ref: master
        path_alias: sigs.k8s.io/cloud-provider-azure
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
      - org: kubernetes
        repo: perf-tests
        base_ref: master
        path_alias: k8s.io/perf-tests
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250925-95b5a2c7a5-master
          command:
            - runner.sh
            - ./scripts/ci-entrypoint.sh
          args:
            - bash
            - -c
            - >-
              sleep 300 &&
              cd ${GOPATH}/src/k8s.io/perf-tests/ &&
              ./run-e2e.sh cluster-loader2
              --nodes=100 \
              --provider=aks \
              --enable-prometheus-server=true \
              --testconfig=testing/dra/config.yaml \
              --report-dir=${ARTIFACTS}
              --nodes=100
              --v=2
          securityContext:
            privileged: true
          env:
            # CAPZ variables
            - name: TEST_K8S
              value: "true"
            - name: WINDOWS
              value: "false"
            - name: CLUSTER_TEMPLATE
              value: "templates/test/dev/cluster-template-custom-builds-machine-pool-load-dra.yaml"
            - name: AZURE_CONTROL_PLANE_MACHINE_TYPE
              value: "Standard_D8s_v3"
            - name: CONTROL_PLANE_MACHINE_TYPE
              value: "Standard_D8s_v3"
            - name: AZURE_NODE_MACHINE_TYPE
              value: "Standard_D8s_v3"
            - name: NODE_MACHINE_TYPE
              value: "Standard_D8s_v3"
            - name: TEST_WINDOWS
              value: "false"
            - name: MONITORING_MACHINE_COUNT # This is the number of dedicated nodes for prometheus server
              value: "1" # We use the same VM size as control plane nodes, see CONTROL_PLANE_MACHINE_TYPE
            - name: AZURE_LOCATION
              value: "canadacentral" # Use canadacentral for proximity to prow container
            # Don't install Azure disk CSI driver as it's installed using a HelmChartProxy
            - name: DEPLOY_AZURE_CSI_DRIVER
              value: "false"
            - name: "CONTROL_PLANE_MACHINE_COUNT"
              value: "5"
            - name: WINDOWS_WORKER_MACHINE_COUNT
              value: "0" # Don't create windows workers
            - name: WORKER_MACHINE_COUNT
              value: "100"
            # From google cl2
            - name: CL2_ENABLE_DNS_PROGRAMMING
              value: "true"
            - name: CL2_SCHEDULER_THROUGHPUT_THRESHOLD
              value: "0"
            - name: CL2_ENABLE_API_AVAILABILITY_MEASUREMENT
              value: "true"
            - name: CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD
              value: "99.5"
            # For DRA cl2 tests
            - name: CL2_MODE
              value: "Indexed"
            - name: CL2_NODES_PER_NAMESPACE
              value: "10"
            - name: CL2_JOB_RUNNING_TIME
              value: "3s"
            - name: CL2_LONG_JOB_RUNNING_TIME
              value: "45m"
            - name: PROMETHEUS_PVC_STORAGE_CLASS
              value: "default"
            - name: PROMETHEUS_APISERVER_SCRAPE_PORT
              value: "6443"
            - name: PROMETHEUS_SCRAPE_KUBELETS
              value: "true"
            - name: NODE_PRELOAD_IMAGES
              value: "gcr.io/k8s-staging-perf-tests/sleep:v0.0.3"
          resources:
            requests:
              cpu: "6"
              memory: "9Gi"
            limits:
              cpu: "6"
              memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-scalability-dra
      testgrid-tab-name: azure-dra-with-workload-master-scalability-100

  - name: ci-kubernetes-e2e-gce-100-node-dra-with-workload
    cluster: k8s-infra-prow-build
    tags:
      - "perfDashPrefix: gce-dra-100Nodes-with-workload"
      - "perfDashBuildsCount: 270"
      - "perfDashJobType: performance"
    interval: 4h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-periodics: "true"
      preset-e2e-scalability-periodics-master: "true"
    annotations:
      testgrid-dashboards: sig-scalability-dra
      testgrid-tab-name: gce-dra-with-workload-master-scalability-100
    decorate: true
    decoration_config:
      timeout: 3h
    extra_refs:
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
      - org: kubernetes
        repo: perf-tests
        base_ref: master
        path_alias: k8s.io/perf-tests
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250925-95b5a2c7a5-master
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --check-leaked-resources
            - --cluster=
            - --extract=ci/latest
            - --gcp-node-size=e2-standard-4
            - --gcp-node-image=gci
            - --gcp-project-type=scalability-project
            - --gcp-nodes=100
            - --provider=gce
            - --env=KUBE_FEATURE_GATES=DynamicResourceAllocation=true
            - --runtime-config=api/all=true
            - --test=false
            - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
            - --test-cmd-args=cluster-loader2
            - --test-cmd-args=--nodes=100
            - --test-cmd-args=--provider=gce
            - --test-cmd-args=--enable-prometheus-server=true
            - --test-cmd-args=--prometheus-scrape-node-exporter
            - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
            - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
            - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
            - --test-cmd-args=--testconfig=testing/dra/config.yaml
            - --test-cmd-args=--report-dir=$(ARTIFACTS)
            - --test-cmd-name=ClusterLoaderV2
            - --use-logexporter
          resources:
            requests:
              cpu: 6
              memory: "16Gi"
            limits:
              cpu: 6
              memory: "16Gi"
          env:
            - name: CL2_MODE
              value: "Indexed"
            - name: CL2_NODES_PER_NAMESPACE
              value: "10"
            - name: CL2_JOB_RUNNING_TIME
              value: "3s"
            - name: CL2_LONG_JOB_RUNNING_TIME
              value: "45m"
            - name: PROMETHEUS_SCRAPE_KUBELETS
              value: "true"
            - name: NODE_PRELOAD_IMAGES
              value: "gcr.io/k8s-staging-perf-tests/sleep:v0.0.3"

  - name: ci-kubernetes-e2e-gce-100-node-dra-extended-resources-with-workload
    cluster: k8s-infra-prow-build
    tags:
      - "perfDashPrefix: gce-dra-extended-resources-100Nodes-with-workload"
      - "perfDashBuildsCount: 270"
      - "perfDashJobType: performance"
    interval: 4h
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-periodics: "true"
      preset-e2e-scalability-periodics-master: "true"
    annotations:
      testgrid-dashboards: sig-scalability-dra
      testgrid-tab-name: gce-dra-extended-resources-with-workload-master-scalability-100
    decorate: true
    decoration_config:
      timeout: 3h
    extra_refs:
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
      - org: alaypatel07
        repo: perf-tests
        base_ref: dra-extended-resources
        path_alias: k8s.io/perf-tests
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250925-95b5a2c7a5-master
          command:
            - runner.sh
            - /workspace/scenarios/kubernetes_e2e.py
          args:
            - --check-leaked-resources
            - --cluster=
            - --extract=ci/latest
            - --gcp-node-size=e2-standard-4
            - --gcp-node-image=gci
            - --gcp-project-type=scalability-project
            - --gcp-nodes=100
            - --provider=gce
            - --env=KUBE_FEATURE_GATES=DynamicResourceAllocation=true,DRAExtendedResource=true
            - --runtime-config=api/all=true
            - --test=false
            - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
            - --test-cmd-args=cluster-loader2
            - --test-cmd-args=--nodes=100
            - --test-cmd-args=--provider=gce
            - --test-cmd-args=--enable-prometheus-server=true
            - --test-cmd-args=--prometheus-scrape-node-exporter
            - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
            - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
            - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
            - --test-cmd-args=--testconfig=testing/dra-extended-resources/config.yaml
            - --test-cmd-args=--report-dir=$(ARTIFACTS)
            - --test-cmd-name=ClusterLoaderV2
            - --use-logexporter
          resources:
            requests:
              cpu: 6
              memory: "16Gi"
            limits:
              cpu: 6
              memory: "16Gi"
          env:
            - name: CL2_MODE
              value: "Indexed"
            - name: CL2_NODES_PER_NAMESPACE
              value: "10"
            - name: CL2_JOB_RUNNING_TIME
              value: "3s"
            - name: CL2_LONG_JOB_RUNNING_TIME
              value: "45m"
            - name: CL2_EXTENDED_RESOURCE_NAME
              value: "example.com/gpu"
            - name: PROMETHEUS_SCRAPE_KUBELETS
              value: "true"
            - name: NODE_PRELOAD_IMAGES
              value: "gcr.io/k8s-staging-perf-tests/sleep:v0.0.3"

  - name: ci-kubernetes-e2e-kops-gce-5000-node-dra-with-workload
    cluster: k8s-infra-prow-build
    tags:
      - "perfDashPrefix: kops-gce-dra-5000Nodes-with-workload"
      - "perfDashBuildsCount: 270"
      - "perfDashJobType: performance"
    cron: '0 10,22 * * *' # Run twice a day at 10:00 and 22:00 UTC
    labels:
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
    annotations:
      testgrid-dashboards: sig-scalability-dra
      testgrid-tab-name: kops-gce-dra-with-workload-master-scalability-5000
      testgrid-alert-email: kubernetes-sig-scale@googlegroups.com, kubernetes-scalability-tickets@google.com
      testgrid-num-failures-to-alert: '2'
      description: "Uses kops to run k8s.io/perf-tests/run-e2e.sh against a 5000-node cluster with DRA enabled"
    decorate: true
    decoration_config:
      timeout: 480m
    extra_refs:
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
      - org: kubernetes
        repo: perf-tests
        base_ref: master
        path_alias: k8s.io/perf-tests
      - org: kubernetes
        repo: kops
        base_ref: master
        path_alias: k8s.io/kops
        workdir: true
    spec:
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20250925-95b5a2c7a5-master
          command:
          - runner.sh
          args:
          - ./tests/e2e/scenarios/scalability/run-test.sh
          resources:
            requests:
              cpu: 6
              memory: "16Gi"
            limits:
              cpu: 6
              memory: "16Gi"
          env:
            - name: KUBE_SSH_KEY_PATH
              value: /etc/ssh-key-secret/ssh-private
            - name: KUBE_SSH_USER
              value: ubuntu
            - name: GOPATH
              value: /home/prow/go
            - name: ARTIFACTS
              value: $(ARTIFACTS)
            - name: CNI_PLUGIN
              value: gce
            - name: KUBE_NODE_COUNT
              value: "5000"
            - name: CL2_MODE
              value: "Indexed"
            - name: CL2_NODES_PER_NAMESPACE
              value: "2500"
            - name: CL2_JOB_RUNNING_TIME
              value: "3s"
            - name: CL2_LONG_JOB_RUNNING_TIME
              value: "240m"
            - name: NODE_MODE
              value: "master"
            - name: CONTROL_PLANE_COUNT
              value: "1"
            - name: CONTROL_PLANE_SIZE
              value: "c4-standard-96"
#              TODO: 100 node gce test run with 10 and 5, can increase if needed
#            - name: CL2_LOAD_TEST_THROUGHPUT
#              value: "50"
#            - name: CL2_STEADY_STATE_QPS
#              value: "25"
            - name: ENABLE_PROMETHEUS_SERVER
              value: "true"
            - name: PROMETHEUS_PVC_STORAGE_CLASS
              value: "ssd-csi"
            - name: PROMETHEUS_SCRAPE_KUBELETS
              value: "true"
            - name: CLOUD_PROVIDER
              value: "gce"
            - name: GCP_PROJECT
              value: "k8s-infra-e2e-boskos-scale-30"
            - name: NODE_PRELOAD_IMAGES
              value: "gcr.io/k8s-staging-perf-tests/sleep:v0.0.3"
             # TODO: need to PR this change to kops repo
            - name: KOPS_CL2_TEST_CONFIG
              value: testing/dra/config.yaml
