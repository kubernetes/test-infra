periodics:
- interval: 6h
  cluster: eks-prow-build-cluster
  name: ci-cloud-provider-aws-e2e
  decorate: true
  decoration_config:
    timeout: 80m
  annotations:
    testgrid-tab-name: ci-cloud-provider-aws-e2e
    testgrid-dashboards: amazon-ec2, amazon-ec2-provider, provider-aws-periodics, amazon-ec2-periodics
    description: Runs e2e against cloud-provider-aws master on AWS
  labels:
    preset-dind-enabled: "true"
    preset-aws-credential-aws-shared-testing: "true"
    preset-k8s-ssh: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-aws
    base_ref: master
    path_alias: k8s.io/cloud-provider-aws
    workdir: true
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: aws-shared-testing-role
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 4Gi
        requests:
          cpu: 2
          memory: 4Gi
      command:
      - runner.sh
      args:
      - make
      - test-e2e
      - KOPS_STATE_STORE=s3://cloud-provider-aws-shared-e2e
      securityContext:
        privileged: true
- interval: 6h
  cluster: eks-prow-build-cluster
  name: ci-cloud-provider-aws-e2e-with-kubernetes-master
  decorate: true
  decoration_config:
    timeout: 80m
  annotations:
    testgrid-tab-name: ci-cloud-provider-aws-e2e-with-kubernetes-master
    testgrid-dashboards: amazon-ec2, amazon-ec2-provider, provider-aws-periodics, amazon-ec2-periodics
    description: Runs e2e against cloud-provider-aws master on AWS using latest k8s.io/kubernetes libraries
  labels:
    preset-dind-enabled: "true"
    preset-aws-credential-aws-shared-testing: "true"
    preset-k8s-ssh: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-aws
    base_ref: master
    path_alias: k8s.io/cloud-provider-aws
    workdir: true
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: aws-shared-testing-role
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: 4Gi
        requests:
          cpu: 2
          memory: 4Gi
      command:
      - runner.sh
      args:
      - make
      - test-e2e-latest-k8s
      - KOPS_STATE_STORE=s3://cloud-provider-aws-shared-e2e
      securityContext:
        privileged: true
- interval: 6h
  cluster: eks-prow-build-cluster
  name: ci-cloud-provider-aws-e2e-kubetest2
  decorate: true
  decoration_config:
    timeout: 4h
  annotations:
    testgrid-alert-stale-results-hours: "24"
    testgrid-create-test-group: "true"
    testgrid-num-failures-to-alert: "10"
    testgrid-dashboards: amazon-ec2, amazon-ec2-provider, provider-aws-periodics, amazon-ec2-periodics
  labels:
    preset-dind-enabled: "true"
    preset-aws-credential-aws-shared-testing: "true"
    preset-k8s-ssh: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-aws
    base_ref: master
    path_alias: k8s.io/cloud-provider-aws
    workdir: true
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: aws-shared-testing-role
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 8
          memory: 10Gi
        requests:
          cpu: 8
          memory: 10Gi
      command:
      - runner.sh
      args:
        - bash
        - -c
        - |
          GOPROXY=direct go install sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2@latest

          VERSION=$(git describe --dirty --tags --match='v*')
          BUILD_IMAGE=ko.local:${VERSION}
          REGION=${REGION:-"us-east-1"}

          make switch-to-latest-k8s ko-build-local

          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_NAME=${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/provider-aws/cloud-controller-manager
          IMAGE_TAG=${VERSION}

          echo "Building and pushing test driver image to ${IMAGE_NAME}:${IMAGE_TAG}"
          aws ecr get-login-password --region "${REGION}" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com"
          docker tag "${BUILD_IMAGE}" "${IMAGE_NAME}:${IMAGE_TAG}"
          docker push "${IMAGE_NAME}:${IMAGE_TAG}"

          GOPROXY=direct go install sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2@latest

          kubetest2 ec2 \
           --build \
           --region us-east-1 \
           --target-build-arch linux/amd64 \
           --stage provider-aws-test-infra \
           --external-cloud-provider true \
           --up \
           --down \
           --test=ginkgo \
           -- \
           --use-built-binaries true \
           --parallel=30 \
           --skip-regex='\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]'
      env:
        - name: USE_DOCKERIZED_BUILD
          value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
- interval: 6h
  cluster: eks-prow-build-cluster
  name: ci-cloud-provider-aws-e2e-kubetest2-quick
  decorate: true
  decoration_config:
    timeout: 4h
  annotations:
    testgrid-alert-stale-results-hours: "24"
    testgrid-create-test-group: "true"
    testgrid-num-failures-to-alert: "10"
    testgrid-dashboards: amazon-ec2, amazon-ec2-provider, provider-aws-periodics, amazon-ec2-periodics
  labels:
    preset-dind-enabled: "true"
    preset-aws-credential-aws-shared-testing: "true"
    preset-k8s-ssh: "true"
  extra_refs:
  - org: kubernetes
    repo: cloud-provider-aws
    base_ref: master
    path_alias: k8s.io/cloud-provider-aws
    workdir: true
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    serviceAccountName: aws-shared-testing-role
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 8
          memory: 10Gi
        requests:
          cpu: 8
          memory: 10Gi
      command:
      - runner.sh
      args:
        - bash
        - -c
        - |
          GOPROXY=direct go install sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2@latest

          VERSION=$(git describe --dirty --tags --match='v*')
          BUILD_IMAGE=ko.local:${VERSION}
          REGION=${REGION:-"us-east-1"}

          make switch-to-latest-k8s ko-build-local

          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          IMAGE_NAME=${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/provider-aws/cloud-controller-manager
          IMAGE_TAG=${VERSION}

          echo "Building and pushing test driver image to ${IMAGE_NAME}:${IMAGE_TAG}"
          aws ecr get-login-password --region "${REGION}" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com"
          docker tag "${BUILD_IMAGE}" "${IMAGE_NAME}:${IMAGE_TAG}"
          docker push "${IMAGE_NAME}:${IMAGE_TAG}"

          GOPROXY=direct go install sigs.k8s.io/provider-aws-test-infra/kubetest2-ec2@latest
          VERSION=$(curl -Ls https://dl.k8s.io/ci/fast/latest-fast.txt)
          kubetest2 ec2 \
           --stage https://dl.k8s.io/ci/fast/ \
           --version $VERSION \
           --up \
           --down \
           --test=ginkgo \
           -- \
           --parallel=30 \
           --test-package-url=https://dl.k8s.io/ \
           --test-package-dir=ci/fast \
           --test-package-marker=latest-fast.txt \
           --focus-regex='Pods should be submitted and removed'
      env:
        - name: USE_DOCKERIZED_BUILD
          value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
