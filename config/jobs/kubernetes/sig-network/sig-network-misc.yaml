presubmits:
  # Note, these jobs need to generally stage results to a GCE bucket.
  # We currently have three, ingress, network-policies , and ipvs...
  kubernetes/kubernetes:

  - name: pull-kubernetes-e2e-gci-gce-ingress
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    run_if_changed: '^(test/e2e/network/|pkg/apis/networking)'
    optional: true
    decorate: true
    decoration_config:
      timeout: 360m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: "k8s.io/release"
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --env=ALLOW_PRIVILEGED=true
        - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v2.0.0
        - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.2.1
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
        - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20230919
        - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
        - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20230919
        - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
        - --env=GCE_ALPHA_FEATURES=NetworkEndpointGroup
        - --env=KUBE_GCE_ENABLE_IP_ALIASES=true
        - --gcp-master-image=ubuntu
        - --gcp-node-image=ubuntu
        - --gcp-nodes=4
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --test_args=--ginkgo.focus=\[Feature:NEG\]|Loadbalancing|LoadBalancers|Ingress --ginkgo.skip=\[Feature:kubemci\]|\[Disruptive\]|\[Feature:IngressScale\]|\[Feature:NetworkPolicy\]
        - --timeout=320m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          requests:
            cpu: 4
            memory: "6Gi"
          limits:
            cpu: 4
            memory: "6Gi"
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-network-gce
      testgrid-tab-name: presubmit-network-ingress, google-gce
      testgrid-num-failures-to-alert: '6'
      testgrid-alert-stale-results-hours: '24'
      testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
      description: Uses kubetest to run e2e Conformance, SIG-Network or Network Ingress tests against a cluster (ubuntu based and uses containerd) created with cluster/kube-up.sh

  - name: pull-kubernetes-e2e-gce-network-policies
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    run_if_changed: '^(test/e2e/network/|pkg/apis/networking)'
    optional: true
    decorate: true
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: "k8s.io/release"
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --env=ALLOW_PRIVILEGED=true
        - --env=NETWORK_POLICY_PROVIDER=kube-network-policies
        - --ginkgo-parallel=30
        - --gcp-nodes=4
        - --gcp-zone=us-west1-b
        - --provider=gce
        # Skipping snat tests probably GCE related? https://github.com/kubernetes/test-infra/issues/20321
        # Skipping Cloud Provider specific tests: LoadBalancer, ESIPP (Source IP Preservation)
        - --test_args=--ginkgo.focus=\[sig-network\]|\[Conformance\]|\[Feature:NetworkPolicy\] --ginkgo.skip=\[Feature:(Networking-IPv6|SCTPConnectivity)\]|DualStack|Disruptive|Serial|Flaky|LoadBalancer|Alpha|Beta
        - --timeout=100m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          requests:
            cpu: 4
            memory: "6Gi"
          limits:
            cpu: 4
            memory: "6Gi"
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-network-gce
      testgrid-tab-name: presubmit-network-policies, google-gce
      testgrid-num-failures-to-alert: '6'
      testgrid-alert-stale-results-hours: '24'
      testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
      description: Uses kubetest to run e2e Conformance, SIG-Network or Network Policy tests against a cluster (ubuntu based and uses containerd) created with cluster/kube-up.sh

  - name: pull-kubernetes-e2e-gci-gce-ipvs
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 120m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: "k8s.io/release"
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --env=ALLOW_PRIVILEGED=true
        - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v2.0.0
        - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.2.1
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
        - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20230919
        - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
        - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20230919
        - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
        - --env=KUBE_PROXY_MODE=ipvs
        - --gcp-master-image=ubuntu
        - --gcp-node-image=ubuntu
        - --gcp-nodes=4
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --ginkgo-parallel=30
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[sig-storage\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 2
            memory: "6Gi"
          requests:
            cpu: 2
            memory: "6Gi"
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-network-gce
      testgrid-tab-name: presubmit-network-ipvs, google-gce
      testgrid-num-failures-to-alert: '6'
      testgrid-alert-stale-results-hours: '24'
      testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
      description: Uses kubetest to run e2e Conformance, SIG-Network tests against a cluster using IPVS (ubuntu based and uses containerd) created with cluster/kube-up.sh

  - name: pull-kubernetes-e2e-gci-gce-nftables
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    # skip until COS support all the necessary kernel modules
    # run_if_changed: '^(test/e2e/network/|pkg/apis/networking|pkg/proxy/nftables/)'
    optional: true
    decorate: true
    decoration_config:
      timeout: 120m
      grace_period: 15m
    path_alias: k8s.io/kubernetes
    extra_refs:
    - org: kubernetes
      repo: release
      base_ref: master
      path_alias: "k8s.io/release"
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-dind-enabled: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --build=quick
        - --env=ALLOW_PRIVILEGED=true
        - --env=KUBE_PROXY_MODE=nftables
        - --env=KUBE_GCE_NODE_IMAGE=cos-113-18244-236-88
        - --gcp-nodes=4
        - --gcp-zone=us-west1-b
        - --provider=gce
        - --gcp-master-image=gci
        - --gcp-node-image=gci
        - --ginkgo-parallel=30
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[sig-storage\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 2
            memory: "6Gi"
          requests:
            cpu: 2
            memory: "6Gi"
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-network-gce
      testgrid-tab-name: presubmit-network-nftables, google-gce
      testgrid-num-failures-to-alert: '6'
      testgrid-alert-stale-results-hours: '24'
      testgrid-alert-email: antonio.ojea.garcia@gmail.com, danwinship@redhat.com
      description: Uses kubetest to run e2e Conformance, SIG-Network tests against a cluster using nftables created with cluster/kube-up.sh

  - name: pull-kubernetes-e2e-gci-gce-kube-dns-nodecache
    cluster: k8s-infra-prow-build
    branches:
    # TODO(releng): Remove once repo default branch has been renamed
    - master
    - main
    always_run: false
    optional: true
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    decorate: true
    decoration_config:
      timeout: 170m
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        args:
        - --check-leaked-resources
        - --cluster=
        - --env=CLUSTER_DNS_CORE_DNS=false
        - --env=KUBE_ENABLE_NODELOCAL_DNS=true
        - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
        - --extract=ci/latest
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:.+\]|\[sig-storage\]|LoadBalancer --minStartupPods=8
        - --timeout=150m
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        resources:
          limits:
            cpu: 2
            memory: "6Gi"
          requests:
            cpu: 2
            memory: "6Gi"
    annotations:
      testgrid-dashboards: sig-network-gce
      testgrid-tab-name: presubmit-network-kubedns, google-gce
      testgrid-num-failures-to-alert: '6'
      testgrid-alert-stale-results-hours: '24'
      testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
      description: This presubmit is (as of December 2024) identical to the periodic test ci-kubernetes-e2e-gci-gce-kube-dns-nodecache.

  kubernetes/dns:
  - name: pull-kubernetes-dns-test
    cluster: eks-prow-build-cluster
    branches:
    - master
    always_run: true
    decorate: true
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
    path_alias: k8s.io/dns
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - "runner.sh"
        - ./presubmits.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
periodics:
- interval: 6h
  name: ci-kubernetes-e2e-gce-alpha-api
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 80m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      # List GCE Alpha features we want to enable, separated by commas.
      - --env=GCE_ALPHA_FEATURES=NetworkTiers
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=4
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:GCEAlphaFeature\] --minStartupPods=8
      - --timeout=60m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: google-gce, sig-network-gce
    testgrid-tab-name: gce-alpha-api
    testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
- interval: 6h
  name: ci-kubernetes-e2e-gce-coredns-performance
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 60m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=gce-coredns-perf
      - --env=CLUSTER_DNS_CORE_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=3
      - --gcp-zone=us-east1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:PerformanceDNS\]
      - --timeout=60m
      - --use-logexporter
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: gce-coredns-performance
- interval: 6h
  name: ci-kubernetes-e2e-gce-kubedns-performance
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 80m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=gce-kubedns-perf
      - --env=CLUSTER_DNS_CORE_DNS=false
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=3
      - --gcp-zone=us-east1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:PerformanceDNS\]
      - --timeout=60m
      - --use-logexporter
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: gce-kubedns-performance
- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-coredns
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --env=CLUSTER_DNS_CORE_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[sig-storage\]|\[Feature:.+\]|\[NodeFeature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"

- interval: 6h
  name: ci-kubernetes-e2e-gce-coredns-performance-nodecache
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 80m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=gce-coredns-perf-cache
      - --env=CLUSTER_DNS_CORE_DNS=true
      - --env=KUBE_ENABLE_NODELOCAL_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=3
      - --gcp-zone=us-east1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:PerformanceDNS\]
      - --timeout=60m
      - --use-logexporter
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: gce-coredns-performance-nodecache
- interval: 6h
  name: ci-kubernetes-e2e-gce-kubedns-performance-nodecache
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 80m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=gce-kubedns-perf-cache
      - --env=CLUSTER_DNS_CORE_DNS=false
      - --env=KUBE_ENABLE_NODELOCAL_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=3
      - --gcp-zone=us-east1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:PerformanceDNS\]
      - --timeout=60m
      - --use-logexporter
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: gce-kubedns-performance-nodecache
- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-coredns-nodecache
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --env=CLUSTER_DNS_CORE_DNS=true
      - --env=KUBE_ENABLE_NODELOCAL_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[sig-storage\]|\[Feature:.+\]|\[NodeFeature:.+\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"

- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-ingress
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 340m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=GCE_ALPHA_FEATURES=NetworkEndpointGroup
      - --env=KUBE_GCE_ENABLE_IP_ALIASES=true
      - --extract=ci/fast/latest-fast
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:NEG\]|Loadbalancing|LoadBalancers|Ingress --ginkgo.skip=\[Feature:kubemci\]|\[Disruptive\]|\[Feature:IngressScale\]|\[Feature:NetworkPolicy\]
      - --timeout=320m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: "3Gi"
        requests:
          cpu: 1
          memory: "3Gi"
  annotations:
    testgrid-dashboards: sig-release-master-blocking, google-gce, sig-network-gce
    testgrid-tab-name: gci-gce-ingress
    testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
    description: Uses kubetest to run e2e tests (+Feature:Ingress|NEG) against a cluster created with cluster/kube-up.sh
    testgrid-alert-stale-results-hours: '24'
- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-ingress-canary
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 340m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=GCE_ALPHA_FEATURES=NetworkEndpointGroup
      - --env=KUBE_GCE_ENABLE_IP_ALIASES=true
      - --extract=ci/fast/latest-fast
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:Ingress\]|\[Feature:NEG\]
      - --timeout=320m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 1
          memory: "3Gi"
        requests:
          cpu: 1
          memory: "3Gi"
  annotations:
    testgrid-dashboards: sig-testing-canaries
    testgrid-tab-name: gci-gce-ingress
    description: Duplicate of ci-kubernetes-e2e-gci-gce-ingress pinned to a k8s-infra project to verify quota
    testgrid-alert-stale-results-hours: '24'
- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-ingress-manual-network
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 200m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=CREATE_CUSTOM_NETWORK=true
      - --extract=ci/latest
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:Ingress\] --minStartupPods=8
      - --timeout=180m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: gci-gce-ingress-manual-network
    testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
    testgrid-alert-stale-results-hours: '24'
- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-ip-alias
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 70m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=KUBE_GCE_ENABLE_IP_ALIASES=true
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-nodes=4
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[sig-storage\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=50m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: ip-alias
    testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-ipvs
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=KUBE_PROXY_MODE=ipvs
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      # skip ESIPP should work from pods #97081
      - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[sig-storage\]|ESIPP|LoadBalancers --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-stale-results-hours: '24'

- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-nftables
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=KUBE_PROXY_MODE=nftables
      - --env=KUBE_GCE_NODE_IMAGE=cos-113-18244-236-88
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      # skip ESIPP should work from pods #97081
      - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[sig-storage\]|ESIPP|LoadBalancers --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: periodic-network-nftables, google-gce
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-stale-results-hours: '24'
    testgrid-alert-email: antonio.ojea.garcia@gmail.com, danwinship@redhat.com
    description: Uses kubetest to run e2e Conformance, SIG-Network tests against a cluster using nftables created with cluster/kube-up.sh

- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-kube-dns
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --env=CLUSTER_DNS_CORE_DNS=false
      - --extract=ci/latest
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[sig-storage\] --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"

- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-kube-dns-nodecache
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --cluster=
      - --env=CLUSTER_DNS_CORE_DNS=false
      - --env=KUBE_ENABLE_NODELOCAL_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-zone=us-west1-b
      - --ginkgo-parallel=30
      - --provider=gce
      - --test_args=--ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:.+\]|\[sig-storage\]|LoadBalancer --minStartupPods=8
      - --timeout=150m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"

- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-serial-kube-dns
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 520m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=NODE_LOCAL_SSDS_EXT=1,scsi,fs
      - --env=NODE_SIZE=n2-standard-2
      - --env=CLUSTER_DNS_CORE_DNS=false,
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[sig-storage\]|\[Feature:.+\]|\[sig-cloud-provider-gcp\] --minStartupPods=8
      - --timeout=500m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"

- interval: 6h
  name: ci-kubernetes-e2e-gci-gce-serial-kube-dns-nodecache
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 520m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=NODE_LOCAL_SSDS_EXT=1,scsi,fs
      - --env=NODE_SIZE=n2-standard-2
      - --env=CLUSTER_DNS_CORE_DNS=false,
      - --env=KUBE_ENABLE_NODELOCAL_DNS=true
      - --env=KUBE_ENABLE_NODE_PROBLEM_DETECTOR=none
      - --extract=ci/latest
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Flaky\]|\[sig-storage\]|\[Feature:.+\]|LoadBalancer|\[sig-cloud-provider-gcp\]  --minStartupPods=8
      - --timeout=500m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"

- interval: 6h
  name: ci-kubernetes-e2e-gce-network-policies
  cluster: k8s-infra-prow-build
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 170m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --check-leaked-resources
      - --env=ALLOW_PRIVILEGED=true
      - --env=NETWORK_POLICY_PROVIDER=kube-network-policies
      - --ginkgo-parallel=30
      - --gcp-nodes=4
      - --gcp-zone=us-west1-b
      - --provider=gce
      # Skipping snat tests probably GCE related? https://github.com/kubernetes/test-infra/issues/20321
      # Skipping Cloud Provider specific tests: LoadBalancer, ESIPP (Source IP Preservation)
      - --test_args=--ginkgo.focus=\[sig-network\]|\[Conformance\]|\[Feature:NetworkPolicy\] --ginkgo.skip=\[Feature:(Networking-IPv6|Example|Federation|PerformanceDNS|KubeProxyDaemonSetMigration|ServiceCIDRs|SCTPConnectivity)\]|DualStack|Disruptive|Serial|SNAT|LoadBalancer|Alpha|Beta
      - --extract=ci/latest
      - --timeout=100m
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
      resources:
        limits:
          cpu: 2
          memory: "6Gi"
        requests:
          cpu: 2
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-network-gce
    testgrid-tab-name: network-policies, google-gce
    testgrid-num-failures-to-alert: '6'
    testgrid-alert-stale-results-hours: '24'
    testgrid-alert-email: kubernetes-sig-network-test-failures@googlegroups.com
    description: Uses kubetest to run e2e Conformance, SIG-Network or Network Policy tests against a cluster (ubuntu based and uses containerd) created with cluster/kube-up.sh
