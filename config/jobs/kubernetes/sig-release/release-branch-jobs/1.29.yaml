periodics:
- annotations:
    testgrid-dashboards: conformance-all, conformance-gce, sig-release-job-config-errors
    testgrid-tab-name: Conformance - GCE - 1.29
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 3h40m0s
  interval: 3h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  name: ci-kubernetes-gce-conformance-latest-1-29
  spec:
    containers:
    - args:
      - --extract=ci/latest-1.29
      - --gcp-master-image=gci
      - --gcp-node-image=gci
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Conformance\]
      - --timeout=200m
      command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "1"
          memory: 3Gi
        requests:
          cpu: "1"
          memory: 3Gi
- annotations:
    fork-per-release-cron: 0 14-23/24 * * *
    testgrid-alert-email: gke-kubernetes-accelerators-bugs@google.com
    testgrid-alert-stale-results-hours: "24"
    testgrid-dashboards: sig-release-1.29-blocking, google-gce
    testgrid-num-failures-to-alert: "6"
    testgrid-tab-name: gce-device-plugin-gpu-1.29
  cluster: k8s-infra-prow-build
  cron: 0 8-23/24 * * *
  decorate: true
  decoration_config:
    timeout: 5h0m0s
  labels:
    preset-ci-gce-device-plugin-gpu: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  name: ci-kubernetes-e2e-gce-device-plugin-gpu-1-29
  spec:
    containers:
    - args:
      - --check-leaked-resources
      - --extract=ci/latest-1.29
      - --env=KUBE_NODE_OS_DISTRIBUTION=gci
      - --env=KUBE_GCE_NODE_IMAGE=cos-109-17800-147-22
      - --env=KUBE_GCE_NODE_PROJECT=cos-cloud
      - --gcp-node-image=gci
      - --gcp-project-type=gpu-project
      - --gcp-zone=us-west1-b
      - --provider=gce
      - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
      - --timeout=180m
      command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "1"
          memory: 3Gi
        requests:
          cpu: "1"
          memory: 3Gi
- annotations:
    fork-per-release-periodic-interval: 24h
    testgrid-alert-email: bentheelder@google.com,siarkowicz@google.com,patrick.ohly@intel.com
    testgrid-dashboards: sig-instrumentation-tests, sig-testing-kind, sig-release-job-config-errors
    testgrid-num-columns-recent: "6"
    testgrid-tab-name: kind-json-logging-1.29
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 2h30m0s
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  interval: 24h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  name: ci-kubernetes-kind-e2e-json-logging-1-29
  spec:
    containers:
    - command:
      - wrapper.sh
      - bash
      - -c
      - |
        curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && curl -sSL https://github.com/pohly/kind/raw/e2e-feature-gates/hack/ci/e2e-k8s.sh >$(which e2e-k8s.sh) && chmod u+x $(which e2e-k8s.sh) && e2e-k8s.sh
      env:
      - name: CLUSTER_LOG_FORMAT
        value: json
      - name: KIND_CLUSTER_LOG_LEVEL
        value: "6"
      - name: FEATURE_GATES
        value: '{"DynamicResourceAllocation":true,"ContextualLogging":true}'
      - name: RUNTIME_CONFIG
        value: '{"resource.k8s.io/v1alpha2":"true"}'
      - name: GINKGO_TOLERATE_FLAKES
        value: "n"
      - name: FOCUS
        value: \[Conformance\]|\[Driver:.csi-hostpath\]|DynamicResourceAllocation
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
      - name: PARALLEL
        value: "true"
      image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "7"
          memory: 9Gi
        requests:
          cpu: "7"
          memory: 9Gi
      securityContext:
        privileged: true
- annotations:
    testgrid-alert-email: release-managers+alerts@kubernetes.io, release-team@kubernetes.io
    testgrid-dashboards: sig-release-1.29-blocking, sig-release-releng-blocking
    testgrid-tab-name: build-1.29
  cluster: k8s-infra-prow-build
  decorate: true
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    repo: kubernetes
  interval: 1h
  labels:
    preset-dind-enabled: "true"
    preset-service-account: "true"
  name: ci-kubernetes-build-1-29
  rerun_auth_config:
    github_team_slugs:
    - org: kubernetes
      slug: release-managers
  spec:
    containers:
    - command:
      - wrapper.sh
      - /krel
      - ci-build
      - --configure-docker
      - --allow-dup
      - --bucket=k8s-release-dev
      - --registry=gcr.io/k8s-staging-ci-images
      - --extra-version-markers=k8s-stable3
      image: gcr.io/k8s-staging-releng/k8s-ci-builder:latest-default
      imagePullPolicy: Always
      name: ""
      resources:
        limits:
          cpu: "7"
          memory: 34Gi
        requests:
          cpu: "7"
          memory: 34Gi
      securityContext:
        privileged: true
- annotations:
    fork-per-release-cron: 0 21 * * *
    testgrid-alert-email: kubernetes-sig-scale@googlegroups.com, kubernetes-scalability-tickets@google.com
    testgrid-dashboards: sig-scalability-kubemark, sig-release-job-config-errors
    testgrid-num-failures-to-alert: "2"
    testgrid-tab-name: kubemark-1.29-500
  cluster: k8s-infra-prow-build
  cron: 0 17 * * *
  decorate: true
  decoration_config:
    timeout: 2h0m0s
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/perf-tests
    repo: perf-tests
  labels:
    preset-dind-enabled: "true"
    preset-e2e-kubemark-common: "true"
    preset-e2e-scalability-periodics: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  name: ci-kubernetes-kubemark-500-gce-1-29
  spec:
    containers:
    - args:
      - --cluster=kubemark-500
      - --extract=ci/latest-1.29
      - --gcp-master-size=n2-standard-4
      - --gcp-node-image=gci
      - --gcp-node-size=e2-standard-8
      - --gcp-nodes=8
      - --gcp-project-type=scalability-project
      - --gcp-zone=us-east1-b
      - --kubemark
      - --kubemark-nodes=500
      - --kubemark-master-size=n2-standard-16
      - --metadata-sources=cl2-metadata.json
      - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=160 --max-mutating-requests-inflight=0 --profiling --contention-profiling
      - --provider=gce
      - --test=false
      - --test_args=--ginkgo.focus=xxxx
      - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
      - --test-cmd-args=cluster-loader2
      - --test-cmd-args=--nodes=500
      - --test-cmd-args=--provider=kubemark
      - --test-cmd-args=--report-dir=$(ARTIFACTS)
      - --test-cmd-args=--testconfig=testing/load/config.yaml
      - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
      - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
      - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
      - --test-cmd-args=--testoverrides=./testing/overrides/kubemark_500_nodes.yaml
      - --test-cmd-name=ClusterLoaderV2
      - --timeout=100m
      - --use-logexporter
      - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
      command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "2"
          memory: 8Gi
        requests:
          cpu: "2"
          memory: 8Gi
      securityContext:
        privileged: true
  tags:
  - 'perfDashPrefix: kubemark-500Nodes-1.29'
  - 'perfDashJobType: performance'
- annotations:
    fork-per-release-cron: 0 8-20/24 * * *
    testgrid-alert-email: kubernetes-sig-scale@googlegroups.com, kubernetes-scalability-tickets@google.com
    testgrid-dashboards: sig-release-1.29-blocking, sig-scalability-gce
    testgrid-num-failures-to-alert: "2"
    testgrid-tab-name: gce-cos-1.29-scalability-100
  cluster: k8s-infra-prow-build
  cron: 0 8-20/12 * * *
  decorate: true
  decoration_config:
    timeout: 2h20m0s
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/perf-tests
    repo: perf-tests
  labels:
    preset-e2e-scalability-common: "true"
    preset-e2e-scalability-periodics: "true"
    preset-k8s-ssh: "true"
    preset-service-account: "true"
  name: ci-kubernetes-e2e-gci-gce-scalability-1-29
  spec:
    containers:
    - args:
      - --check-leaked-resources
      - --cluster=e2e-big
      - --env=APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
      - --env=HEAPSTER_MACHINE_TYPE=e2-standard-8
      - --extract=ci/latest-1.29
      - --gcp-node-image=gci
      - --gcp-nodes=100
      - --gcp-project-type=scalability-project
      - --gcp-zone=us-east1-b
      - --provider=gce
      - --metadata-sources=cl2-metadata.json
      - --env=CL2_ENABLE_DNS_PROGRAMMING=true
      - --env=CL2_SCHEDULER_THROUGHPUT_THRESHOLD=0
      - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
      - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
      - --env=KUBEPROXY_TEST_ARGS=--profiling --metrics-bind-address=0.0.0.0 --feature-gates=MinimizeIPTablesRestore=true
      - --test=false
      - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
      - --test-cmd-args=cluster-loader2
      - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
      - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
      - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
      - --test-cmd-args=--nodes=100
      - --test-cmd-args=--prometheus-scrape-kubelets=true
      - --test-cmd-args=--prometheus-scrape-node-exporter
      - --test-cmd-args=--provider=gce
      - --test-cmd-args=--report-dir=$(ARTIFACTS)
      - --test-cmd-args=--testconfig=testing/load/config.yaml
      - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
      - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
      - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
      - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
      - --test-cmd-args=--testoverrides=./testing/overrides/load_throughput.yaml
      - --test-cmd-name=ClusterLoaderV2
      - --timeout=120m
      - --use-logexporter
      - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
      command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "2"
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
  tags:
  - 'perfDashPrefix: gce-100Nodes-1.29'
  - 'perfDashJobType: performance'
  - 'perfDashBuildsCount: 500'
- annotations:
    fork-per-release-periodic-interval: 24h
    testgrid-alert-email: release-team@kubernetes.io
    testgrid-dashboards: sig-release-1.29-blocking
    testgrid-tab-name: integration-1.29
  cluster: eks-prow-build-cluster
  decorate: true
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  interval: 24h
  labels:
    preset-dind-enabled: "true"
    preset-service-account: "true"
  name: ci-kubernetes-integration-1-29
  spec:
    containers:
    - args:
      - ./hack/jenkins/test-dockerized.sh
      command:
      - runner.sh
      env:
      - name: SHORT
        value: --short=false
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "6"
          memory: 20Gi
        requests:
          cpu: "6"
          memory: 20Gi
      securityContext:
        privileged: true
- annotations:
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com
    testgrid-alert-stale-results-hours: "24"
    testgrid-create-test-group: "true"
    testgrid-dashboards: sig-release-1.29-blocking
    testgrid-days-of-results: "1"
    testgrid-num-failures-to-alert: "3"
  cluster: k8s-infra-prow-build
  decorate: true
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  interval: 1h
  name: ci-kubernetes-unit-1-29
  spec:
    containers:
    - command:
      - make
      - test
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "4"
          memory: 36Gi
        requests:
          cpu: "4"
          memory: 36Gi
      securityContext:
        allowPrivilegeEscalation: false
    securityContext:
      runAsGroup: 2010
      runAsUser: 2001
- annotations:
    fork-per-release-periodic-interval: 24h
    testgrid-alert-email: kubernetes-sig-testing-alerts@googlegroups.com, release-managers+alerts@kubernetes.io
    testgrid-dashboards: sig-release-1.29-blocking
    testgrid-tab-name: verify-1.29
  cluster: eks-prow-build-cluster
  decorate: true
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  interval: 24h
  labels:
    preset-dind-enabled: "true"
    preset-service-account: "true"
  name: ci-kubernetes-verify-1-29
  spec:
    containers:
    - args:
      - ./hack/jenkins/verify-dockerized.sh
      command:
      - runner.sh
      env:
      - name: EXCLUDE_READONLY_PACKAGE
        value: "y"
      - name: KUBE_VERIFY_GIT_BRANCH
        value: release-1.29
      - name: REPO_DIR
        value: /workspace/k8s.io/kubernetes
      - name: TYPECHECK_SERIAL
        value: "true"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
      imagePullPolicy: Always
      name: ""
      resources:
        limits:
          cpu: "6"
          memory: 24Gi
        requests:
          cpu: "6"
          memory: 24Gi
      securityContext:
        privileged: true
- annotations:
    fork-per-release-periodic-interval: 24h
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-dashboards: sig-release-1.29-blocking, sig-testing-kind
    testgrid-num-columns-recent: "6"
    testgrid-tab-name: kind-1.29-parallel
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 1h0m0s
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  interval: 24h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  name: ci-kubernetes-kind-e2e-parallel-1-29
  spec:
    containers:
    - command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: FOCUS
        value: .
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
      - name: PARALLEL
        value: "true"
      image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "7"
          memory: 9Gi
        requests:
          cpu: "7"
          memory: 9Gi
      securityContext:
        privileged: true
- annotations:
    fork-per-release-periodic-interval: 24h
    testgrid-alert-email: bentheelder@google.com,antonio.ojea.garcia@gmail.com,release-team@kubernetes.io
    testgrid-dashboards: sig-release-1.29-blocking, sig-testing-kind
    testgrid-num-columns-recent: "6"
    testgrid-tab-name: kind-ipv6-1.29-parallel
  cluster: k8s-infra-prow-build
  decorate: true
  decoration_config:
    timeout: 1h0m0s
  extra_refs:
  - base_ref: release-1.29
    org: kubernetes
    path_alias: k8s.io/kubernetes
    repo: kubernetes
  interval: 24h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
  name: ci-kubernetes-kind-ipv6-e2e-parallel-1-29
  spec:
    containers:
    - command:
      - wrapper.sh
      - bash
      - -c
      - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
      env:
      - name: DOCKER_IN_DOCKER_IPV6_ENABLED
        value: "true"
      - name: IP_FAMILY
        value: ipv6
      - name: FOCUS
        value: .
      - name: SKIP
        value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Network.should.set.TCP.CLOSE_WAIT.timeout|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|should.provide.basic.identity
      - name: PARALLEL
        value: "true"
      image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
      name: ""
      resources:
        limits:
          cpu: "7"
          memory: 9Gi
        requests:
          cpu: "7"
          memory: 9Gi
      securityContext:
        privileged: true
postsubmits: {}
presubmits:
  kubernetes/kubernetes:
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-cos
    decorate: true
    decoration_config:
      timeout: 1h45m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-kubernetes-e2e-gce-cos
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-cos-canary
    decorate: true
    decoration_config:
      timeout: 1h45m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-kubernetes-e2e-gce-cos-canary
    path_alias: k8s.io/kubernetes
    skip_report: true
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        env:
        - name: BOOTSTRAP_FETCH_TEST_INFRA
          value: "true"
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce
    decorate: true
    decoration_config:
      timeout: 1h45m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-kubernetes-e2e-gce
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v1.7.5
        - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.1.9
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
        - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20220712a
        - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
        - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20220712a
        - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
        - --gcp-master-image=ubuntu
        - --gcp-node-image=ubuntu
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --env=ENABLE_CACHE_MUTATION_DETECTOR=true
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-canary
    decorate: true
    decoration_config:
      timeout: 1h50m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kops
      repo: kops
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
    name: pull-kubernetes-e2e-gce-canary
    optional: true
    path_alias: k8s.io/kubernetes
    skip_report: true
    spec:
      containers:
      - args:
        - bash
        - -c
        - |
          ARGS="--set=spec.containerd.runc.version=1.1.9 --set=spec.packages=nfs-common --set=spec.containerd.version=1.7.5"
          make -C $GOPATH/src/k8s.io/kops test-e2e-install
          kubetest2 kops -v=6 --cloud-provider=gce --up --down --build \
            --build-kubernetes=true --target-build-arch=linux/amd64 \
            --admin-access=0.0.0.0/0 \
            --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt \
            --create-args "$ARGS --networking=kubenet --set=spec.nodeProblemDetector.enabled=true" \
            --test=kops \
            -- \
            --ginkgo-args="--debug" \
            --skip-regex="\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
            --timeout=80m \
            --use-built-binaries=true \
            --parallel=30
        command:
        - runner.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
      serviceAccountName: k8s-kops-test
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-serial
    decorate: true
    decoration_config:
      timeout: 8h40m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-kubernetes-e2e-gce-serial
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --env=KUBE_UBUNTU_INSTALL_CONTAINERD_VERSION=v1.7.5
        - --env=KUBE_UBUNTU_INSTALL_RUNC_VERSION=v1.1.9
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --env=CONTAINER_RUNTIME_TEST_HANDLER=true
        - --env=KUBE_MASTER_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_MASTER_IMAGE=ubuntu-2204-jammy-v20220712a
        - --env=KUBE_GCE_MASTER_PROJECT=ubuntu-os-cloud
        - --env=KUBE_NODE_OS_DISTRIBUTION=ubuntu
        - --env=KUBE_GCE_NODE_IMAGE=ubuntu-2204-jammy-v20220712a
        - --env=KUBE_GCE_NODE_PROJECT=ubuntu-os-cloud
        - --gcp-master-image=ubuntu
        - --gcp-node-image=ubuntu
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=1
        - --provider=gce
        - --test_args=--ginkgo.focus=\[Serial\]|\[Disruptive\] --ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=500m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-serial-canary
    decorate: true
    decoration_config:
      timeout: 8h50m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kops
      repo: kops
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-storage-e2e-service-account: "true"
    name: pull-kubernetes-e2e-gce-serial-canary
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - bash
        - -c
        - |
          ARGS="--set=spec.containerd.runc.version=1.1.9  --set=spec.packages=nfs-common --set=spec.containerd.version=1.7.5"
          make -C $GOPATH/src/k8s.io/kops test-e2e-install
          kubetest2 kops -v=6 --cloud-provider=gce --up --down --build \
            --build-kubernetes=true --target-build-arch=linux/amd64 \
            --admin-access=0.0.0.0/0 \
            --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt \
            --create-args "$ARGS --node-count=3 --networking=kubenet --set=spec.nodeProblemDetector.enabled=true" \
            --test=kops \
            -- \
            --test-args="-test.timeout=800m --num-nodes=3 --master-os-distro=ubuntu --node-os-distro=ubuntu" \
            --focus-regex="\[Serial\]" \
            --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
            --timeout=500m \
            --use-built-binaries=true \
            --parallel=1
        command:
        - runner.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
      serviceAccountName: k8s-kops-test
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-disruptive-canary
    decorate: true
    decoration_config:
      timeout: 10h30m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/kops
      repo: kops
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-storage-e2e-service-account: "true"
    name: pull-kubernetes-e2e-gce-disruptive-canary
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - bash
        - -c
        - |
          ARGS="--set=spec.containerd.runc.version=1.1.9  --set=spec.packages=nfs-common --set=spec.containerd.version=1.7.5"
          make -C $GOPATH/src/k8s.io/kops test-e2e-install
          kubetest2 kops -v=6 --cloud-provider=gce --up --down --build \
            --build-kubernetes=true --target-build-arch=linux/amd64 \
            --admin-access=0.0.0.0/0 \
            --kops-version-marker=https://storage.googleapis.com/k8s-staging-kops/kops/releases/markers/master/latest-ci.txt \
            --create-args "$ARGS --node-count=3 --networking=kubenet --set=spec.nodeProblemDetector.enabled=true" \
            --test=kops \
            -- \
            --test-args="-test.timeout=600m --num-nodes=3 --master-os-distro=ubuntu --node-os-distro=ubuntu" \
            --focus-regex="\[Disruptive\]" \
            --skip-regex="\[Driver:.gcepd\]|\[Flaky\]|\[Feature:.+\]|\[KubeUp\]" \
            --timeout=500m \
            --use-built-binaries=true \
            --parallel=1
        command:
        - runner.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
      serviceAccountName: k8s-kops-test
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-e2e-gce-cloud-provider-disabled
    decorate: true
    decoration_config:
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-e2e-gce-cloud-provider-disabled
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --env=KUBE_FEATURE_GATES=DisableCloudProviders=true,DisableKubeletCloudCredentialProviders=true
        - --env=CLOUD_PROVIDER_FLAG=external
        - --env=ENABLE_AUTH_PROVIDER_GCP=true
        - --gcp-master-image=gci
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --test_args=--ginkgo.skip=\[Driver:.gcepd\]|\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
        - --timeout=80m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    decorate: true
    decoration_config:
      timeout: 1h30m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-gce-device-plugin-gpu: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-service-account: "true"
    max_concurrency: 5
    name: pull-kubernetes-e2e-gce-device-plugin-gpu
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --env=KUBE_NODE_OS_DISTRIBUTION=gci
        - --env=KUBE_GCE_NODE_IMAGE=cos-109-17800-147-22
        - --env=KUBE_GCE_NODE_PROJECT=cos-cloud
        - --gcp-node-image=gci
        - --gcp-nodes=4
        - --gcp-project-type=gpu-project
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --test_args=--ginkgo.focus=\[Feature:GPUDevicePlugin\] --minStartupPods=8
        - --timeout=60m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 14Gi
          requests:
            cpu: "4"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-containerd-gce
    decorate: true
    decoration_config:
      timeout: 1h45m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-pull-kubernetes-e2e: "true"
      preset-pull-kubernetes-e2e-gce: "true"
      preset-service-account: "true"
    name: pull-kubernetes-e2e-containerd-gce
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --env=LOG_DUMP_SYSTEMD_SERVICES=containerd
        - --gcp-node-image=gci
        - --gcp-zone=us-west1-b
        - --ginkgo-parallel=30
        - --provider=gce
        - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[NodeFeature:RuntimeHandler\] --minStartupPods=8
        - --timeout=80m
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 6Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-node-e2e-containerd
    decorate: true
    decoration_config:
      timeout: 1h30m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-kubernetes-node-e2e-containerd
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --deployment=node
        - --gcp-zone=us-west1-b
        - '--node-test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --node-tests=true
        - --provider=gce
        - --test_args=--nodes=8 --focus="\[NodeConformance\]" --skip="\[Flaky\]|\[Slow\]|\[Serial\]"
        - --timeout=65m
        - --node-args=--image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 6Gi
  - always_run: false
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-node-e2e-containerd-ec2
    decorate: true
    extra_refs:
    - base_ref: main
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/provider-aws-test-infra
      repo: provider-aws-test-infra
      workdir: true
    labels:
      preset-e2e-containerd-ec2: "true"
    max_concurrency: 50
    name: pull-kubernetes-node-e2e-containerd-ec2
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - hack/make-rules/test-e2e-node.sh
        command:
        - runner.sh
        env:
        - name: FOCUS
          value: NodeConformance
        - name: IMAGE_CONFIG_DIR
          value: config
        - name: IMAGE_CONFIG_FILE
          value: aws-instance.yaml
        - name: TEST_ARGS
          value: --kubelet-flags="--cgroup-driver=systemd"
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 6Gi
      serviceAccountName: node-e2e-tests
  - always_run: false
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-node-arm64-e2e-containerd-ec2
    decorate: true
    extra_refs:
    - base_ref: main
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/provider-aws-test-infra
      repo: provider-aws-test-infra
      workdir: true
    labels:
      preset-dind-enabled: "true"
      preset-e2e-containerd-ec2: "true"
    max_concurrency: 50
    name: pull-kubernetes-node-arm64-e2e-containerd-ec2
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - hack/make-rules/test-e2e-node.sh
        command:
        - runner.sh
        env:
        - name: FOCUS
          value: NodeConformance
        - name: USE_DOCKERIZED_BUILD
          value: "true"
        - name: TARGET_BUILD_ARCH
          value: linux/arm64
        - name: IMAGE_CONFIG_DIR
          value: config
        - name: IMAGE_CONFIG_FILE
          value: aws-instance-arm64.yaml
        - name: TEST_ARGS
          value: --kubelet-flags="--cgroup-driver=cgroupfs"
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 6Gi
        securityContext:
          privileged: true
      serviceAccountName: node-e2e-tests
  - always_run: false
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-node-arm64-e2e-containerd-serial-ec2
    decorate: true
    extra_refs:
    - base_ref: main
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/provider-aws-test-infra
      repo: provider-aws-test-infra
      workdir: true
    labels:
      preset-dind-enabled: "true"
      preset-e2e-containerd-ec2: "true"
    max_concurrency: 50
    name: pull-kubernetes-node-arm64-e2e-containerd-serial-ec2
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - hack/make-rules/test-e2e-node.sh
        command:
        - runner.sh
        env:
        - name: FOCUS
          value: \[Serial\]
        - name: SKIP
          value: \[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]
        - name: USE_DOCKERIZED_BUILD
          value: "true"
        - name: TARGET_BUILD_ARCH
          value: linux/arm64
        - name: IMAGE_CONFIG_DIR
          value: config
        - name: IMAGE_CONFIG_FILE
          value: aws-instance-arm64.yaml
        - name: TEST_ARGS
          value: --kubelet-flags="--cgroup-driver=systemd"
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "8"
            memory: 10Gi
          requests:
            cpu: "8"
            memory: 10Gi
        securityContext:
          privileged: true
      serviceAccountName: node-e2e-tests
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-node-arm64-ubuntu-serial-gce
    decorate: true
    decoration_config:
      timeout: 3h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-dind-enabled: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    name: pull-kubernetes-node-arm64-ubuntu-serial-gce
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-central1-a
        - --parallelism=1
        - --focus-regex=\[Serial\]
        - --use-dockerized-build=true
        - --target-build-arch=linux/arm64
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]|\[Feature:DynamicResourceAllocation\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/arm/image-config-serial.yaml
        command:
        - runner.sh
        env:
        - name: GOPATH
          value: /go
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 6Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-node-e2e-containerd-kubetest2
    decorate: true
    decoration_config:
      timeout: 1h5m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/test-infra
      repo: test-infra
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    name: pull-kubernetes-node-e2e-containerd-kubetest2
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - kubetest2
        - noop
        - --test=node
        - --
        - --repo-root=.
        - --gcp-zone=us-west1-b
        - --parallelism=8
        - --focus-regex=\[NodeConformance\]
        - --skip-regex=\[Flaky\]|\[Slow\]|\[Serial\]
        - '--test-args=--container-runtime-endpoint=unix:///run/containerd/containerd.sock --container-runtime-process-name=/usr/bin/containerd --container-runtime-pid-file= --kubelet-flags="--cgroup-driver=systemd --cgroups-per-qos=true --cgroup-root=/ --runtime-cgroups=/system.slice/containerd.service" --extra-log="{\"name\": \"containerd.log\", \"journalctl\": [\"-u\", \"containerd*\"]}"'
        - --image-config-file=/home/prow/go/src/k8s.io/test-infra/jobs/e2e_node/containerd/image-config-systemd.yaml
        command:
        - runner.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 6Gi
          requests:
            cpu: "4"
            memory: 6Gi
  - always_run: false
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-node-e2e-containerd-serial-ec2
    decorate: true
    extra_refs:
    - base_ref: main
      org: kubernetes-sigs
      path_alias: sigs.k8s.io/provider-aws-test-infra
      repo: provider-aws-test-infra
      workdir: true
    labels:
      preset-dind-enabled: "true"
      preset-e2e-containerd-ec2: "true"
    max_concurrency: 50
    name: pull-kubernetes-node-e2e-containerd-serial-ec2
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - hack/make-rules/test-e2e-node.sh
        command:
        - runner.sh
        env:
        - name: FOCUS
          value: \[Serial\]
        - name: IMAGE_CONFIG_DIR
          value: config
        - name: IMAGE_CONFIG_FILE
          value: aws-instance.yaml
        - name: SKIP
          value: \[Flaky\]|\[Benchmark\]|\[NodeSpecialFeature:.+\]|\[NodeSpecialFeature\]|\[NodeAlphaFeature:.+\]|\[NodeAlphaFeature\]|\[NodeFeature:Eviction\]
        - name: TEST_ARGS
          value: --kubelet-flags="--cgroup-driver=systemd"
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "8"
            memory: 10Gi
          requests:
            cpu: "8"
            memory: 10Gi
      serviceAccountName: node-e2e-tests
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-gce-100-performance
    decorate: true
    decoration_config:
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/perf-tests
      repo: perf-tests
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-presubmits: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-kubernetes-e2e-gce-100-performance
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=e2-standard-8
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --flush-mem-after-build=true
        - --gcp-node-image=gci
        - --gcp-nodes=100
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --tear-down-previous
        - --env=CL2_ENABLE_DNS_PROGRAMMING=true
        - --env=CL2_SCHEDULER_THROUGHPUT_THRESHOLD=0
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--prometheus-scrape-kubelets=true
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/load_throughput.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "6"
            memory: 14Gi
          requests:
            cpu: "6"
            memory: 14Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-kubemark-e2e-gce-big
    decorate: true
    decoration_config:
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/perf-tests
      repo: perf-tests
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-scalability-presubmits: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-kubernetes-kubemark-e2e-gce-big
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --flush-mem-after-build=true
        - --gcp-master-size=n2-standard-4
        - --gcp-node-size=e2-standard-8
        - --gcp-nodes=7
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=500
        - --kubemark-master-size=n2-standard-16
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=160 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --provider=gce
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--nodes=500
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/kubemark_500_nodes.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "6"
            memory: 16Gi
          requests:
            cpu: "6"
            memory: 16Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-kubemark-e2e-gce-scale
    decorate: true
    decoration_config:
      timeout: 18h20m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/perf-tests
      repo: perf-tests
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-kubemark-gce-scale: "true"
      preset-e2e-scalability-presubmits: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-kubernetes-kubemark-e2e-gce-scale
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - --build=quick
        - --cluster=
        - --flush-mem-after-build=true
        - --gcp-node-size=e2-standard-8
        - --gcp-nodes=84
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=5000
        - --kubemark-master-size=n2-standard-64
        - --provider=gce
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=640 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
        - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
        - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
        - --test-cmd-args=--nodes=5000
        - --test-cmd-args=--provider=kubemark
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=1080m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "6"
            memory: 16Gi
          requests:
            cpu: "6"
            memory: 16Gi
        securityContext:
          privileged: true
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-conformance-kind-ipv6-parallel
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-service-account: "true"
    max_concurrency: 8
    name: pull-kubernetes-conformance-kind-ipv6-parallel
    optional: true
    path_alias: k8s.io/kubernetes
    run_if_changed: ^test/
    spec:
      containers:
      - command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: DOCKER_IN_DOCKER_IPV6_ENABLED
          value: "true"
        - name: IP_FAMILY
          value: ipv6
        - name: PARALLEL
          value: "true"
        image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 9000Mi
          requests:
            cpu: "4"
            memory: 9000Mi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-dependencies
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-kubernetes-dependencies
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - make
        - verify
        command:
        - runner.sh
        env:
        - name: WHAT
          value: external-dependencies-version vendor vendor-licenses
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: main
        resources:
          limits:
            cpu: "2"
            memory: 1288490188800m
          requests:
            cpu: "2"
            memory: 1288490188800m
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-integration
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-kubernetes-integration
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - ./hack/jenkins/test-dockerized.sh
        command:
        - runner.sh
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "6"
            memory: 15Gi
          requests:
            cpu: "6"
            memory: 15Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-integration-go-compatibility
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-kubernetes-integration-go-compatibility
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - ./hack/jenkins/test-dockerized.sh
        command:
        - runner.sh
        env:
        - name: GO_VERSION
          value: 1.21.4
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "6"
            memory: 15Gi
          requests:
            cpu: "6"
            memory: 15Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-kind
    decorate: true
    decoration_config:
      grace_period: 15m0s
      timeout: 1h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    name: pull-kubernetes-e2e-kind
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FOCUS
          value: .
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|PodSecurityPolicy|LoadBalancer|load.balancer|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing|NFS|nfs|inline.execution.and.attach|should.be.rejected.when.no.endpoints.exist
        - name: PARALLEL
          value: "true"
        image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "7"
            memory: 9000Mi
          requests:
            cpu: "7"
            memory: 9000Mi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-e2e-kind-ipv6
    decorate: true
    decoration_config:
      grace_period: 15m0s
      timeout: 1h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    name: pull-kubernetes-e2e-kind-ipv6
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: FOCUS
          value: .
        - name: SKIP
          value: \[Slow\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[sig-storage\]|PodSecurityPolicy|LoadBalancer|load.balancer|In-tree.Volumes.\[Driver:.nfs\]|PersistentVolumes.NFS|Simple.pod.should.support.exec.through.an.HTTP.proxy|subPath.should.support.existing
        - name: PARALLEL
          value: "true"
        - name: DOCKER_IN_DOCKER_IPV6_ENABLED
          value: "true"
        - name: IP_FAMILY
          value: ipv6
        image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 9Gi
          requests:
            cpu: "4"
            memory: 9Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-conformance-kind-ga-only-parallel
    decorate: true
    decoration_config:
      grace_period: 15m0s
      timeout: 1h0m0s
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    name: pull-kubernetes-conformance-kind-ga-only-parallel
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - command:
        - wrapper.sh
        - bash
        - -c
        - curl -sSL https://kind.sigs.k8s.io/dl/latest/linux-amd64.tgz | tar xvfz - -C "${PATH%%:*}/" && e2e-k8s.sh
        env:
        - name: GA_ONLY
          value: "true"
        - name: PARALLEL
          value: "true"
        image: gcr.io/k8s-staging-test-infra/krte:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 9Gi
          requests:
            cpu: "4"
            memory: 9Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-unit
    decorate: true
    labels:
      preset-service-account: "true"
    name: pull-kubernetes-unit
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - command:
        - make
        - test
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 36Gi
          requests:
            cpu: "4"
            memory: 36Gi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsGroup: 2010
        runAsUser: 2001
  - always_run: true
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-unit-go-compatibility
    decorate: true
    labels:
      preset-service-account: "true"
    name: pull-kubernetes-unit-go-compatibility
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - command:
        - make
        - test
        env:
        - name: GO_VERSION
          value: 1.21.4
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "4"
            memory: 36Gi
          requests:
            cpu: "4"
            memory: 36Gi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsGroup: 2010
        runAsUser: 2001
  - always_run: true
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-typecheck
    decorate: true
    name: pull-kubernetes-typecheck
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - verify
        command:
        - make
        env:
        - name: WHAT
          value: typecheck typecheck-providerless
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: main
        resources:
          limits:
            cpu: "5"
            memory: 32Gi
          requests:
            cpu: "5"
            memory: 32Gi
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-kubernetes-update
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-kubernetes-update
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - ./hack/jenkins/update-dockerized.sh
        command:
        - runner.sh
        env:
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: release-1.29
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: "7"
            memory: 12Gi
          requests:
            cpu: "7"
            memory: 12Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-verify
    decorate: true
    labels:
      preset-dind-enabled: "true"
      preset-service-account: "true"
    name: pull-kubernetes-verify
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - ./hack/jenkins/verify-dockerized.sh
        command:
        - runner.sh
        env:
        - name: EXCLUDE_TYPECHECK
          value: "y"
        - name: EXCLUDE_GODEP
          value: "y"
        - name: KUBE_VERIFY_GIT_BRANCH
          value: release-1.29
        - name: REPO_DIR
          value: /workspace/k8s.io/kubernetes
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: "7"
            memory: 12Gi
          requests:
            cpu: "7"
            memory: 12Gi
        securityContext:
          privileged: true
  - always_run: true
    branches:
    - release-1.29
    cluster: eks-prow-build-cluster
    context: pull-kubernetes-linter-hints
    decorate: true
    name: pull-kubernetes-linter-hints
    optional: true
    path_alias: k8s.io/kubernetes
    spec:
      containers:
      - args:
        - verify
        - WHAT=golangci-lint-pr-hints
        command:
        - make
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "5"
            memory: 12Gi
          requests:
            cpu: "5"
            memory: 12Gi
  kubernetes/perf-tests:
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-perf-tests-clusterloader2
    decorate: true
    decoration_config:
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-e2e-scalability-common: "true"
      preset-e2e-scalability-presubmits: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 3
    name: pull-perf-tests-clusterloader2
    path_alias: k8s.io/perf-tests
    run_if_changed: ^clusterloader2/.*$
    spec:
      containers:
      - args:
        - --cluster=
        - --env=HEAPSTER_MACHINE_TYPE=e2-standard-8
        - --extract=ci/latest
        - --gcp-nodes=100
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --provider=gce
        - --tear-down-previous
        - --env=CL2_ENABLE_DNS_PROGRAMMING=true
        - --env=CL2_SCHEDULER_THROUGHPUT_THRESHOLD=0
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --test=false
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--provider=gce
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/load_throughput.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "2"
            memory: 6Gi
          requests:
            cpu: "2"
            memory: 6Gi
  - always_run: false
    branches:
    - release-1.29
    cluster: k8s-infra-prow-build
    context: pull-perf-tests-clusterloader2-kubemark
    decorate: true
    decoration_config:
      timeout: 2h0m0s
    extra_refs:
    - base_ref: master
      org: kubernetes
      path_alias: k8s.io/release
      repo: release
    labels:
      preset-dind-enabled: "true"
      preset-e2e-kubemark-common: "true"
      preset-e2e-scalability-presubmits: "true"
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 3
    name: pull-perf-tests-clusterloader2-kubemark
    path_alias: k8s.io/perf-tests
    run_if_changed: ^clusterloader2/.*$
    spec:
      containers:
      - args:
        - --cluster=
        - --extract=ci/latest
        - --gcp-master-size=n2-standard-2
        - --gcp-node-size=e2-standard-4
        - --gcp-nodes=4
        - --gcp-project-type=scalability-project
        - --gcp-zone=us-east1-b
        - --kubemark
        - --kubemark-nodes=100
        - --kubemark-master-size=n2-standard-8
        - --env=KUBEMARK_APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
        - --provider=gce
        - --tear-down-previous
        - --test=false
        - --test_args=--ginkgo.focus=xxxx
        - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
        - --test-cmd-args=cluster-loader2
        - --test-cmd-args=--nodes=100
        - --test-cmd-args=--prometheus-scrape-node-exporter
        - --test-cmd-args=--provider=kubemark
        - --env=CL2_ENABLE_DNS_PROGRAMMING=true
        - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
        - --test-cmd-args=--report-dir=$(ARTIFACTS)
        - --test-cmd-args=--testconfig=testing/load/config.yaml
        - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
        - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
        - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
        - --test-cmd-args=--testoverrides=./testing/overrides/kubemark_load_throughput.yaml
        - --test-cmd-name=ClusterLoaderV2
        - --timeout=100m
        - --use-logexporter
        - --logexporter-gcs-path=gs://k8s-infra-scalability-tests-logs/$(JOB_NAME)/$(BUILD_ID)
        command:
        - runner.sh
        - /workspace/scenarios/kubernetes_e2e.py
        image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        name: ""
        resources:
          limits:
            cpu: "2"
            memory: 6Gi
          requests:
            cpu: "2"
            memory: 6Gi
        securityContext:
          privileged: true
