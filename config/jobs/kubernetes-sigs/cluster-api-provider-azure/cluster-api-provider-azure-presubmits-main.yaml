presubmits:
  kubernetes-sigs/cluster-api-provider-azure:
  - name: pull-cluster-api-provider-azure-test
    cluster: eks-prow-build-cluster
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    extra_refs:
    - org: kubernetes
      repo: test-infra
      base_ref: master
      path_alias: k8s.io/test-infra
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
        - runner.sh
        args:
        - bash
        - -c
        - |
          result=0
          ./scripts/ci-test-coverage.sh || result=$?
          cp coverage.* ${ARTIFACTS}
          cd ../../k8s.io/test-infra/gopherage
          GO111MODULE=on go build .
          ./gopherage filter --exclude-path="zz_generated,generated\.go" "${ARTIFACTS}/coverage.out" > "${ARTIFACTS}/filtered.cov" || result=$?
          ./gopherage html "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/coverage.html" || result=$?
          ./gopherage junit --threshold 0 "${ARTIFACTS}/filtered.cov" > "${ARTIFACTS}/junit_coverage.xml" || result=$?
          exit $result
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 6
            memory: 16Gi
          requests:
            cpu: 6
            memory: 16Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-test-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-build
    cluster: eks-prow-build-cluster
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
        - "./scripts/ci-build.sh"
        resources:
          limits:
            cpu: 6
            memory: 8Gi
          requests:
            cpu: 6
            memory: 8Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-build-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: false
    decorate: true
    skip_if_only_changed: "^docs/|^\\.github/|\\.md$|^(\\.codespellignore|LICENSE|OWNERS|OWNERS_ALIASES|PROJECT|SECURITY_CONTACTS|Tiltfile|Makefile|metadata\\.yaml|netlify\\.toml|tilt-provider\\.json)$"
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[REQUIRED\]
          - name: GINKGO_SKIP
            value: ""
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      serviceAccountName: azure
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-optional
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[OPTIONAL\]
          - name: GINKGO_SKIP
            value: ""
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      serviceAccountName: azure
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-optional-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-e2e-aks
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: false
    decorate: true
    decoration_config:
      timeout: 4h
    skip_if_only_changed: "^docs/|^\\.github/|\\.md$|^(\\.codespellignore|LICENSE|OWNERS|OWNERS_ALIASES|PROJECT|SECURITY_CONTACTS|Tiltfile|Makefile|metadata\\.yaml|netlify\\.toml|tilt-provider\\.json)$"
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: \[Managed Kubernetes\]
          - name: GINKGO_SKIP
            value: ""
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-aks-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-capi-e2e
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    run_if_changed: 'test\/e2e\/capi_test.go|scripts\/ci-e2e.sh|^go.mod'
    optional: true
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-e2e.sh
        env:
          - name: GINKGO_FOCUS
            value: "Cluster API E2E tests"
          - name: GINKGO_SKIP
            value: "\\[K8s-Upgrade\\]|API Version Upgrade"
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-capi-e2e-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-verify
    cluster: eks-prow-build-cluster
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    labels:
      # required for shellcheck in container.
      preset-dind-enabled: "true"
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
        - "runner.sh"
        - "make"
        - "verify"
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 4Gi
          requests:
            cpu: 4
            memory: 4Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-verify-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-conformance
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-conformance.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
  - name: pull-cluster-api-provider-azure-conformance-with-ci-artifacts
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-k8s-ci-main
  - name: pull-cluster-api-provider-azure-conformance-ipv6-with-ci-artifacts
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
            - name: IP_FAMILY
              value: "IPv6"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-ipv6-k8s-ci-main
  - name: pull-cluster-api-provider-azure-conformance-dual-stack-with-ci-artifacts
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
            - name: IP_FAMILY
              value: "dual"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-dual-stack-k8s-ci-main
  - name: pull-cluster-api-provider-azure-windows-with-ci-artifacts
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decorate: true
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: E2E_ARGS
              value: "-kubetest.use-ci-artifacts"
            - name: WINDOWS
              value: "true"
            - name: WINDOWS_FLAVOR
              value: "containerd"
            # Windows isn't really conformance, we typically run at 4 to keep the time reasonable (~45 mins)
            - name: CONFORMANCE_NODES
              value: "4"
            - name: WINDOWS_SERVER_VERSION
              value: "windows-2019"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-upstream-k8s-ci-windows-containerd-main
  - name: pull-cluster-api-provider-azure-apidiff
    cluster: k8s-infra-prow-build
    decorate: true
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    always_run: true
    optional: true
    branches:
    - ^main$
    spec:
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-apidiff.sh
        resources:
          limits:
            cpu: 2
            memory: "9Gi"
          requests:
            cpu: 2
            memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-apidiff-main
  - name: pull-cluster-api-provider-azure-e2e-workload-upgrade
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    decorate: true
    optional: true
    always_run: false
    decoration_config:
      timeout: 4h
    branches:
    - ^main$
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        args:
          - runner.sh
          - "./scripts/ci-e2e.sh"
        env:
          - name: GINKGO_FOCUS
            value: "\\[K8s-Upgrade\\]"
        # we need privileged mode in order to do docker in docker
        securityContext:
          privileged: true
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 2
            memory: 4Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-e2e-upgrade
  - name: pull-cluster-api-provider-azure-apiversion-upgrade
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    decorate: true
    run_if_changed: '^(test\/e2e\/(config\/azure-dev\.yaml|data\/shared\/v1beta1_provider\/metadata\.yaml)|azure\/scope\/.*)$'
    optional: false
    always_run: false
    branches:
      - ^main$
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    extra_refs:
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          args:
            - runner.sh
            - "./scripts/ci-e2e.sh"
          env:
            - name: GINKGO_FOCUS
              value: "API Version Upgrade"
            - name: KUBERNETES_VERSION
              value: "v1.27.16"
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-apiversion-upgrade-main
      description: This job creates clusters using supported older api versions (v1alpha4), and verifies that the clusters continue to operate properly after the api version is upgraded to the latest (v1beta1).
  - name: pull-cluster-api-provider-azure-ci-entrypoint
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    optional: false
    decorate: true
    run_if_changed: '^scripts\/|^hack/|templates\/test'
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
        command:
          - runner.sh
        args:
          - ./scripts/ci-entrypoint.sh
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        env:
          - name: TEST_WINDOWS
            value: "true"
          - name: WINDOWS_SERVER_VERSION
            value: "windows-2022"
        resources:
          limits:
            cpu: 4
            memory: 9Gi
          requests:
            cpu: 4
            memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-ci-entrypoint-main
      testgrid-alert-email: k8s-infra-staging-cluster-api-azure@kubernetes.io
      description: Creates a CAPZ cluster and exports KUBECONFIG. This job validates ci-entrypoint.sh used by other repositories for running tests on CAPZ clusters.
  - name: pull-cluster-api-provider-azure-conformance-custom-builds
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: TEST_K8S
              value: "true"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-conformance-custom-k8s-main
  - name: pull-cluster-api-provider-azure-windows-custom-builds
    cluster: eks-prow-build-cluster
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    decorate: true
    run_if_changed: 'test\/e2e\/conformance_test.go|templates\/test|^scripts\/|conformance.mk'
    decoration_config:
      timeout: 4h
    max_concurrency: 5
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          command:
            - runner.sh
          args:
            - ./scripts/ci-conformance.sh
          env:
            - name: TEST_K8S
              value: "true"
            - name: WINDOWS
              value: "true"
            # Windows isn't really conformance, we typically run at 4 to keep the time reasonable (~45 mins)
            - name: CONFORMANCE_NODES
              value: "4"
            - name: WINDOWS_SERVER_VERSION
              value: "windows-2019"
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-windows-containerd-upstream-custom-k8s-main
  - name: pull-cluster-api-provider-azure-load-test-custom-builds
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 8h
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    always_run: false
    optional: true
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    branches:
    - ^main$
    extra_refs:
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
    - org: Jont828
      repo: perf-tests
      base_ref: "cl2-namespace-fix"
      path_alias: "k8s.io/perf-tests"
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - runner.sh
        - ./scripts/ci-entrypoint.sh
        args:
        - bash
        - -c
        - >-
          sleep 300 &&
          cd ${GOPATH}/src/k8s.io/perf-tests/ &&
          ./run-e2e.sh cluster-loader2
          --nodes=100 \
          --provider=aks \
          --testconfig=testing/load/config.yaml \
          --testconfig=testing/huge-service/config.yaml \
          --testconfig=testing/access-tokens/config.yaml \
          --testoverrides=./testing/experiments/enable_restart_count_check.yaml \
          --testoverrides=./testing/experiments/use_simple_latency_query.yaml \
          --testoverrides=./testing/overrides/load_throughput.yaml \
          --report-dir=${ARTIFACTS}
          --v=2
        securityContext:
          privileged: true
        env:
          # CAPZ variables
        - name: TEST_K8S
          value: "true"
        - name: WINDOWS
          value: "false"
        - name: CLUSTER_TEMPLATE
          value: "templates/test/dev/cluster-template-custom-builds-load.yaml"
        - name: AZURE_LOCATION
          value: "northeurope"
        - name: AZURE_CONTROL_PLANE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: CONTROL_PLANE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: AZURE_NODE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: NODE_MACHINE_TYPE
          value: "Standard_D8s_v3"
        - name: TEST_WINDOWS
          value: "false"
        - name: "CONTROL_PLANE_MACHINE_COUNT"
          value: "5"
        - name: WINDOWS_WORKER_MACHINE_COUNT
          value: "0" # Don't create windows workers
        - name: WORKER_MACHINE_COUNT
          value: "100"
        # From google cl2
        - name: CL2_ENABLE_DNS_PROGRAMMING
          value: "true"
        - name: CL2_SCHEDULER_THROUGHPUT_THRESHOLD
          value: "0"
        - name: CL2_ENABLE_API_AVAILABILITY_MEASUREMENT
          value: "true"
        - name: CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD
          value: "99.5"
        # Don't install Azure disk CSI driver as it's installed using a HelmChartProxy
        - name: DEPLOY_AZURE_CSI_DRIVER
          value: "false"
        resources:
          requests:
            cpu: "4"
            memory: "9Gi"
          limits:
            cpu: "4"
            memory: "9Gi"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-scalability-100-node-k8s-main
  - name: pull-cluster-api-provider-azure-apiserver-ilb
    cluster: eks-prow-build-cluster
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
    decorate: true
    optional: true
    always_run: false
    branches:
      - ^main$
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    extra_refs:
      - org: kubernetes
        repo: kubernetes
        base_ref: master
        path_alias: k8s.io/kubernetes
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-1.29
          args:
            - runner.sh
            - "./scripts/ci-e2e.sh"
          env:
            - name: GINKGO_FOCUS
              value: "\\[API-Server-ILB\\]"
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: 4
              memory: 9Gi
            requests:
              cpu: 4
              memory: 9Gi
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-azure
      testgrid-tab-name: capz-pr-apiserver-ilb-main
      description: This job creates a vanilla CAPZ cluster with an ILB for the API server and verifies that the cluster is functional.
