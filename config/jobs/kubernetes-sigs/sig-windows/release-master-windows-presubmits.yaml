# generated by ./config/jobs/kubernetes-sigs/sig-windows/generate-presubmits.sh.
presets:
- labels:
    preset-capz-windows-common-pull: "true"
  env:
  - name: WINDOWS
    value: "true"
  - name: CONFORMANCE_NODES
    value: "4"
  - name: AZURE_NODE_MACHINE_TYPE
    value: "Standard_D4s_v3"
presubmits:
  kubernetes/kubernetes:
  - name: pull-kubernetes-e2e-capz-windows-master
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    run_if_changed: 'azure.*\.go$|.*windows\.go$|test/e2e/windows/.*'
    path_alias: k8s.io/kubernetes
    branches:
      - master
      - main
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-capz-windows-2022: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-common-pull: "true"
      preset-azure-community: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: windows-testing
      base_ref: master
      path_alias: k8s.io/windows-testing
      workdir: true
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
        - "runner.sh"
        - "env"
        - "KUBERNETES_VERSION=latest"
        - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
    annotations:
      fork-per-release: "true"
      fork-per-release-replacements: "KUBERNETES_VERSION=latest -> KUBERNETES_VERSION=latest-{{.Version}}"
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-capz-windows
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-capz-windows-serial-slow
    cluster: eks-prow-build-cluster
    decorate: true
    decoration_config:
      timeout: 4h
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - master
      - main
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-capz-windows-2022: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-common-pull: "true"
      preset-azure-community: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: windows-testing
      base_ref: master
      path_alias: k8s.io/windows-testing
      workdir: true
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: GINKGO_FOCUS
            value: (\[sig-windows\]|\[sig-scheduling\].SchedulerPreemption|\[sig-apps\].CronJob).*(\[Serial\]|\[Slow\])|(\[Serial\]|\[Slow\]).*(\[Conformance\]|\[NodeConformance\])|\[sig-api-machinery\].Garbage.collector
          - name: GINKGO_SKIP
            value: \[LinuxOnly\]|device.plugin.for.Windows|\[sig-autoscaling\].\[Feature:HPA\]
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-capz-windows-serial-slow
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-capz-windows-serial-slow-hpa
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - master
      - main
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-capz-windows-2022: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-common-pull: "true"
      preset-azure-community: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: windows-testing
      base_ref: master
      path_alias: k8s.io/windows-testing
      workdir: true
    spec:
      serviceAccountName: azure
      containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: GINKGO_FOCUS
            value: (\[sig-autoscaling\].\[Feature:HPA\]).*(\[Serial\]|\[Slow\])
          - name: GINKGO_SKIP
            value: \[LinuxOnly\]
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-capz-windows-serial-slow-hpa
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-capz-windows-alpha-features
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - master
      - main
    labels:
      preset-dind-enabled: "true"
      preset-azure-community: "true"
      preset-capz-windows-2022: "true"
      preset-capz-windows-common-pull: "true"
    extra_refs:
      - org: kubernetes-sigs
        repo: cluster-api-provider-azure
        base_ref: release-1.17
        path_alias: sigs.k8s.io/cluster-api-provider-azure
        workdir: false
      - org: kubernetes-sigs
        repo: cloud-provider-azure
        base_ref: master
        path_alias: sigs.k8s.io/cloud-provider-azure
        workdir: false
      - org: kubernetes-sigs
        repo: windows-testing
        base_ref: master
        path_alias: k8s.io/windows-testing
        workdir: true
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
            - name: NODE_FEATURE_GATES
              value: "PodAndContainerStatsFromCRI=true"
            - name: WINDOWS_CONTAINERD_URL
              value: "https://github.com/kubernetes-sigs/sig-windows-tools/releases/download/windows-containerd-nightly/windows-containerd.tar.gz"
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-capz-windows-alpha-features
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-capz-windows-alpha-feature-vpa
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - master
      - main
    labels:
      preset-dind-enabled: "true"
      preset-azure-community: "true"
      preset-capz-windows-2022: "true"
      preset-capz-windows-common-pull: "true"
      preset-capz-containerd-1-7-latest: "true"
    extra_refs:
      - org: kubernetes-sigs
        repo: cluster-api-provider-azure
        base_ref: release-1.17
        path_alias: sigs.k8s.io/cluster-api-provider-azure
        workdir: false
      - org: kubernetes-sigs
        repo: cloud-provider-azure
        base_ref: master
        path_alias: sigs.k8s.io/cloud-provider-azure
        workdir: false
      - org: kubernetes-sigs
        repo: windows-testing
        base_ref: master
        path_alias: k8s.io/windows-testing
        workdir: true
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
            - name: API_SERVER_FEATURE_GATES
              value: "InPlacePodVerticalScaling=true"
            - name: NODE_FEATURE_GATES
              value: "InPlacePodVerticalScaling=true"
            - name: SCHEDULER_FEATURE_GATES
              value: "InPlacePodVerticalScaling=true"
            - name: GINKGO_FOCUS
              value: (\[Feature:InPlacePodVerticalScaling\]|\[sig-windows\]) # run the feature and a few windows related tests
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-kubernetes-e2e-capz-windows-alpha-feature-vertical-pod-autoscaler
      testgrid-num-columns-recent: '30'
  - name: pull-kubernetes-e2e-capz-master-windows-nodelogquery
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    path_alias: k8s.io/kubernetes
    branches:
      - master
      - main
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
      preset-capz-windows-common: "true"
      preset-capz-windows-2022: "true"
      preset-capz-containerd-1-7-latest: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
    - org: kubernetes-sigs
      repo: windows-testing
      base_ref: master
      path_alias: sigs.k8s.io/windows-testing
      workdir: true
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
            - name: GINKGO_FOCUS
              value: \[Feature:NodeLogQuery\] # run the NodeLogQuery tests
            - name: GINKGO_SKIP
              value: \[Serial\]|\[Slow\]
            - name: NODE_FEATURE_GATES
              value: "NodeLogQuery=true"
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-master-windows-nodelogquery
      testgrid-num-columns-recent: '30'
  kubernetes-sigs/windows-testing:
  - name: pull-e2e-capz-windows-2022-extension
    cluster: k8s-infra-prow-build
    decorate: true
    always_run: false
    optional: true
    run_if_changed: 'capz/.*'
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/windows-testing
    branches:
      - master
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-capz-windows-common: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-azure-community: "true"
      preset-capz-windows-2022: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
          - name: GINKGO_FOCUS
            value: \[sig-windows\] # run just a subset to speed up testing time
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-e2e-capz-windows-extension
  - name: pull-e2e-capz-windows-2022-extension-community-gke
    cluster: k8s-infra-prow-build
    decorate: true
    always_run: false
    optional: true
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/windows-testing
    branches:
      - master
    labels:
      preset-dind-enabled: "true"
      preset-capz-windows-common: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-2022: "true"
      preset-azure-community: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
          - name: GINKGO_FOCUS
            value: \[sig-windows\] # run just a subset to speed up testing time
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-e2e-capz-windows-extension-community-gke
  - name: pull-e2e-capz-windows-2022-extension-community-eks
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/windows-testing
    branches:
      - master
    labels:
      preset-dind-enabled: "true"
      preset-capz-windows-common: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-2022: "true"
      preset-azure-community: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
          - name: GINKGO_FOCUS
            value: \[sig-windows\] # run just a subset to speed up testing time
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-e2e-capz-windows-extension-community-eks
  - name: pull-e2e-run-capz-sh-windows-2022-hyperv
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    run_if_changed: 'helpers/hyper-v-mutating-webhook/.*'
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/windows-testing
    branches:
      - master
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
      preset-capz-windows-common: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-2022: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
          - name: HYPERV
            value: "true"
          - name: GINKGO_FOCUS
            value: \[Feature:WindowsHyperVContainers\] # run just a subset to speed up testing time
          - name: GINKGO_SKIP
            value: \[LinuxOnly\] #must set some value otherwise default is used.  The focus of WindowsHyperVContainers will select just those tests
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-e2e-run-capz-sh-windows-2022-hyperv
  - name: pull-e2e-capz-windows-2022-extension-gmsa
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    run_if_changed: 'capz/gmsa/.*|capz/templates/gmsa.yaml'
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/windows-testing
    branches:
      - master
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
      preset-capz-windows-common: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-2022: "true"
    extra_refs:
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: main
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
          - name: GINKGO_NODES
            value: "1"
          - name: GMSA
            value: "true"
          - name: GINKGO_FOCUS
            value: GMSA
          - name: GINKGO_SKIP
            value: \[LinuxOnly\] #must set some value otherwise default is used.  The focus of GMSA will select just those tests
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-e2e-capz-windows-extension-gmsa
  - name: pull-e2e-capz-validate-pr-templates
    cluster: eks-prow-build-cluster
    decorate: true
    always_run: false
    optional: true
    run_if_changed: 'capz/templates/pr/.*'
    decoration_config:
      timeout: 3h
    path_alias: k8s.io/windows-testing
    branches:
      - master
    labels:
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
      preset-azure-community: "true"
      preset-capz-containerd-1-7-latest: "true"
      preset-capz-windows-common: "true"
      preset-capz-windows-2022: "true"
    extra_refs:
    - org: kubernetes
      repo: kubernetes
      base_ref: master
      path_alias: k8s.io/kubernetes
      workdir: false
    - org: kubernetes-sigs
      repo: cluster-api-provider-azure
      base_ref: release-1.16
      path_alias: sigs.k8s.io/cluster-api-provider-azure
      workdir: false
    - org: kubernetes-sigs
      repo: cloud-provider-azure
      base_ref: master
      path_alias: sigs.k8s.io/cloud-provider-azure
      workdir: false
    spec:
      serviceAccountName: azure
      containers:
        - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
          command:
            - "runner.sh"
            - "env"
            - "KUBERNETES_VERSION=latest"
            - "./capz/run-capz-e2e.sh"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 2
              memory: "9Gi"
            limits:
              cpu: 2
              memory: "9Gi"
          env:
          - name: GINKGO_FOCUS
            value: \[sig-windows\] # run just a subset to speed up testing time
          - name: TEST_K8S # set to true to trigger the IS_PRESUBMIT workflow in capz_run_e2e.sh
            value: "true" # https://github.com/kubernetes-sigs/cluster-api-provider-azure/blob/b1c0d6f6d27c602eae98c0fac87974dfda9182ab/hack/util.sh#L32-L42
    annotations:
      testgrid-dashboards: sig-windows-presubmit
      testgrid-tab-name: pull-e2e-capz-windows-validate-pr-templates
