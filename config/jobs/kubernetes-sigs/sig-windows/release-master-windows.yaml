presets:
- labels:
    preset-capz-windows-common: "true"
  env:
  - name: E2E_ARGS
    value: "-kubetest.use-ci-artifacts"
  - name: WINDOWS
    value: "true"
  - name: TEST_WINDOWS #temp to unblock failing jobs on windows while we fix this in capz (https://github.com/kubernetes/kubernetes/issues/116474)
    value: "true"
  - name: AZURE_NODE_MACHINE_TYPE
    value: "Standard_D4s_v3"
- labels:
    preset-capz-windows-parallel: "true"
  env:
  # Windows isn't really conformance, we typically run at 4 to keep the time reasonable (~45 mins)
  - name: CONFORMANCE_NODES
    value: "4"
- labels:
    preset-capz-windows-2019: "true"
  env:
  - name: WINDOWS_FLAVOR
    value: "containerd"
- labels:
    preset-capz-windows-2022: "true"
  env:
  - name: WINDOWS_SERVER_VERSION
    value: "windows-2022"
  - name: IMAGE_VERSION
    value: "130.2.20240612" # windows july 2024 patches break networking
- labels:
    preset-capz-serial-slow: "true"
  env:
  - name: KUBETEST_WINDOWS_CONFIG
    value: "upstream-windows-serial-slow.yaml"
  # capz scripts use confromance nodes for ginkgo nodes (working on migration away from these)
  - name: CONFORMANCE_NODES
    value: "1"
  # windows-test scripts use this
  - name: GINKGO_NODES
    value: "1"
- labels:
    preset-capz-windows-ci-entrypoint-common-main: "true"
    # https://capz.sigs.k8s.io/developers/development.html#running-custom-test-suites-on-capz-clusters
  env:
    - name: KUBERNETES_VERSION
      value: "latest"
    - name: NODE_MACHINE_TYPE
      value: "Standard_D4s_v3"
    - name: TEST_WINDOWS
      value: "true"
- labels:
    preset-capz-windows-azuredisk: "true"
  env:
    - name: WINDOWS_USE_HOST_PROCESS_CONTAINERS
      value: "true"
    - name: DISABLE_ZONE
      value: "true"
    - name: WORKER_MACHINE_COUNT
      value: 0 # Don't create linux worker nodes
- labels:
    preset-capz-windows-azurefile: "true"
  env:
    - name: WINDOWS_USE_HOST_PROCESS_CONTAINERS
      value: "true"
    - name: WORKER_MACHINE_COUNT
      value: 0 # Don't create linux worker nodes
- labels:
    preset-capz-gmsa-setup: "true"
  env:
    - name: GMSA
      value: "true"
periodics:
- name: ci-kubernetes-e2e-capz-master-windows
  cluster: eks-prow-build-cluster
  interval: 3h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-capz-windows-common: "true"
    preset-capz-windows-2022: "true"
    preset-capz-containerd-1-7-latest: "true"
    preset-azure-community: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    workdir: false
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: sigs.k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest" # fork-per-release-replacements only updates args / tags and not env vars so specify k8s-version here!
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          # current recommendations are at least 1Gi /core
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
  annotations:
    fork-per-release: "true"
    fork-per-release-replacements: "KUBERNETES_VERSION=latest -> KUBERNETES_VERSION=latest-{{.Version}}"
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-release-master-informing, sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-master
- name: ci-kubernetes-e2e-capz-master-windows-serial-slow
  cluster: eks-prow-build-cluster
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 5h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-community: "true"
    preset-capz-windows-common: "true"
    preset-capz-windows-2022: "true"
    preset-capz-containerd-1-7-latest: "true"
    preset-capz-serial-slow: "true"
    preset-capz-gmsa-setup: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: sigs.k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: GINKGO_FOCUS
            value: (\[sig-windows\]|\[sig-scheduling\].SchedulerPreemption|\[sig-apps\].CronJob).*(\[Serial\]|\[Slow\])|(\[Serial\]|\[Slow\]).*(\[Conformance\]|\[NodeConformance\])|\[sig-api-machinery\].Garbage.collector
          - name: GINKGO_SKIP
            value: \[LinuxOnly\]|device.plugin.for.Windows|\[sig-autoscaling\].\[Feature:HPA\]
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-master-serial-slow
- name: ci-kubernetes-e2e-capz-master-windows-serial-slow-hpa
  cluster: eks-prow-build-cluster
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 5h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-community: "true"
    preset-capz-windows-common: "true"
    preset-capz-windows-2022: "true"
    preset-capz-containerd-1-7-latest: "true"
    preset-capz-serial-slow: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: sigs.k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: GINKGO_FOCUS
            value: (\[sig-autoscaling\].\[Feature:HPA\]).*(\[Serial\]|\[Slow\])
          - name: GINKGO_SKIP
            value: \[LinuxOnly\]|device.plugin.for.Windows|RebootHost
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-containerd-master-serial-slow-hpa
- name: ci-kubernetes-e2e-capz-master-containerd-nightly-windows
  cluster: eks-prow-build-cluster
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-community: "true"
    preset-capz-windows-common: "true"
    preset-capz-windows-2022: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        env:
          - name: WINDOWS_CONTAINERD_URL
            value: "https://github.com/kubernetes-sigs/sig-windows-tools/releases/download/windows-containerd-nightly/windows-containerd.tar.gz"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-containerd-nightly-master
- name: ci-kubernetes-e2e-capz-master-windows-alpha
  cluster: eks-prow-build-cluster
  interval: 8h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-community: "true"
    preset-capz-windows-common: "true"
    preset-capz-windows-2022: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: sigs.k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: API_SERVER_FEATURE_GATES
            value: "InPlacePodVerticalScaling=true"
          - name: GINKGO_FOCUS
            value: (\[Feature:InPlacePodVerticalScaling\]|\[Feature:NodeLogQuery\]|\[sig-windows\]) # run the features and a few windows related tests
          - name: NODE_FEATURE_GATES
            value: "InPlacePodVerticalScaling=true,NodeLogQuery=true,PodAndContainerStatsFromCRI=true,RuntimeClassInImageCriApi=true"
          - name: SCHEDULER_FEATURE_GATES
            value: "InPlacePodVerticalScaling=true"
          - name: WINDOWS_CONTAINERD_URL
            value: "https://github.com/kubernetes-sigs/sig-windows-tools/releases/download/windows-containerd-nightly/windows-containerd.tar.gz"
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release
    testgrid-tab-name: capz-windows-master-alpha-features
- name: ci-kubernetes-e2e-capz-master-windows-nodelogquery
  cluster: eks-prow-build-cluster
  interval: 24h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-community: "true"
    preset-capz-windows-common: "true"
    preset-capz-windows-2022: "true"
    preset-capz-containerd-1-7-latest: "true"
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: sigs.k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: GINKGO_FOCUS
            value: \[Feature:NodeLogQuery\] # run the NodeLogQuery tests
          - name: GINKGO_SKIP
            value: \[Serial\]|\[Slow\]
          - name: NODE_FEATURE_GATES
            value: "NodeLogQuery=true"
  annotations:
    testgrid-alert-email: sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release
    testgrid-tab-name: capz-master-windows-nodelogquery
- name: ci-kubernetes-e2e-capz-master-windows-annual-channel
  cluster: eks-prow-build-cluster
  interval: 12h
  decorate: true
  decoration_config:
    timeout: 4h
  labels:
    preset-dind-enabled: "true"
    preset-kind-volume-mounts: "true"
    preset-azure-community: "true"
    preset-capz-windows-common: "true"
    preset-capz-containerd-1-7-latest: "true"
    preset-capz-windows-2022: "true" # although it is not WS 2022, the tooling and container images treat it like WS2022
  extra_refs:
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: sigs.k8s.io/cluster-api-provider-azure
    workdir: false
  - org: kubernetes-sigs
    repo: windows-testing
    base_ref: master
    path_alias: sigs.k8s.io/windows-testing
    workdir: true
  - org: kubernetes-sigs
    repo: cloud-provider-azure
    base_ref: master
    path_alias: sigs.k8s.io/cloud-provider-azure
    workdir: false
  spec:
    serviceAccountName: azure
    containers:
      - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20241230-3006692a6f-master
        command:
          - "runner.sh"
          - "env"
          - "KUBERNETES_VERSION=latest"
          - "./capz/run-capz-e2e.sh"
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2
            memory: "9Gi"
          limits:
            cpu: 2
            memory: "9Gi"
        env:
          - name: TEMPLATE
            value: "shared-image-gallery-ci.yaml" #contains latest Annual Channel image
  annotations:
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com, sig-windows-leads@kubernetes.io
    testgrid-dashboards: sig-windows-master-release, sig-windows-signal
    testgrid-tab-name: capz-windows-master-annual-channel
